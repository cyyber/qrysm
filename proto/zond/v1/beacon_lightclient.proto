// Copyright 2023 Prysmatic Labs.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package theqrl.zond.v1;

import "proto/zond/ext/options.proto";
import "proto/zond/v1/beacon_block.proto";
import "proto/zond/v1/version.proto";
import "proto/zond/v1/sync_committee.proto";

option csharp_namespace = "TheQRL.Zond.V1";
option go_package = "github.com/theQRL/qrysm/v4/proto/zond/v1";
option java_multiple_files = true;
option java_outer_classname = "SyncCommitteeProto";
option java_package = "org.theqrl.zond.v1";
option php_namespace = "TheQRL\\Zond\\v1";

// Beacon LightClient API related messages.

message LightClientBootstrap {
  BeaconBlockHeader header = 1;
  SyncCommittee current_sync_committee = 2;
  repeated bytes current_sync_committee_branch = 3;
}

message LightClientUpdate {
  BeaconBlockHeader attested_header = 1;
  SyncCommittee next_sync_committee = 2;
  repeated bytes next_sync_committee_branch = 3;
  BeaconBlockHeader finalized_header = 4;
  repeated bytes finality_branch = 5;
  SyncAggregate sync_aggregate = 6;
  uint64 signature_slot = 7 [(theqrl.zond.ext.cast_type) = "github.com/theQRL/qrysm/v4/consensus-types/primitives.Slot"];
}

message LightClientFinalityUpdateWithVersion {
  Version version = 1;
  LightClientFinalityUpdate data = 2;
}

message LightClientFinalityUpdate {
  BeaconBlockHeader attested_header = 1;
  BeaconBlockHeader finalized_header = 2;
  repeated bytes finality_branch = 3;
  SyncAggregate sync_aggregate = 4;
  uint64 signature_slot = 5 [(theqrl.zond.ext.cast_type) = "github.com/theQRL/qrysm/v4/consensus-types/primitives.Slot"];
}

message LightClientOptimisticUpdateWithVersion {
  Version version = 1;
  LightClientOptimisticUpdate data = 2;
}

message LightClientOptimisticUpdate {
  BeaconBlockHeader attested_header = 1;
  SyncAggregate sync_aggregate = 2;
  uint64 signature_slot = 3 [(theqrl.zond.ext.cast_type) = "github.com/theQRL/qrysm/v4/consensus-types/primitives.Slot"];
}