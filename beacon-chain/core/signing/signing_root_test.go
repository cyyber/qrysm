package signing_test

import (
	"bytes"
	"testing"

	fuzz "github.com/google/gofuzz"
	dilithium2 "github.com/theQRL/go-qrllib/dilithium"
	"github.com/theQRL/go-zond/common/hexutil"
	"github.com/theQRL/qrysm/v4/beacon-chain/core/signing"
	"github.com/theQRL/qrysm/v4/encoding/bytesutil"
	zondpb "github.com/theQRL/qrysm/v4/proto/qrysm/v1alpha1"
	"github.com/theQRL/qrysm/v4/testing/assert"
	"github.com/theQRL/qrysm/v4/testing/require"
	"github.com/theQRL/qrysm/v4/testing/util"
)

func TestSigningRoot_ComputeSigningRoot(t *testing.T) {
	emptyBlock := util.NewBeaconBlockCapella()
	_, err := signing.ComputeSigningRoot(emptyBlock, bytesutil.PadTo([]byte{'T', 'E', 'S', 'T'}, 32))
	assert.NoError(t, err, "Could not compute signing root of block")
}

func TestSigningRoot_ComputeDomain(t *testing.T) {
	tests := []struct {
		epoch      uint64
		domainType [4]byte
		domain     []byte
	}{
		{epoch: 1, domainType: [4]byte{4, 0, 0, 0}, domain: []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 2, domainType: [4]byte{4, 0, 0, 0}, domain: []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 2, domainType: [4]byte{5, 0, 0, 0}, domain: []byte{5, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 3, domainType: [4]byte{4, 0, 0, 0}, domain: []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 3, domainType: [4]byte{5, 0, 0, 0}, domain: []byte{5, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
	}
	for _, tt := range tests {
		if got, err := signing.ComputeDomain(tt.domainType, nil, nil); !bytes.Equal(got, tt.domain) {
			t.Errorf("wanted domain version: %d, got: %d", tt.domain, got)
		} else {
			require.NoError(t, err)
		}
	}
}

/*
func TestSigningRoot_ComputeDomainAndSign(t *testing.T) {
	tests := []struct {
		name       string
		genState   func(t *testing.T) (state.BeaconState, []dilithium.DilithiumKey)
		genBlock   func(t *testing.T, st state.BeaconState, keys []dilithium.DilithiumKey) *zondpb.SignedBeaconBlockCapella
		domainType [4]byte
		want       []byte
	}{
		{
			name: "block proposer",
			genState: func(t *testing.T) (state.BeaconState, []dilithium.DilithiumKey) {
				beaconState, privKeys := util.DeterministicGenesisStateCapella(t, 100)
				require.NoError(t, beaconState.SetSlot(beaconState.Slot()+1))
				return beaconState, privKeys
			},
			genBlock: func(t *testing.T, st state.BeaconState, keys []dilithium.DilithiumKey) *zondpb.SignedBeaconBlockCapella {
				// block, err := util.GenerateFullBlockCapella(st, keys, nil, 1)
				block, err := util.GenerateFullBlockCapella(st, keys, nil, 2)
				require.NoError(t, err)
				return block
			},
			domainType: params.BeaconConfig().DomainBeaconProposer,
			want: []byte{
				0xd1, 0xa4, 0x1d, 0xc3, 0x64, 0x91, 0xdc, 0xf2, 0x8f, 0xac, 0x58, 0x1, 0x41, 0xc3, 0x37, 0x4, 0xbd, 0xbc, 0x30, 0x2e, 0x5f, 0x10, 0xf7, 0x36, 0x13, 0x39, 0x32, 0x99, 0x3f, 0xe7, 0xfc, 0xe3, 0x4f, 0x4d, 0xe3, 0xee, 0x54, 0xec, 0xd2, 0x98, 0xe1, 0x93, 0x4e, 0xfb, 0xde, 0xb8, 0x53, 0xc2, 0xd5, 0x52, 0xf7, 0xa7, 0x39, 0x99, 0x3f, 0xe0, 0x55, 0x47, 0x6b, 0xc2, 0x8c, 0x8c, 0xd1, 0x6a, 0x9, 0x28, 0xbc, 0xdc, 0xc2, 0xe8, 0x62, 0xe0, 0x77, 0xb8, 0x6e, 0x79, 0x38, 0x5e, 0x29, 0x1f, 0x1a, 0x3a, 0x39, 0x4, 0x52, 0x9b, 0xb4, 0x2, 0xf5, 0xf3, 0x60, 0xfb, 0x0, 0xa9, 0xd5, 0xa7, 0x35, 0xc5, 0xc2, 0xab, 0x15, 0xbe, 0xf6, 0x5, 0xb2, 0xb1, 0xe3, 0x8d, 0x31, 0xfa, 0x42, 0x47, 0xb5, 0xde, 0xd6, 0x23, 0x51, 0x77, 0x6, 0xcb, 0x20, 0xd5, 0xc2, 0x2c, 0x51, 0xc3, 0xfd, 0x63, 0x91, 0x55, 0xb1, 0xd4, 0xeb, 0x5b, 0x83, 0xd1, 0xa7, 0xda, 0xee, 0x0, 0x6f, 0x97, 0xf3, 0x54, 0x2, 0x90, 0x93, 0xdd, 0xf9, 0xd8, 0x89, 0x81, 0x3a, 0xba, 0x42, 0x6c, 0x48, 0x4c, 0xfa, 0x90, 0xb, 0x60, 0x94, 0x46, 0x8, 0x86, 0x54, 0x6d, 0x26, 0x7e, 0x65, 0xab, 0xf8, 0xe9, 0x84, 0xa, 0xb8, 0x53, 0x42, 0xcf, 0x55, 0xe5, 0x90, 0x65, 0x89, 0x6, 0x29, 0xb5, 0x4d, 0x1f, 0x1e, 0xc0, 0x59, 0x83, 0x88, 0xe2, 0x49, 0xba, 0x4f, 0x4a, 0x6e, 0x56, 0xb0, 0xdd, 0x0, 0x62, 0x6c, 0x68, 0x2b, 0x1a, 0x81, 0x2c, 0xcf, 0xd5, 0x12, 0x4b, 0x5b, 0xb5, 0x82, 0x12, 0x8f, 0x7d, 0x5b, 0x46, 0x67, 0xed, 0xed, 0x41, 0x37, 0x94, 0x5c, 0xfc, 0x67, 0xce, 0x5f, 0xd8, 0xf1, 0x67, 0xe1, 0x34, 0x62, 0x52, 0x20, 0x17, 0x29, 0xcb, 0xf0, 0x56, 0xc, 0x92, 0x2e, 0x90, 0x1, 0x1e, 0x61, 0x2a, 0x5f, 0x1e, 0x2a, 0xd6, 0x4a, 0xa9, 0x2b, 0xd0, 0x2c, 0x16, 0x7, 0x62, 0x2d, 0xca, 0xd2, 0xbe, 0x87, 0xdc, 0x16, 0xff, 0x88, 0xf6, 0x21, 0x1d, 0x39, 0xea, 0xde, 0x61, 0x44, 0x55, 0x39, 0xae, 0xfc, 0xc1, 0x3b, 0xb7, 0x4d, 0xcf, 0x26, 0xf, 0xfd, 0x35, 0x2d, 0x64, 0xdb, 0x5d, 0x31, 0x93, 0xe9, 0xa, 0x54, 0x2c, 0x9f, 0xd, 0xe1, 0x19, 0x35, 0xb1, 0x1c, 0x6c, 0x16, 0xe8, 0xc0, 0x94, 0xbe, 0xf8, 0x5a, 0xce, 0x31, 0x97, 0x18, 0x9b, 0xdb, 0x8, 0xaf, 0x4f, 0x43, 0x22, 0xa9, 0x29, 0x8, 0xba, 0xce, 0x6e, 0x6d, 0xab, 0xd7, 0x26, 0x3, 0x8b, 0x26, 0x52, 0x76, 0x95, 0x1a, 0x28, 0xe7, 0x45, 0x8a, 0xec, 0xa6, 0xd8, 0xc3, 0xc8, 0x5f, 0x67, 0xc0, 0xf9, 0xc0, 0xf8, 0x8, 0xdd, 0x72, 0x1c, 0x38, 0xbc, 0xbb, 0x62, 0x3b, 0x93, 0x9c, 0x83, 0x97, 0x1c, 0x6e, 0xa2, 0x1b, 0xc5, 0x3d, 0x5e, 0x4e, 0x4, 0xd9, 0x3c, 0x7f, 0x9f, 0xa2, 0x23, 0xbb, 0x44, 0xe2, 0x86, 0x54, 0x44, 0x58, 0x0, 0x82, 0x79, 0x6b, 0xf4, 0x61, 0x99, 0xdb, 0xbb, 0xd1, 0xfb, 0xec, 0xab, 0x6d, 0x4a, 0x61, 0x1b, 0x5c, 0x1f, 0x10, 0xa1, 0x27, 0x39, 0xf5, 0xe4, 0x6e, 0x7f, 0x9e, 0x49, 0x26, 0x5a, 0x80, 0xdd, 0x87, 0x65, 0xe5, 0xa5, 0x2f, 0xf9, 0x9f, 0xe3, 0x5b, 0x78, 0x86, 0x53, 0x4c, 0x50, 0xbb, 0x25, 0x6b, 0x33, 0x8c, 0xc0, 0x3c, 0xc1, 0xdd, 0x74, 0x6e, 0x32, 0x28, 0xde, 0xe0, 0x26, 0x3b, 0xb, 0x72, 0x72, 0xbf, 0x3d, 0x4c, 0xb2, 0x22, 0xad, 0x79, 0x88, 0x87, 0xf8, 0xb9, 0x3c, 0xbf, 0xed, 0xad, 0x63, 0xa8, 0xb5, 0x38, 0xf5, 0xca, 0x66, 0xbd, 0xa7, 0xf0, 0xa1, 0x7f, 0xf4, 0x6, 0xda, 0x3a, 0xdb, 0xe9, 0x2, 0x73, 0x24, 0x48, 0x59, 0x6d, 0xd2, 0x29, 0xaf, 0x93, 0x25, 0x95, 0x95, 0x58, 0xae, 0x1f, 0xb4, 0x9d, 0xdf, 0xd8, 0x61, 0x17, 0x1f, 0x56, 0x20, 0xa1, 0x3a, 0xd9, 0xfe, 0x65, 0x71, 0xe2, 0x12, 0x24, 0x12, 0x48, 0xf9, 0xaf, 0x20, 0x22, 0x77, 0xaf, 0x99, 0xb9, 0xdd, 0x46, 0xf6, 0x9e, 0x47, 0x7, 0xb5, 0xb0, 0xb6, 0xb5, 0xdb, 0xe5, 0xb1, 0xd2, 0xfd, 0x89, 0x3b, 0xe4, 0xb6, 0xd3, 0xb5, 0x2d, 0xfc, 0x11, 0xa6, 0xdd, 0xe8, 0x8e, 0x8b, 0xd2, 0xa7, 0x36, 0x19, 0x8c, 0x59, 0x61, 0x16, 0x4b, 0xde, 0x5e, 0xe, 0x42, 0x56, 0x62, 0x50, 0xd2, 0xb9, 0x92, 0x7b, 0x32, 0xc8, 0x33, 0x46, 0x1c, 0x4d, 0x62, 0xbd, 0xfc, 0x70, 0xec, 0xd5, 0x1b, 0x2a, 0x72, 0xa5, 0xd, 0x7c, 0xf0, 0xf9, 0x58, 0x4c, 0x92, 0x4c, 0xea, 0x6d, 0x26, 0x24, 0xcd, 0x95, 0xfc, 0xcc, 0x26, 0x3d, 0x84, 0x7a, 0xc5, 0xe4, 0xc, 0xc6, 0xa5, 0x3a, 0x63, 0x5, 0x2e, 0x60, 0x51, 0xbc, 0x1d, 0x62, 0x4, 0xa7, 0x45, 0x24, 0xf4, 0x4f, 0xb4, 0x85, 0x55, 0xa6, 0xc4, 0xdb, 0x3c, 0x9f, 0x7b, 0xc3, 0x71, 0x4e, 0xf5, 0x42, 0xf2, 0x1f, 0x11, 0xd7, 0x56, 0xa1, 0xc4, 0xf9, 0xf3, 0x34, 0xb0, 0x7, 0xfb, 0x66, 0x1e, 0x7c, 0xd0, 0x1e, 0x59, 0x97, 0xe4, 0xa9, 0xdb, 0xae, 0xb2, 0x63, 0xf7, 0x6f, 0x28, 0x2d, 0x98, 0x7f, 0x73, 0xc1, 0xa1, 0xcf, 0x82, 0x7b, 0x9d, 0x3a, 0x37, 0x3d, 0x4c, 0xa6, 0x3d, 0xc4, 0xb7, 0x24, 0x47, 0x1, 0x6e, 0x4e, 0x57, 0x1b, 0xc7, 0x8c, 0x96, 0x71, 0x77, 0x79, 0xe7, 0xa3, 0x2f, 0x9d, 0x2a, 0x64, 0xfd, 0x5b, 0xca, 0xe2, 0xf7, 0x4, 0xd5, 0xb8, 0x8e, 0x49, 0x3e, 0x89, 0xba, 0x9c, 0xe7, 0x7b, 0x45, 0xb6, 0xff, 0xc, 0x7f, 0x6e, 0x1c, 0x47, 0xbc, 0x2, 0x56, 0x6, 0x9a, 0xb2, 0xf8, 0x96, 0xbf, 0x2f, 0x40, 0xd5, 0x13, 0x42, 0xad, 0xe4, 0xd5, 0xdf, 0xa1, 0xfd, 0x47, 0xea, 0x59, 0xb5, 0xbb, 0x7f, 0x87, 0xf8, 0x8b, 0x5f, 0x5d, 0xb9, 0x69, 0xc3, 0x3c, 0x30, 0xd, 0xb, 0xe, 0xa1, 0xb2, 0xe, 0x18, 0x53, 0x70, 0x52, 0xeb, 0xe, 0x1b, 0x49, 0x56, 0xed, 0x99, 0xf0, 0x77, 0x5d, 0xf9, 0xf1, 0x68, 0x9a, 0xdc, 0x30, 0xfb, 0x4f, 0x79, 0x40, 0xca, 0x69, 0x1a, 0x9a, 0x5a, 0x81, 0x19, 0xe0, 0xbf, 0x11, 0x3c, 0x99, 0x14, 0x8, 0x2c, 0xd2, 0x67, 0x44, 0x10, 0x10, 0xcf, 0x13, 0xdc, 0xe1, 0xc3, 0x8e, 0x69, 0xc3, 0xfa, 0xe4, 0x67, 0xb3, 0xd4, 0xba, 0x54, 0xaa, 0xaa, 0xb9, 0x36, 0x39, 0x97, 0x9c, 0xec, 0x37, 0xaf, 0x44, 0x35, 0xdb, 0x5b, 0xa6, 0x88, 0xc6, 0x68, 0x88, 0xf7, 0x0, 0x19, 0xf5, 0xf3, 0xf2, 0x1a, 0x6b, 0x4f, 0x1c, 0x88, 0xf3, 0x50, 0x2b, 0x88, 0x90, 0x68, 0xce, 0x3c, 0xe7, 0x2f, 0x4e, 0x67, 0x2c, 0x9a, 0xb7, 0x22, 0x4d, 0x9b, 0x9b, 0x5d, 0x74, 0xcf, 0xc, 0x3e, 0xb8, 0x5e, 0x50, 0x30, 0xc2, 0xe3, 0x5e, 0x77, 0x66, 0x26, 0xeb, 0x17, 0x36, 0xa, 0xb2, 0xb7, 0x9d, 0xa8, 0xab, 0xc, 0xce, 0x64, 0xcf, 0x16, 0xb6, 0x18, 0x3d, 0x94, 0x26, 0xc7, 0x65, 0xe5, 0x48, 0xab, 0xcf, 0x63, 0x39, 0x30, 0x53, 0x2c, 0x52, 0xae, 0x45, 0x26, 0x9d, 0x92, 0x8b, 0x8d, 0xcd, 0xe1, 0x24, 0x8c, 0x2, 0x3a, 0x9b, 0xe5, 0x8e, 0x66, 0xa6, 0x95, 0x85, 0xb9, 0x26, 0xba, 0xaa, 0x32, 0x93, 0x21, 0x65, 0xe3, 0x7c, 0xcc, 0x6d, 0xe7, 0x95, 0x3c, 0x57, 0x2c, 0x4f, 0xfb, 0xd, 0xfe, 0x24, 0x4e, 0x5c, 0xee, 0x80, 0x6a, 0xda, 0x52, 0x3e, 0xee, 0xac, 0xa, 0x9f, 0xef, 0xa, 0x7e, 0xc0, 0xe9, 0xef, 0x23, 0x7f, 0x1b, 0xaa, 0xa4, 0x6b, 0x44, 0x12, 0xba, 0x99, 0x2, 0x7e, 0xb8, 0xf3, 0xd2, 0x1b, 0x8e, 0x7e, 0x96, 0x1, 0x83, 0x2c, 0x7a, 0x84, 0x3f, 0xb5, 0x94, 0x4d, 0x44, 0x9d, 0xdf, 0xd9, 0xd4, 0xce, 0x40, 0x1e, 0x33, 0xcb, 0xfb, 0xcc, 0x65, 0x19, 0x8f, 0xc4, 0xb, 0xc7, 0x2c, 0x4e, 0x17, 0x60, 0xb5, 0xaa, 0x73, 0xa5, 0xf6, 0xd7, 0x7b, 0x50, 0x76, 0x1, 0x55, 0xdd, 0x56, 0x22, 0x5b, 0x70, 0x4d, 0xf1, 0x11, 0xb7, 0x18, 0xad, 0x16, 0x8f, 0x74, 0xe0, 0x4e, 0x5, 0x60, 0x5e, 0x1f, 0xe2, 0x22, 0xd6, 0x75, 0x4a, 0xf5, 0xa5, 0xd9, 0x6c, 0x69, 0x8d, 0x45, 0xc7, 0x3a, 0xc7, 0x4, 0x2, 0x9, 0xa6, 0x47, 0xb7, 0x99, 0xe9, 0xc0, 0x18, 0xa9, 0xee, 0x27, 0x2, 0xe2, 0x39, 0xf0, 0x76, 0xb5, 0xe4, 0x31, 0x57, 0x15, 0x63, 0xf8, 0x3c, 0x17, 0xc9, 0xb3, 0x90, 0xc8, 0x5d, 0xc6, 0xea, 0x12, 0x73, 0x9f, 0x70, 0x3b, 0x2d, 0x28, 0xb6, 0xea, 0xa4, 0x60, 0x5d, 0x6c, 0x66, 0xa8, 0x95, 0x71, 0x33, 0xfb, 0x5e, 0x24, 0x91, 0xc2, 0xa1, 0xc6, 0xad, 0x50, 0xbc, 0x4, 0xcd, 0x67, 0xac, 0xac, 0x5d, 0x2c, 0xf1, 0xff, 0x88, 0x63, 0xcf, 0x6, 0xad, 0x17, 0xfc, 0x24, 0xa9, 0x60, 0xcd, 0x22, 0x94, 0xd9, 0x8b, 0xe, 0xe4, 0xa, 0x1f, 0x36, 0xd0, 0x48, 0xc5, 0xe0, 0xec, 0x40, 0x37, 0x43, 0xeb, 0x86, 0x37, 0x9b, 0x64, 0x98, 0x59, 0x49, 0x2b, 0x9e, 0x6f, 0x50, 0x9a, 0x38, 0x11, 0xc0, 0xcc, 0xcc, 0x75, 0x4d, 0xff, 0x46, 0x11, 0x83, 0x58, 0x76, 0x12, 0x97, 0x11, 0x1a, 0xf, 0x17, 0x83, 0x39, 0xe5, 0x0, 0xee, 0x26, 0x64, 0x22, 0xb2, 0x33, 0x67, 0xd4, 0xbf, 0xf6, 0x99, 0xdf, 0xcb, 0xb7, 0x3c, 0x6c, 0xb1, 0xd7, 0x79, 0x34, 0x4b, 0xf9, 0x4d, 0x88, 0x1b, 0xea, 0x59, 0x66, 0xd3, 0xa5, 0x1f, 0x9d, 0x34, 0x68, 0xeb, 0x3b, 0x13, 0xdc, 0x3f, 0x46, 0x21, 0x2, 0xb, 0x93, 0x4f, 0x35, 0xc9, 0x5d, 0x48, 0xce, 0xe8, 0xa2, 0x2b, 0xff, 0x37, 0x31, 0xe1, 0x5f, 0x4d, 0xc1, 0x6e, 0xd2, 0xaa, 0xd3, 0xb6, 0x18, 0xc4, 0x2, 0xa3, 0xfa, 0xf2, 0x67, 0x69, 0xc4, 0xac, 0xd7, 0x90, 0x8d, 0x86, 0xb8, 0x94, 0x4a, 0xf5, 0x1f, 0x7a, 0x6c, 0xf3, 0x54, 0x84, 0xfd, 0x9b, 0x9, 0xd4, 0xf5, 0xb4, 0xa7, 0x86, 0xae, 0xed, 0xbe, 0x80, 0x48, 0x23, 0x41, 0x6d, 0xf3, 0x1d, 0xe0, 0x2c, 0xfd, 0xb8, 0xea, 0x71, 0xfe, 0xd1, 0x1a, 0xa1, 0xdb, 0xfc, 0x29, 0x58, 0x20, 0xb9, 0xa0, 0xa, 0x95, 0x4b, 0x58, 0xf5, 0xdc, 0x46, 0x9d, 0x7d, 0xc6, 0xf9, 0x35, 0xcb, 0xfa, 0xd3, 0x8e, 0x6f, 0x9, 0x4a, 0xec, 0x43, 0xc0, 0x5a, 0x1e, 0x15, 0x56, 0x14, 0x1c, 0x79, 0xfa, 0x64, 0x5, 0x9b, 0x2b, 0xe6, 0x7f, 0x26, 0x73, 0xe6, 0x6a, 0xdc, 0x49, 0x5, 0x98, 0x75, 0xe0, 0x46, 0x14, 0xc, 0x6e, 0x41, 0x63, 0xa0, 0x6b, 0x2e, 0xaf, 0x62, 0x5, 0xe3, 0xc6, 0x5a, 0x94, 0xa3, 0x20, 0x9b, 0xc1, 0x3d, 0x2d, 0x4f, 0x4f, 0x1f, 0xfe, 0xd8, 0x89, 0x90, 0xa6, 0x88, 0x59, 0x3a, 0xb2, 0x59, 0x9c, 0x93, 0x98, 0x93, 0x96, 0x1f, 0xc9, 0xf0, 0x3b, 0xc2, 0x62, 0x37, 0x74, 0xd3, 0xa1, 0x24, 0xfd, 0x65, 0x1b, 0x7c, 0xbf, 0xf, 0x27, 0xad, 0xf8, 0x63, 0xb0, 0x6d, 0x94, 0xc0, 0xc3, 0x57, 0x42, 0xe1, 0xfe, 0x8, 0xae, 0x15, 0x73, 0xd0, 0x7e, 0xcd, 0x9d, 0xfa, 0xa0, 0x64, 0x7b, 0xf0, 0x96, 0x9b, 0x62, 0x48, 0xe2, 0xc, 0x7f, 0xbe, 0x5f, 0xc1, 0x2a, 0x12, 0x19, 0x3f, 0x6e, 0x48, 0x5a, 0x54, 0x84, 0x4a, 0xc0, 0x91, 0x30, 0x1a, 0x8c, 0x3e, 0xe0, 0xa7, 0xcc, 0x13, 0x63, 0x83, 0x79, 0xce, 0x24, 0x8a, 0xfd, 0xcd, 0x17, 0xf0, 0x3b, 0xab, 0x22, 0x17, 0x22, 0x5b, 0x34, 0xac, 0x6, 0x74, 0xfc, 0x95, 0x27, 0x8, 0x14, 0x53, 0x75, 0xf1, 0xff, 0xcd, 0x59, 0x47, 0xd5, 0x33, 0x90, 0x98, 0x2c, 0xac, 0x34, 0xd1, 0xd0, 0x43, 0x44, 0x87, 0x66, 0x4e, 0xe4, 0x9a, 0x37, 0x51, 0x2d, 0x9a, 0x2f, 0x84, 0x15, 0x49, 0x96, 0xef, 0xf8, 0x54, 0xb0, 0x81, 0x69, 0xaa, 0xa5, 0xc4, 0xbd, 0x37, 0x7b, 0x5c, 0x3b, 0xcc, 0xe7, 0x7e, 0x3f, 0x98, 0x74, 0x8, 0xbc, 0x41, 0xfb, 0x85, 0x7e, 0xa2, 0x63, 0xe, 0x26, 0x9c, 0xe0, 0x1c, 0xff, 0xce, 0xba, 0x44, 0xb2, 0x8c, 0x37, 0xe9, 0xde, 0xbb, 0xd0, 0xd9, 0xad, 0x71, 0xa2, 0x2, 0x8, 0xc2, 0xcc, 0x70, 0xbc, 0xc4, 0x6e, 0x2e, 0xda, 0x98, 0x30, 0x74, 0x2e, 0x86, 0x1b, 0x91, 0xfe, 0xd, 0x85, 0x74, 0x19, 0x7d, 0xc1, 0xa4, 0xee, 0xd, 0x7f, 0x86, 0x9c, 0x6e, 0x33, 0xf1, 0x9c, 0x75, 0x63, 0x7f, 0xd1, 0x8c, 0x81, 0xe2, 0xff, 0x71, 0x93, 0x36, 0xf6, 0x4f, 0xd1, 0xbe, 0xc2, 0x95, 0xb3, 0xc6, 0x3a, 0x28, 0xd0, 0xf1, 0xe2, 0xac, 0x15, 0x6d, 0x17, 0x41, 0x8, 0x30, 0xc6, 0x13, 0xc, 0xe0, 0x25, 0x48, 0x81, 0xdf, 0xfa, 0xfb, 0x37, 0xec, 0xc6, 0x2d, 0x25, 0x2d, 0x6, 0x4b, 0x3, 0xc4, 0x60, 0x5d, 0x9c, 0xe4, 0x9b, 0xcc, 0x22, 0xe9, 0xa2, 0xe8, 0x7b, 0x4a, 0xc2, 0x8e, 0x1b, 0xd6, 0x19, 0xb9, 0x7d, 0x95, 0x7d, 0xdf, 0xa2, 0xbf, 0xdf, 0xdd, 0x43, 0xc, 0xa4, 0xfb, 0x9d, 0xcd, 0x92, 0xab, 0x23, 0x2d, 0x74, 0xd2, 0x9f, 0x58, 0xd5, 0x88, 0xa, 0x93, 0x43, 0xd1, 0x4d, 0xed, 0xd7, 0x83, 0x6a, 0xf7, 0xc4, 0xac, 0x4b, 0x3d, 0x8d, 0x83, 0x58, 0x49, 0xc5, 0x93, 0xc8, 0x71, 0xd8, 0x53, 0xb1, 0x11, 0xbc, 0x8a, 0x85, 0x6c, 0xfe, 0x4d, 0xe0, 0xee, 0x77, 0x3e, 0x3c, 0xb3, 0x41, 0xa7, 0x8, 0x3c, 0x8b, 0x7e, 0xc, 0x87, 0x35, 0x78, 0x8, 0x16, 0x7e, 0x27, 0xf2, 0x9, 0xb2, 0x22, 0x36, 0x74, 0xe9, 0x54, 0x4f, 0xc1, 0xa9, 0x1e, 0x9d, 0x51, 0xab, 0xa5, 0x5, 0xbf, 0xdc, 0x62, 0x71, 0x98, 0x62, 0x7c, 0x6f, 0xfa, 0x6b, 0xa0, 0xab, 0x18, 0x66, 0xf5, 0x86, 0x29, 0xc8, 0xbd, 0x44, 0x72, 0xc2, 0xfa, 0x83, 0x46, 0xf5, 0x61, 0x4e, 0x84, 0x1f, 0xdb, 0x5, 0x61, 0x86, 0xfe, 0x82, 0x4, 0x1d, 0x98, 0x9a, 0xed, 0x18, 0x82, 0xb1, 0xce, 0xea, 0x82, 0xc9, 0xb0, 0x2, 0xff, 0x36, 0x66, 0xe8, 0x71, 0x6c, 0x94, 0x7a, 0x83, 0x94, 0x9e, 0x5d, 0x17, 0xce, 0xc1, 0xd0, 0x55, 0xf0, 0xfc, 0x73, 0xcb, 0x24, 0x63, 0xc3, 0x77, 0xe3, 0x5c, 0xc8, 0xa, 0x1, 0xe9, 0xf0, 0x46, 0xee, 0x52, 0x32, 0xc6, 0x2f, 0x32, 0x28, 0x44, 0x61, 0xbd, 0x22, 0x95, 0x27, 0x6c, 0xb4, 0xb5, 0x9b, 0xf0, 0x99, 0xc, 0x20, 0x4a, 0x4a, 0xf, 0x35, 0x2, 0x54, 0xaa, 0xa6, 0x89, 0x68, 0x1, 0xba, 0xe4, 0x13, 0x31, 0x27, 0x66, 0xa3, 0xbe, 0x8b, 0x83, 0x36, 0x89, 0x39, 0x49, 0x62, 0xe4, 0x7e, 0xab, 0x1c, 0x44, 0x10, 0xe3, 0x92, 0xc2, 0x99, 0x60, 0xbf, 0x19, 0xa9, 0x2d, 0x10, 0xb4, 0xac, 0x27, 0xf2, 0xa6, 0xba, 0xbd, 0x15, 0x14, 0x17, 0x97, 0xc2, 0x98, 0xcb, 0xdb, 0x3, 0x56, 0x65, 0x24, 0x1f, 0xaa, 0x2d, 0x26, 0x11, 0xc, 0x2e, 0x19, 0xff, 0x70, 0xb4, 0x73, 0xbb, 0x4b, 0xe3, 0xf7, 0xa4, 0xce, 0xdc, 0x82, 0x93, 0x3b, 0x32, 0x6c, 0x16, 0xf0, 0x75, 0xf6, 0x25, 0xa9, 0xa, 0xba, 0x17, 0x7a, 0xd3, 0xa4, 0xc0, 0x40, 0x2c, 0x36, 0xfb, 0x89, 0xd, 0xf, 0x1a, 0x1d, 0x45, 0xd2, 0x16, 0xf8, 0xc4, 0x7b, 0xff, 0x23, 0xab, 0x42, 0x76, 0xe7, 0x6d, 0x51, 0xd7, 0x6b, 0x5c, 0x81, 0x6, 0xad, 0xfb, 0x8b, 0x5c, 0xa4, 0x99, 0xbe, 0xb5, 0x44, 0xf0, 0xaa, 0xc, 0xda, 0xed, 0x48, 0x96, 0x5d, 0xac, 0x4e, 0x25, 0x3d, 0x73, 0xfe, 0xb8, 0x79, 0xcf, 0x82, 0x5d, 0xd4, 0x6a, 0x56, 0xec, 0xf0, 0x8d, 0x47, 0xe, 0xf0, 0x4f, 0x23, 0xad, 0xe5, 0x38, 0x38, 0x70, 0x40, 0x4d, 0x66, 0x25, 0x2b, 0x94, 0xa9, 0xe6, 0x9, 0x56, 0xe3, 0x95, 0xb, 0xd2, 0xf, 0xde, 0x80, 0xd5, 0x9, 0xeb, 0xb4, 0x70, 0xeb, 0x5d, 0x56, 0xc5, 0x70, 0xb1, 0x8e, 0xd4, 0x26, 0xc4, 0xb, 0x57, 0x1e, 0x56, 0xf6, 0x32, 0xc0, 0xc4, 0x9a, 0xc8, 0x8, 0x43, 0xb, 0x32, 0x72, 0x26, 0x64, 0x4d, 0x3a, 0x81, 0xa3, 0x6f, 0x8c, 0xe9, 0xc3, 0x58, 0x4, 0xbe, 0xe3, 0xac, 0xa1, 0xb0, 0x3e, 0x9b, 0xea, 0x43, 0xb3, 0x2a, 0x96, 0x4b, 0xe3, 0x38, 0xdc, 0x93, 0x3c, 0xd9, 0xff, 0x13, 0x55, 0x65, 0x17, 0xa0, 0x25, 0xa1, 0x83, 0x99, 0x4d, 0xae, 0x26, 0x35, 0xe0, 0xb5, 0x19, 0x99, 0x1b, 0x5a, 0x2b, 0x74, 0xc7, 0xe5, 0x6e, 0x9a, 0x51, 0xa8, 0x53, 0x48, 0x10, 0x57, 0x9b, 0xe0, 0xcf, 0xa, 0xab, 0x75, 0xb5, 0x2, 0xe2, 0x95, 0x47, 0x7f, 0x22, 0x30, 0xb0, 0x97, 0x9e, 0xa4, 0x64, 0xfd, 0x63, 0x61, 0x44, 0x6b, 0xc4, 0x2c, 0x50, 0x19, 0x7, 0xaa, 0xa4, 0x43, 0x9c, 0x14, 0xb4, 0xdf, 0xed, 0x45, 0xf3, 0xe7, 0x3b, 0x74, 0xc9, 0x76, 0xa2, 0x75, 0x68, 0xa, 0x26, 0x58, 0xe8, 0xcb, 0xa1, 0x3d, 0xd1, 0x3b, 0x7a, 0x89, 0x59, 0xae, 0x15, 0x65, 0x92, 0xdf, 0x47, 0x30, 0x11, 0x2e, 0xdd, 0x5e, 0x9c, 0x71, 0x1d, 0x51, 0x98, 0xfe, 0x3a, 0x88, 0x30, 0xf3, 0x45, 0xf5, 0x42, 0x7a, 0x5c, 0xa0, 0xdf, 0xdf, 0x37, 0x75, 0x12, 0x69, 0xaf, 0x76, 0xce, 0xe1, 0x47, 0x88, 0xad, 0xbd, 0x8, 0xb5, 0xaa, 0x90, 0x1d, 0x6, 0x1a, 0x8f, 0x50, 0xdb, 0x90, 0xca, 0x76, 0xc9, 0x4b, 0xfb, 0x64, 0x95, 0x86, 0x98, 0x2a, 0xe, 0xb8, 0xc9, 0xb0, 0x9, 0x8a, 0xe0, 0x74, 0xda, 0x1e, 0x6d, 0x7b, 0xeb, 0x3e, 0x56, 0xc8, 0x6c, 0x9c, 0x67, 0xe3, 0x48, 0x2a, 0x58, 0xf5, 0xbc, 0x1d, 0x36, 0x14, 0xa, 0xe2, 0xf4, 0x30, 0x6f, 0x2a, 0xe9, 0xbc, 0xe, 0x8e, 0x20, 0xa7, 0x8c, 0xc2, 0xed, 0xa5, 0x8e, 0xf5, 0x53, 0xa8, 0xe5, 0xe5, 0x19, 0x20, 0xf3, 0x49, 0xb5, 0x32, 0xd2, 0x8f, 0xb5, 0xb1, 0xd3, 0xf5, 0xcb, 0x5c, 0xd8, 0xda, 0x14, 0x3e, 0x63, 0x96, 0x19, 0x8b, 0xd5, 0x7e, 0x5a, 0x9, 0x3b, 0xf2, 0x44, 0x21, 0x39, 0xf3, 0x74, 0x5, 0xcd, 0x80, 0x3a, 0xc2, 0x65, 0x85, 0x39, 0xf7, 0x6, 0x94, 0xde, 0x23, 0xce, 0xa5, 0xcf, 0x3e, 0x68, 0x7e, 0x5d, 0x67, 0x79, 0x68, 0x86, 0x85, 0x16, 0x43, 0x44, 0x7, 0x17, 0xd8, 0x1, 0x5a, 0xe1, 0x18, 0x19, 0x56, 0x9e, 0x2d, 0x49, 0x91, 0x44, 0x38, 0x93, 0x46, 0x68, 0xc, 0x7f, 0x10, 0xc2, 0x45, 0xdd, 0xe9, 0x1d, 0x1b, 0xac, 0x93, 0x96, 0x15, 0x87, 0x86, 0x9d, 0x5b, 0x5f, 0x98, 0x2a, 0x3a, 0xd6, 0x87, 0x1a, 0xce, 0xee, 0xac, 0x75, 0xd7, 0x43, 0xe1, 0xa7, 0xe4, 0x6c, 0x42, 0x4f, 0x66, 0x1e, 0x3d, 0xf2, 0x97, 0x65, 0x92, 0x1b, 0x8d, 0x3, 0x9e, 0x30, 0x10, 0x6c, 0x52, 0x8b, 0x92, 0xb3, 0x88, 0xd6, 0xe7, 0x64, 0x88, 0x7e, 0x4f, 0xdf, 0x41, 0xdc, 0xc4, 0x7f, 0x93, 0x70, 0x5, 0x3, 0xb3, 0x67, 0xd9, 0xa4, 0x8e, 0x8b, 0x6f, 0xf3, 0x91, 0x90, 0x66, 0xf5, 0xba, 0xad, 0xcd, 0xc7, 0x66, 0xea, 0xbe, 0x28, 0xe7, 0xdf, 0x78, 0x63, 0x60, 0xad, 0xcb, 0x94, 0x7f, 0x9d, 0xac, 0x71, 0x27, 0x89, 0xe0, 0x4a, 0x46, 0xb1, 0xc7, 0xb2, 0x92, 0x2c, 0xb5, 0x36, 0x98, 0x2, 0xc4, 0xc5, 0x6a, 0xb9, 0x9b, 0xaa, 0x6e, 0x5, 0xe6, 0x9e, 0x6e, 0xd, 0x14, 0x9c, 0xdf, 0x1d, 0xef, 0xc5, 0xa, 0xb9, 0x50, 0x1e, 0x86, 0x72, 0xb6, 0x32, 0x34, 0xc4, 0xbb, 0xe9, 0xf3, 0x2f, 0xaa, 0xb6, 0x80, 0xc6, 0x62, 0x85, 0x98, 0xd3, 0x40, 0x4b, 0x2f, 0xc6, 0x59, 0xaa, 0xa2, 0x1e, 0x48, 0x50, 0x92, 0x42, 0x94, 0x77, 0xbb, 0x3f, 0x1, 0x59, 0xf4, 0xeb, 0xa, 0x8, 0x5a, 0x96, 0xd0, 0x74, 0xb9, 0x82, 0x34, 0x89, 0xb4, 0xc2, 0xb8, 0x58, 0x1a, 0x89, 0xf2, 0x74, 0x20, 0x89, 0x1, 0x37, 0x1e, 0x7c, 0xd9, 0xaa, 0xf7, 0x6c, 0x38, 0xb6, 0x8e, 0xd4, 0xdf, 0x6d, 0x9e, 0xb0, 0x30, 0x9, 0x4, 0xfa, 0x94, 0xf, 0xfa, 0x96, 0xdf, 0x71, 0xa4, 0x2a, 0xe2, 0xa9, 0xf3, 0x11, 0x70, 0x8d, 0x32, 0xbc, 0x1f, 0x53, 0x1d, 0x2b, 0x7c, 0x35, 0x81, 0xe2, 0x41, 0x10, 0x1c, 0x6, 0x4f, 0xf7, 0x65, 0x35, 0x57, 0x89, 0xdd, 0x85, 0xef, 0x5d, 0x5a, 0x6e, 0x70, 0xfc, 0x62, 0xc9, 0xef, 0x90, 0x91, 0xc9, 0xe7, 0xb4, 0xd5, 0x15, 0xd5, 0xa0, 0x8a, 0xd6, 0x97, 0xfd, 0xdf, 0xb1, 0xc5, 0x6a, 0x77, 0x79, 0xd1, 0x10, 0xed, 0x4d, 0x64, 0x58, 0x54, 0xcf, 0x16, 0xb, 0x38, 0xed, 0xcf, 0xd7, 0xf8, 0xab, 0x27, 0x69, 0x28, 0x8f, 0x66, 0x4c, 0x90, 0xf5, 0x13, 0x4, 0xe9, 0x6d, 0x5e, 0x6c, 0x5a, 0x3a, 0xc, 0x4a, 0x99, 0x66, 0xf5, 0xd6, 0xd2, 0x67, 0xaa, 0x3e, 0x37, 0xd, 0x3e, 0x5f, 0xd0, 0xc0, 0x7f, 0x9d, 0x40, 0xde, 0x47, 0xcc, 0xb5, 0x59, 0xe, 0x6d, 0xc1, 0xd3, 0xe9, 0x19, 0x12, 0x87, 0x2d, 0x2e, 0xdf, 0x19, 0xb0, 0xd1, 0x4e, 0x8, 0x2a, 0xa, 0x45, 0xc8, 0x9b, 0x76, 0x3a, 0xc5, 0xa4, 0x72, 0x62, 0x88, 0x42, 0xff, 0x98, 0xd1, 0x16, 0x17, 0x2, 0xc5, 0xcb, 0x6, 0x4c, 0xf7, 0xa5, 0x9d, 0xf7, 0x88, 0xf8, 0x72, 0xe0, 0x52, 0xfe, 0xd3, 0x65, 0x77, 0xbf, 0xf, 0x6, 0x8b, 0xce, 0x4b, 0x43, 0x13, 0xf7, 0x60, 0x3c, 0xd0, 0xa5, 0xef, 0x3f, 0x9e, 0xcb, 0x89, 0xc9, 0x77, 0xbc, 0x37, 0x39, 0x79, 0xe7, 0xb, 0x62, 0x8a, 0x4d, 0x21, 0x6d, 0xed, 0xc0, 0x97, 0x35, 0xff, 0xae, 0x1, 0x21, 0x1b, 0xdb, 0x62, 0x50, 0xff, 0xb0, 0xb7, 0xb3, 0x2a, 0x8e, 0xad, 0xd4, 0x47, 0x70, 0x8b, 0xe4, 0xa9, 0x0, 0x24, 0xbe, 0xb9, 0xab, 0x4d, 0x3a, 0xcd, 0xf6, 0xd6, 0xfb, 0x2e, 0x76, 0x3d, 0xa5, 0xef, 0x69, 0x50, 0xd3, 0xda, 0xc6, 0x1f, 0xd4, 0x7c, 0xb6, 0x66, 0x3d, 0x1b, 0xa3, 0x3e, 0xa1, 0x4d, 0xa, 0xc3, 0x6c, 0x6a, 0x65, 0x96, 0xb8, 0xa1, 0x4e, 0xce, 0x6e, 0x2f, 0x44, 0x2, 0xfe, 0x97, 0xfa, 0x2f, 0x8a, 0xc4, 0xb1, 0x1e, 0x8e, 0x12, 0x58, 0x52, 0xf6, 0x55, 0xaa, 0xce, 0x44, 0x66, 0xd9, 0xaa, 0x4d, 0xaa, 0xcf, 0x77, 0xae, 0xe3, 0x99, 0xcc, 0xdd, 0xb1, 0xda, 0xb0, 0xae, 0x51, 0x6d, 0xe5, 0x4b, 0x29, 0x10, 0x59, 0x6b, 0x76, 0xa2, 0x24, 0x15, 0xfc, 0x52, 0x87, 0x6c, 0xc9, 0x66, 0xea, 0xad, 0xbb, 0x65, 0x41, 0x29, 0x86, 0xb7, 0x16, 0x60, 0x4d, 0x71, 0x46, 0xe1, 0x4c, 0xe3, 0xd0, 0xa8, 0xb2, 0x26, 0x30, 0xdb, 0x1d, 0xf3, 0x74, 0x32, 0xf1, 0xa5, 0xac, 0xcf, 0xfd, 0xa9, 0x7, 0x7b, 0x7e, 0x5f, 0x6b, 0x96, 0x93, 0xca, 0x94, 0x72, 0xc6, 0x7a, 0xb, 0x2a, 0x15, 0x18, 0x4a, 0x31, 0x69, 0xb6, 0x57, 0xd5, 0x5f, 0x9c, 0xf6, 0xa9, 0x1b, 0x70, 0x47, 0xb4, 0x1c, 0x74, 0xff, 0x4f, 0xcc, 0x26, 0x1b, 0x13, 0xe1, 0x67, 0xcd, 0x8a, 0xa5, 0x42, 0x36, 0xd, 0x3c, 0xf7, 0x64, 0xdd, 0x93, 0x9f, 0x26, 0x2e, 0x5, 0x6c, 0xdb, 0x8c, 0xc0, 0xe4, 0x8d, 0x20, 0x86, 0xdf, 0x3b, 0x7a, 0x65, 0xba, 0x43, 0x68, 0xcb, 0x90, 0x87, 0x44, 0x59, 0x4e, 0xd0, 0xce, 0xe7, 0x2f, 0xbd, 0x5d, 0x66, 0x50, 0xed, 0x1d, 0xcc, 0xee, 0x5, 0x68, 0x8b, 0x24, 0xb0, 0xdf, 0xd7, 0x19, 0xea, 0x5f, 0xaa, 0x85, 0xc, 0x99, 0x99, 0x44, 0xd4, 0x57, 0x3e, 0xd7, 0xb3, 0x2b, 0x73, 0xce, 0xce, 0xca, 0x45, 0x46, 0xa2, 0x71, 0xe9, 0x6, 0x2c, 0xc9, 0x4a, 0xb0, 0x79, 0xbd, 0x3b, 0xdf, 0x27, 0x67, 0x34, 0xf1, 0x77, 0x93, 0x53, 0xe7, 0x97, 0x1d, 0xd, 0xf4, 0xd5, 0x1d, 0x94, 0x86, 0x86, 0x87, 0xf1, 0xb4, 0xe, 0xa8, 0x23, 0x6d, 0xef, 0x56, 0xf2, 0xde, 0x4d, 0xc8, 0x5c, 0x2a, 0x4, 0x13, 0x7d, 0x55, 0xac, 0x31, 0x58, 0x4, 0x69, 0xbc, 0x63, 0xe2, 0x79, 0xb6, 0x20, 0x64, 0x7b, 0x82, 0xf7, 0x49, 0xda, 0xc0, 0xa8, 0x2f, 0x3b, 0x7c, 0xc4, 0x59, 0xb3, 0x40, 0xb8, 0xad, 0x63, 0xab, 0x60, 0x54, 0xe, 0x23, 0x8, 0x1f, 0x56, 0x89, 0xdf, 0x78, 0xff, 0xd1, 0x66, 0x58, 0xc5, 0x1d, 0xfc, 0xf6, 0x32, 0xdb, 0x24, 0x32, 0x1c, 0x9e, 0xe8, 0xb8, 0x4d, 0xbe, 0xd3, 0x11, 0x6b, 0xc3, 0x12, 0xa1, 0xfa, 0x90, 0xcc, 0xe, 0x77, 0xe6, 0x9a, 0x2a, 0xa, 0xae, 0x19, 0x11, 0xd3, 0x1c, 0xe5, 0x9a, 0x45, 0x1e, 0x17, 0x47, 0x2e, 0x13, 0xdb, 0xff, 0xb8, 0x8b, 0xda, 0x2d, 0x2f, 0xca, 0x95, 0x3e, 0x63, 0xb0, 0xc1, 0x95, 0x53, 0xb4, 0xf7, 0x52, 0xcd, 0x15, 0xa3, 0x81, 0x5a, 0x99, 0x53, 0xd2, 0x55, 0xf2, 0x66, 0x2e, 0x65, 0x7d, 0x60, 0x1c, 0x77, 0x57, 0x40, 0x25, 0x25, 0xfe, 0x9f, 0x75, 0xd, 0x46, 0x2f, 0x4b, 0x3f, 0xd7, 0xe4, 0xf8, 0x83, 0x5c, 0x77, 0xd, 0xe8, 0x45, 0x86, 0xb9, 0x37, 0x1a, 0x33, 0x4a, 0x7d, 0x11, 0x5a, 0xe9, 0x45, 0x6a, 0x2a, 0xc7, 0xdd, 0x99, 0x7, 0xb6, 0x25, 0xe5, 0xd1, 0xc2, 0xd3, 0x7f, 0x24, 0xa2, 0x1a, 0x2, 0xe, 0x5c, 0x63, 0x6e, 0x86, 0xd, 0x13, 0xa9, 0x51, 0x29, 0x9, 0x3f, 0xa8, 0x7b, 0x53, 0xb4, 0xf0, 0x81, 0x4e, 0x1d, 0xe6, 0xc7, 0x61, 0x30, 0xe3, 0xa9, 0x43, 0x31, 0x47, 0x5e, 0x5b, 0xff, 0x48, 0x94, 0x5b, 0xa9, 0xbd, 0x9e, 0xc9, 0x3f, 0xf8, 0xa0, 0xca, 0x92, 0x1d, 0xda, 0xaf, 0xcc, 0x89, 0x63, 0x21, 0x9f, 0xa7, 0x4, 0x84, 0xa, 0xdb, 0xe7, 0x37, 0xe2, 0xcd, 0xa5, 0x78, 0x8f, 0xc, 0xe1, 0x3a, 0x8b, 0x51, 0xd4, 0xc4, 0x94, 0xf4, 0x20, 0x5b, 0x4f, 0xad, 0x84, 0xf8, 0xdf, 0x11, 0x11, 0x12, 0xd5, 0x42, 0xf9, 0xfe, 0xb8, 0x6a, 0x68, 0xc5, 0x7d, 0xca, 0xd7, 0xa3, 0x49, 0x42, 0xd5, 0xf2, 0x36, 0xc0, 0x3, 0x9a, 0x70, 0xd, 0xe7, 0x97, 0x99, 0x74, 0x82, 0x79, 0xc3, 0x49, 0x7c, 0xda, 0xa5, 0x21, 0x97, 0x93, 0x79, 0x57, 0x4f, 0xd1, 0xf8, 0x7d, 0x40, 0x75, 0xf1, 0x83, 0xda, 0x54, 0xe9, 0x6b, 0x57, 0x31, 0xc4, 0xa3, 0x3a, 0x1a, 0x4d, 0xc3, 0xcf, 0x61, 0xa0, 0xa2, 0x55, 0x0, 0x17, 0x91, 0xbf, 0xbb, 0x79, 0xfa, 0x3e, 0x67, 0xa9, 0x37, 0x20, 0x23, 0x4a, 0x2a, 0xee, 0x49, 0x81, 0xf1, 0x8a, 0x1b, 0x3f, 0xc5, 0x25, 0xf, 0x26, 0xf2, 0x8, 0xd9, 0x87, 0x75, 0x3e, 0xc3, 0x45, 0xdb, 0x5a, 0x83, 0x27, 0x21, 0x20, 0x63, 0x94, 0x81, 0xed, 0x79, 0xc7, 0xc, 0x82, 0x59, 0xfb, 0x7d, 0xf6, 0x34, 0x53, 0x4e, 0x83, 0x36, 0x28, 0x2, 0x18, 0xb3, 0xe1, 0x41, 0x9, 0x61, 0xf6, 0xdb, 0xb3, 0x91, 0xe0, 0xcd, 0xf5, 0xeb, 0xda, 0x6c, 0x3, 0xdc, 0x7b, 0xb5, 0x59, 0x4d, 0x67, 0xe, 0xb2, 0x57, 0xfd, 0xeb, 0x80, 0x71, 0xbb, 0x18, 0x93, 0xfe, 0x73, 0xc3, 0x4c, 0x23, 0x4e, 0x29, 0x91, 0x8d, 0xaa, 0x6b, 0xbd, 0x9c, 0x10, 0x1, 0x62, 0x2a, 0xb0, 0x8, 0xcd, 0x86, 0x45, 0x62, 0xbc, 0xec, 0xf7, 0xec, 0x64, 0x3, 0x59, 0x5b, 0x3e, 0xe3, 0x23, 0x56, 0xdd, 0xa4, 0xb2, 0x32, 0xe5, 0x50, 0x4e, 0x9c, 0xb8, 0xc, 0xbb, 0x7c, 0x5f, 0x65, 0xeb, 0x7c, 0x32, 0xfb, 0x2c, 0x85, 0x9b, 0x8e, 0xa4, 0xb8, 0x4b, 0x9a, 0x56, 0xbf, 0xf3, 0x14, 0xf6, 0xc6, 0xa0, 0xdb, 0x4b, 0xe4, 0x86, 0x6e, 0xb3, 0x6a, 0x8b, 0x6f, 0x59, 0x14, 0x85, 0x1e, 0xfb, 0x47, 0xd8, 0x46, 0x95, 0x2, 0x93, 0xcf, 0xf4, 0x14, 0x42, 0xed, 0xcd, 0xd0, 0xce, 0x5b, 0x77, 0xe3, 0x99, 0xb6, 0xa4, 0x6d, 0x0, 0x95, 0xdf, 0xeb, 0x2f, 0x73, 0x89, 0x1a, 0xd3, 0x4a, 0x13, 0xfd, 0x64, 0x94, 0x3f, 0xad, 0xe1, 0x97, 0x80, 0x6a, 0xd6, 0x9d, 0x98, 0xb5, 0xec, 0x40, 0x74, 0x62, 0x80, 0x42, 0xd5, 0x3d, 0x6, 0x53, 0xe5, 0xac, 0xe5, 0x98, 0xb1, 0x4, 0xb5, 0x50, 0x76, 0x72, 0x3a, 0xc1, 0x29, 0xe1, 0xdb, 0x25, 0x80, 0x54, 0x16, 0xb, 0x66, 0xdb, 0x9c, 0xea, 0x5d, 0x6d, 0x88, 0x91, 0x75, 0x56, 0x67, 0xb7, 0x3e, 0xb, 0xc4, 0xea, 0x69, 0xe, 0x1, 0xf8, 0x11, 0x2a, 0xcd, 0xd9, 0x14, 0x12, 0xbe, 0x55, 0x36, 0xde, 0x50, 0x42, 0xcc, 0x50, 0x7c, 0x62, 0xd, 0xe2, 0x86, 0xfd, 0xa1, 0x99, 0xe1, 0xe8, 0x77, 0x67, 0xa, 0xba, 0x77, 0x8, 0xb, 0x3a, 0xaf, 0x82, 0x10, 0x84, 0x4c, 0xcb, 0xcb, 0x6f, 0x16, 0x6d, 0x92, 0x2a, 0x5e, 0xf5, 0x95, 0xcd, 0x98, 0x39, 0xdc, 0xe3, 0x17, 0x56, 0xbf, 0x5e, 0x8f, 0xad, 0xb9, 0x74, 0xa5, 0x1, 0xad, 0x7, 0x3d, 0x66, 0xda, 0xc4, 0xf, 0x24, 0x5, 0xa9, 0xbb, 0x5, 0x46, 0xad, 0x8e, 0x6, 0x25, 0xc, 0x5d, 0x92, 0xa0, 0x34, 0x0, 0x62, 0x66, 0xd6, 0x85, 0x11, 0xb1, 0xed, 0xa3, 0xf6, 0xb5, 0xd1, 0xf4, 0xd, 0xe3, 0x34, 0x6a, 0xaa, 0x79, 0xb6, 0x8, 0xf2, 0xde, 0x5a, 0x45, 0x8, 0x7b, 0x6e, 0x55, 0xae, 0x5a, 0xcf, 0x16, 0xc9, 0xfb, 0x6a, 0x4d, 0x46, 0xdb, 0xf2, 0xd8, 0x41, 0x1f, 0x12, 0xa8, 0x6, 0xdd, 0x73, 0xb9, 0x9e, 0x32, 0x6, 0x25, 0x9f, 0x68, 0x70, 0xcc, 0x19, 0xbc, 0x6a, 0xdd, 0x6b, 0xf2, 0x30, 0x7b, 0x92, 0x30, 0xf, 0x91, 0xe7, 0xd5, 0x37, 0x4c, 0x4a, 0x8e, 0x45, 0x2a, 0xe5, 0x84, 0xdd, 0x43, 0xd, 0xb9, 0xaa, 0x63, 0x67, 0xc6, 0x84, 0x8d, 0xf1, 0xb6, 0x5d, 0x82, 0x87, 0xb3, 0x1a, 0xd, 0xa, 0x50, 0x8b, 0x4, 0xbd, 0x98, 0x75, 0xc6, 0xfb, 0xfc, 0xdf, 0x92, 0x1e, 0xf1, 0x5f, 0xb6, 0xd6, 0xd2, 0xc5, 0xa7, 0x5e, 0xea, 0xe4, 0x9, 0xaf, 0xab, 0xcf, 0x5e, 0x7b, 0xa9, 0xd2, 0x63, 0xf7, 0xdb, 0x90, 0xbf, 0x8b, 0xd3, 0x52, 0xc6, 0x50, 0x77, 0x72, 0xd9, 0x34, 0xad, 0xbd, 0x59, 0x7a, 0x70, 0x2e, 0x81, 0xfd, 0xa2, 0xa3, 0x71, 0xde, 0x87, 0xd1, 0xad, 0xb1, 0x54, 0xcc, 0xa1, 0x18, 0x1a, 0x0, 0x7e, 0x92, 0x80, 0x1d, 0xed, 0x81, 0x57, 0xac, 0xb5, 0xf7, 0xc3, 0xab, 0xbd, 0xa4, 0x1c, 0x72, 0xf7, 0x34, 0x5c, 0x3f, 0x2b, 0x71, 0x5d, 0x5b, 0x7d, 0x64, 0x97, 0xb0, 0x42, 0xc2, 0xec, 0x60, 0xad, 0x43, 0x28, 0xc1, 0x3b, 0xb, 0xf9, 0x2, 0xd1, 0xd, 0xfd, 0xfb, 0x22, 0x7, 0xf3, 0xff, 0x24, 0x29, 0x5d, 0xd6, 0xf2, 0x45, 0x2d, 0x3, 0xfb, 0xcb, 0x12, 0x9, 0x92, 0xe3, 0xa3, 0xb7, 0x85, 0x33, 0x60, 0x25, 0xf1, 0x9b, 0x21, 0x60, 0x6b, 0xd7, 0x1c, 0xe1, 0xd, 0xa5, 0x9d, 0xcd, 0x2c, 0x23, 0x70, 0x60, 0xf4, 0x58, 0x86, 0x8b, 0xcb, 0xfd, 0x6b, 0xfe, 0x3c, 0x1c, 0x13, 0xc8, 0x4d, 0x66, 0xbd, 0x87, 0x96, 0x57, 0x1c, 0xa3, 0x9a, 0x18, 0xf8, 0x9, 0x7d, 0x92, 0x1, 0x6f, 0xda, 0xe1, 0x3c, 0x20, 0xa6, 0x9d, 0xce, 0x6, 0xd0, 0x34, 0xfb, 0xbf, 0x85, 0x7b, 0xe4, 0x34, 0xb8, 0x47, 0x61, 0xa2, 0xb0, 0xd4, 0xbb, 0x12, 0x9, 0xa1, 0x39, 0x74, 0xe3, 0xd0, 0xda, 0x54, 0x7f, 0xfb, 0x87, 0xb8, 0xa1, 0xb1, 0x5c, 0xf, 0x5, 0xbf, 0xfe, 0xd7, 0x1b, 0x4e, 0xc0, 0x97, 0xed, 0xfc, 0xb1, 0xd6, 0x6e, 0xb2, 0x13, 0xef, 0x4b, 0x7a, 0xe, 0x35, 0x30, 0xad, 0xa, 0x43, 0x1d, 0xd4, 0xbb, 0x35, 0xbe, 0xb9, 0xfd, 0x16, 0x79, 0x1b, 0x8a, 0x2a, 0x69, 0xe1, 0xd6, 0x95, 0xca, 0x5c, 0x5c, 0x3, 0x5e, 0xdf, 0x9, 0xd9, 0x2a, 0x25, 0xa3, 0x84, 0xf4, 0xe0, 0xb3, 0x63, 0xf1, 0xb, 0x34, 0x23, 0xd, 0xc1, 0xbe, 0xd6, 0x9a, 0xc7, 0x14, 0x42, 0x5b, 0x7e, 0x27, 0xc2, 0xe7, 0xbd, 0x4c, 0xd9, 0xee, 0x53, 0x83, 0x3b, 0xd9, 0x62, 0x4, 0xbb, 0xde, 0x1f, 0xc5, 0xa3, 0x41, 0x3a, 0x94, 0xc2, 0x6a, 0xc4, 0x83, 0xb3, 0xe0, 0xeb, 0xa0, 0x79, 0xfa, 0xbc, 0x1e, 0x92, 0xcc, 0xf4, 0xb3, 0x72, 0xd9, 0x3c, 0xe5, 0x2e, 0xb9, 0xc6, 0xd0, 0x14, 0xa9, 0x21, 0xc8, 0x71, 0xc, 0x32, 0x6e, 0xb4, 0x63, 0x7b, 0x4c, 0xf, 0xfc, 0x0, 0x5d, 0x78, 0x2, 0x11, 0x1b, 0x16, 0x6d, 0xcf, 0xe8, 0xa7, 0x2a, 0x73, 0x36, 0xeb, 0xe8, 0x85, 0x58, 0xfa, 0x6e, 0xb, 0xe1, 0xc3, 0x8d, 0xef, 0x35, 0xdb, 0xba, 0xd4, 0xd5, 0x76, 0xe1, 0x4, 0xe8, 0x8b, 0xb, 0xb2, 0x6f, 0xc0, 0x85, 0xe5, 0x77, 0xf2, 0x3a, 0xb0, 0x88, 0xf, 0x9, 0x87, 0xdc, 0xee, 0x95, 0x9, 0x25, 0x3, 0xe, 0x21, 0xf8, 0x61, 0x43, 0xe5, 0x12, 0x3f, 0x33, 0x94, 0x14, 0x85, 0xf9, 0x1e, 0xee, 0x5, 0xdc, 0x73, 0x5, 0xf8, 0xbd, 0x5f, 0x7f, 0x3, 0xf8, 0x18, 0x31, 0x72, 0x67, 0xa, 0x5, 0x3b, 0x1c, 0x73, 0x7a, 0x43, 0x44, 0x18, 0xce, 0x76, 0x5b, 0x15, 0xb5, 0xa6, 0x99, 0x22, 0xb9, 0xa0, 0x4f, 0xd, 0xe, 0x91, 0xe, 0x31, 0x23, 0x3, 0x9a, 0x15, 0xb2, 0x8b, 0xb6, 0x65, 0x57, 0x79, 0xd, 0x51, 0xdb, 0xd8, 0xbf, 0xf9, 0x76, 0x1c, 0xdb, 0xce, 0x11, 0x4a, 0xc1, 0xcd, 0xb3, 0xc1, 0xab, 0xbc, 0xdb, 0x51, 0x78, 0xdc, 0xc1, 0x1a, 0x2e, 0x22, 0x39, 0xff, 0xf7, 0x97, 0x76, 0x4b, 0x3c, 0xcb, 0xcf, 0x8b, 0x9d, 0x30, 0xc6, 0xe1, 0xcc, 0xb1, 0x4f, 0x9f, 0xd, 0x6d, 0x63, 0xb1, 0x57, 0x8b, 0x9c, 0x5c, 0x24, 0x2f, 0x72, 0x61, 0x32, 0x55, 0x38, 0xa6, 0x19, 0x7d, 0x39, 0x6c, 0xc3, 0x86, 0x68, 0xb4, 0x3e, 0xe9, 0x6e, 0x9b, 0xb4, 0x29, 0x49, 0x7a, 0xee, 0xb, 0x4e, 0xa2, 0x9f, 0x98, 0x4b, 0x44, 0x76, 0x97, 0xe5, 0x6, 0x10, 0x1a, 0x58, 0x79, 0x7a, 0x8a, 0xa1, 0xbc, 0xc5, 0xf3, 0xf7, 0x2c, 0x73, 0x7b, 0x9b, 0x13, 0x35, 0x49, 0x6a, 0x73, 0x80, 0xda, 0xe4, 0xe9, 0xfe, 0x27, 0x28, 0x34, 0x8f, 0xae, 0xb3, 0xbc, 0xdb, 0xee, 0xf4, 0xd, 0x17, 0x1f, 0x35, 0x87, 0xef, 0x0, 0x1, 0x4e, 0x53, 0x64, 0x6f, 0x7e, 0x90, 0xd7, 0xe2, 0x8, 0x16, 0x97, 0x98, 0xc0, 0xd9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x10, 0x14, 0x1e, 0x28, 0x2e, 0x38, 0x3e,
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			beaconState, privKeys := tt.genState(t)
			idx, err := helpers.BeaconProposerIndex(context.Background(), beaconState)
			require.NoError(t, err)
			block := tt.genBlock(t, beaconState, privKeys)
			got, err := signing.ComputeDomainAndSign(
				beaconState, time.CurrentEpoch(beaconState), block, tt.domainType, privKeys[idx])
			require.NoError(t, err)
			require.DeepEqual(t, tt.want, got, "Incorrect signature")
		})
	}
}
*/

func TestSigningRoot_ComputeForkDigest(t *testing.T) {
	tests := []struct {
		version []byte
		root    [32]byte
		result  [4]byte
	}{
		{version: []byte{'A', 'B', 'C', 'D'}, root: [32]byte{'i', 'o', 'p'}, result: [4]byte{0x69, 0x5c, 0x26, 0x47}},
		{version: []byte{'i', 'm', 'n', 'a'}, root: [32]byte{'z', 'a', 'b'}, result: [4]byte{0x1c, 0x38, 0x84, 0x58}},
		{version: []byte{'b', 'w', 'r', 't'}, root: [32]byte{'r', 'd', 'c'}, result: [4]byte{0x83, 0x34, 0x38, 0x88}},
	}
	for _, tt := range tests {
		digest, err := signing.ComputeForkDigest(tt.version, tt.root[:])
		require.NoError(t, err)
		assert.Equal(t, tt.result, digest, "Wanted domain version: %#x, got: %#x", digest, tt.result)
	}
}

func TestFuzzverifySigningRoot_10000(_ *testing.T) {
	fuzzer := fuzz.NewWithSeed(0)
	st := &zondpb.BeaconStateCapella{}
	var pubkey [dilithium2.CryptoPublicKeyBytes]byte
	var sig [96]byte
	var domain [4]byte
	var p []byte
	var s []byte
	var d []byte
	for i := 0; i < 10000; i++ {
		fuzzer.Fuzz(st)
		fuzzer.Fuzz(&pubkey)
		fuzzer.Fuzz(&sig)
		fuzzer.Fuzz(&domain)
		fuzzer.Fuzz(st)
		fuzzer.Fuzz(&p)
		fuzzer.Fuzz(&s)
		fuzzer.Fuzz(&d)
		err := signing.VerifySigningRoot(st, pubkey[:], sig[:], domain[:])
		_ = err
		err = signing.VerifySigningRoot(st, p, s, d)
		_ = err
	}
}

func TestDigestMap(t *testing.T) {
	testVersion := []byte{'A', 'B', 'C', 'D'}
	testValRoot := [32]byte{'t', 'e', 's', 't', 'r', 'o', 'o', 't'}
	digest, err := signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)

	cachedDigest, err := signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)
	assert.Equal(t, digest, cachedDigest)
	testVersion[3] = 'E'
	cachedDigest, err = signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)
	assert.NotEqual(t, digest, cachedDigest)
	testValRoot[5] = 'z'
	cachedDigest2, err := signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)
	assert.NotEqual(t, digest, cachedDigest2)
	assert.NotEqual(t, cachedDigest, cachedDigest2)
}
func TestBlockSignatureBatch_NoSigVerification(t *testing.T) {
	tests := []struct {
		pubkey          []byte
		mockSignature   []byte
		domain          []byte
		wantMessageHexs []string
	}{
		{
			pubkey:        []byte{0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0xe4},
			mockSignature: []byte{0xa9, 0x9a, 0x76, 0xed, 0x77},
			domain:        []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169},
			// TODO(rgeraldes24) - double check value
			// wantMessageHexs: []string{"0xe6012bc68e112797a91ed6889e7453f8e304fb76fbffcec1c62eef280a93f7ba"},
			wantMessageHexs: []string{"0x23af52b04feeeb1f1dc508b2f7a392d4eb23f2da1bbb6946126214a09b224cb8"},
		},
	}
	for _, tt := range tests {
		block := util.NewBeaconBlockCapella()
		got, err := signing.BlockSignatureBatch(tt.pubkey, tt.mockSignature, tt.domain, block.Block.HashTreeRoot)
		require.NoError(t, err)
		for i, message := range got.Messages {
			require.Equal(t, hexutil.Encode(message[:]), tt.wantMessageHexs[i])
		}
	}
}
