package signing_test

import (
	"bytes"
	"context"
	"testing"

	fuzz "github.com/google/gofuzz"
	"github.com/theQRL/go-zond/common/hexutil"
	"github.com/theQRL/qrysm/beacon-chain/core/helpers"
	"github.com/theQRL/qrysm/beacon-chain/core/signing"
	"github.com/theQRL/qrysm/beacon-chain/core/time"
	"github.com/theQRL/qrysm/beacon-chain/state"
	field_params "github.com/theQRL/qrysm/config/fieldparams"
	"github.com/theQRL/qrysm/config/params"
	"github.com/theQRL/qrysm/crypto/dilithium"
	"github.com/theQRL/qrysm/encoding/bytesutil"
	qrysmpb "github.com/theQRL/qrysm/proto/qrysm/v1alpha1"
	"github.com/theQRL/qrysm/testing/assert"
	"github.com/theQRL/qrysm/testing/require"
	"github.com/theQRL/qrysm/testing/util"
)

func TestSigningRoot_ComputeSigningRoot(t *testing.T) {
	emptyBlock := util.NewBeaconBlockCapella()
	_, err := signing.ComputeSigningRoot(emptyBlock, bytesutil.PadTo([]byte{'T', 'E', 'S', 'T'}, 32))
	assert.NoError(t, err, "Could not compute signing root of block")
}

func TestSigningRoot_ComputeDomain(t *testing.T) {
	tests := []struct {
		epoch      uint64
		domainType [4]byte
		domain     []byte
	}{
		{epoch: 1, domainType: [4]byte{4, 0, 0, 0}, domain: []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 2, domainType: [4]byte{4, 0, 0, 0}, domain: []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 2, domainType: [4]byte{5, 0, 0, 0}, domain: []byte{5, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 3, domainType: [4]byte{4, 0, 0, 0}, domain: []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
		{epoch: 3, domainType: [4]byte{5, 0, 0, 0}, domain: []byte{5, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169}},
	}
	for _, tt := range tests {
		if got, err := signing.ComputeDomain(tt.domainType, nil, nil); !bytes.Equal(got, tt.domain) {
			t.Errorf("wanted domain version: %d, got: %d", tt.domain, got)
		} else {
			require.NoError(t, err)
		}
	}
}

func TestSigningRoot_ComputeDomainAndSign(t *testing.T) {
	tests := []struct {
		name       string
		genState   func(t *testing.T) (state.BeaconState, []dilithium.DilithiumKey)
		genBlock   func(t *testing.T, st state.BeaconState, keys []dilithium.DilithiumKey) *qrysmpb.SignedBeaconBlockCapella
		domainType [4]byte
		want       []byte
	}{
		{
			name: "block proposer",
			genState: func(t *testing.T) (state.BeaconState, []dilithium.DilithiumKey) {
				beaconState, privKeys := util.DeterministicGenesisStateCapella(t, 100)
				require.NoError(t, beaconState.SetSlot(beaconState.Slot()+1))
				return beaconState, privKeys
			},
			genBlock: func(t *testing.T, st state.BeaconState, keys []dilithium.DilithiumKey) *qrysmpb.SignedBeaconBlockCapella {
				// block, err := util.GenerateFullBlockCapella(st, keys, nil, 1)
				block, err := util.GenerateFullBlockCapella(st, keys, nil, 2)
				require.NoError(t, err)
				return block
			},
			domainType: params.BeaconConfig().DomainBeaconProposer,
			want: []byte{
				0xc1, 0xf2, 0xcc, 0x11, 0xa5, 0x59, 0x8f, 0xd1, 0xce, 0x8e, 0x27, 0x1, 0xba, 0x2b, 0x2e, 0xbf, 0x69, 0xdf, 0xb8, 0xd4, 0xbc, 0x9, 0x9c, 0x9c, 0x64, 0xa7, 0xea, 0xa1, 0x8f, 0x31, 0x90, 0xbb, 0xe, 0x9d, 0x6a, 0x2a, 0x7, 0xb, 0xbe, 0xb8, 0xb7, 0xdf, 0xc2, 0xde, 0xb2, 0xe2, 0x20, 0x50, 0x93, 0x89, 0xbc, 0xd6, 0xf4, 0x2c, 0x61, 0x2d, 0xfb, 0xb9, 0xb2, 0x9b, 0x39, 0xbb, 0x10, 0x45, 0x4c, 0x21, 0x15, 0x82, 0x52, 0x81, 0x63, 0x7c, 0x4c, 0x7b, 0xd7, 0xb7, 0x4b, 0x6f, 0xae, 0x38, 0x51, 0x60, 0x70, 0xc, 0x92, 0x1e, 0xd7, 0xb0, 0x92, 0x38, 0xac, 0x7f, 0x81, 0x84, 0x70, 0x75, 0xc2, 0x49, 0xf2, 0x25, 0x7b, 0x3a, 0xe, 0xe7, 0x84, 0x64, 0x32, 0x5d, 0x3f, 0x7d, 0x79, 0x0, 0x96, 0xd8, 0x80, 0xb5, 0xa5, 0x1f, 0x27, 0x66, 0x16, 0x97, 0xd7, 0xd4, 0xb2, 0x9b, 0x90, 0xc7, 0x53, 0x96, 0xb6, 0x86, 0x22, 0xd1, 0x7c, 0x60, 0xb8, 0x36, 0x29, 0xb3, 0x3f, 0x4c, 0x87, 0x84, 0xde, 0xd0, 0xd0, 0xef, 0x98, 0x62, 0x85, 0x82, 0xbf, 0xab, 0xf, 0x8e, 0x7a, 0x33, 0xa5, 0xb8, 0xb6, 0x65, 0xd1, 0xec, 0x6b, 0xd0, 0x1e, 0xb, 0x81, 0x36, 0xe3, 0x1e, 0xc3, 0x77, 0x3d, 0x96, 0x7b, 0x31, 0x50, 0x75, 0x23, 0x49, 0x84, 0x44, 0x84, 0xbd, 0x8d, 0xa, 0xbe, 0xf7, 0x37, 0xfa, 0x2a, 0xf4, 0x45, 0x93, 0xc5, 0xd5, 0x36, 0xeb, 0x23, 0xf5, 0xe, 0x71, 0x87, 0xb3, 0xaa, 0x40, 0x23, 0xe, 0x15, 0x0, 0xb1, 0x39, 0x8e, 0x40, 0xce, 0xbe, 0xc1, 0x66, 0xcf, 0x53, 0xa2, 0x83, 0x90, 0x19, 0x9b, 0x8, 0xcd, 0xd6, 0x83, 0xac, 0x91, 0xaa, 0x53, 0xc5, 0x11, 0xab, 0x5d, 0xd9, 0xab, 0xff, 0xaa, 0xfe, 0xe0, 0x85, 0xa2, 0x35, 0x3f, 0x17, 0x29, 0x0, 0xc5, 0x57, 0x62, 0x51, 0x1b, 0x77, 0x15, 0xef, 0x71, 0x2d, 0xe7, 0xb4, 0x62, 0x44, 0x48, 0x6f, 0x1d, 0x46, 0xba, 0xcf, 0x3b, 0x6f, 0xe7, 0x71, 0x49, 0xf5, 0xba, 0xb1, 0xc9, 0xab, 0x54, 0x6f, 0x46, 0x21, 0xd0, 0xc7, 0xf7, 0x35, 0x24, 0xfc, 0xe0, 0x3b, 0x58, 0x8d, 0x70, 0x15, 0x51, 0x36, 0x28, 0x4f, 0xc2, 0x76, 0xc2, 0x1f, 0x66, 0xb7, 0x8c, 0xbc, 0x64, 0x95, 0x71, 0x7e, 0x28, 0x65, 0x15, 0xd5, 0xe8, 0x63, 0xb6, 0xe0, 0xb3, 0xc5, 0xd2, 0xd7, 0xa5, 0x42, 0x5f, 0x70, 0x43, 0x8e, 0xad, 0x93, 0xb2, 0xb, 0xd2, 0x6c, 0x34, 0x89, 0x5a, 0xa9, 0x83, 0xa2, 0xa4, 0x44, 0xfa, 0x6e, 0x91, 0x2e, 0x44, 0xb7, 0x6f, 0xb2, 0x30, 0x52, 0x77, 0x5f, 0xcd, 0x10, 0x9f, 0x96, 0x57, 0xf5, 0xda, 0xc3, 0x23, 0x61, 0xdf, 0xf3, 0x57, 0xa, 0xa8, 0xb7, 0x91, 0x2f, 0x20, 0x80, 0xeb, 0xd7, 0xc3, 0x48, 0xf6, 0x31, 0x34, 0x8d, 0x90, 0x50, 0xdd, 0x21, 0x6a, 0x9c, 0x6, 0x40, 0xa7, 0x29, 0xe8, 0xf3, 0xdd, 0xec, 0xc, 0x29, 0x91, 0x31, 0xe1, 0xd, 0xf7, 0xed, 0xac, 0x67, 0x3d, 0x31, 0x5b, 0xb2, 0x99, 0x0, 0x7b, 0xb7, 0x40, 0x85, 0x6, 0xcb, 0x40, 0xa5, 0x65, 0x5a, 0x69, 0x82, 0xe7, 0x9d, 0x8e, 0xcb, 0x66, 0xf9, 0x96, 0x91, 0xb3, 0xe3, 0x13, 0x57, 0x72, 0xb0, 0x66, 0x6e, 0x76, 0x82, 0x93, 0x1e, 0xc7, 0x14, 0x94, 0x22, 0x9f, 0xc9, 0x58, 0xf3, 0xff, 0x21, 0x45, 0x50, 0xf8, 0xe2, 0x74, 0x97, 0xa, 0x55, 0x8a, 0x56, 0x6a, 0x83, 0xf1, 0x7c, 0x34, 0x64, 0x42, 0x28, 0x17, 0x71, 0xde, 0xf1, 0x55, 0xae, 0x2d, 0x99, 0x4c, 0x12, 0x63, 0x1a, 0x1b, 0x3, 0x4d, 0x3f, 0xd7, 0xbc, 0x75, 0x81, 0x35, 0xb7, 0x1d, 0x9a, 0x9, 0x1f, 0xeb, 0xc9, 0x76, 0x26, 0xed, 0xd, 0x2, 0x13, 0x3a, 0x48, 0x67, 0xc1, 0x1d, 0xc8, 0xdf, 0xfc, 0xc6, 0xf6, 0xd6, 0x3e, 0xfa, 0x5e, 0x58, 0x0, 0x21, 0x8d, 0x5f, 0x8e, 0x59, 0xc1, 0x12, 0x5b, 0xe9, 0x0, 0xd3, 0x82, 0x3c, 0x67, 0xb0, 0xd5, 0x1, 0x1b, 0xf3, 0x23, 0xaa, 0x81, 0x66, 0x83, 0x98, 0x22, 0x61, 0x70, 0xd4, 0x2f, 0x42, 0x7, 0x4, 0xd, 0x9e, 0x85, 0x61, 0xd2, 0xce, 0x7a, 0xe2, 0x96, 0x1f, 0x77, 0x58, 0xa9, 0x7d, 0x69, 0xd4, 0x4f, 0xbb, 0x22, 0x1, 0xcf, 0xba, 0xc1, 0xee, 0x53, 0x86, 0xe, 0x1b, 0x5, 0x93, 0xad, 0x26, 0x32, 0xe4, 0x7a, 0x77, 0x60, 0x71, 0x2f, 0xd5, 0xc5, 0x91, 0xf0, 0x1b, 0xd3, 0x3, 0x89, 0x5a, 0xb2, 0x8f, 0x3a, 0x36, 0x61, 0x7e, 0x5a, 0x25, 0xc5, 0x81, 0x76, 0x7c, 0x51, 0x49, 0xe8, 0x3a, 0xe3, 0xb1, 0x9, 0xd8, 0x5f, 0x4c, 0xed, 0xd7, 0xec, 0x76, 0x15, 0xf8, 0x7c, 0x6f, 0xf, 0xff, 0x2d, 0x5, 0xed, 0x44, 0x8f, 0xc6, 0x8d, 0xa8, 0xa3, 0x50, 0x79, 0xf9, 0x8f, 0x76, 0x50, 0x20, 0x5, 0xa, 0x28, 0x2d, 0x4f, 0xbc, 0x2d, 0x15, 0x21, 0x0, 0x52, 0xd6, 0xaa, 0xe0, 0xf7, 0x47, 0x11, 0x5d, 0xbc, 0xbc, 0xd7, 0x6e, 0x88, 0x75, 0x6d, 0xb, 0xa6, 0xaf, 0xc3, 0x1d, 0xf1, 0x54, 0x66, 0x6f, 0xb6, 0x3a, 0x54, 0xfb, 0xca, 0xa2, 0xf7, 0x20, 0xbd, 0x8, 0xfe, 0x7d, 0xbd, 0x30, 0xdd, 0xf3, 0x9, 0x48, 0x82, 0xa6, 0x4a, 0x85, 0xda, 0x27, 0x26, 0xcd, 0xbc, 0x70, 0xe1, 0x66, 0xd8, 0x5f, 0x2f, 0xfc, 0x53, 0x95, 0xa7, 0xa5, 0xb1, 0xc0, 0x69, 0xc6, 0x62, 0x2f, 0x78, 0x7b, 0x75, 0xa1, 0x9a, 0xd4, 0xb2, 0x5b, 0xe9, 0xb3, 0x84, 0xc3, 0x88, 0xf7, 0xb5, 0xc1, 0xb6, 0xb, 0xa2, 0x80, 0x9d, 0xc5, 0x5a, 0x4a, 0xed, 0xd0, 0xf0, 0xe4, 0xdf, 0xb3, 0xfe, 0xd4, 0xd2, 0x1f, 0x23, 0xc, 0xd3, 0x89, 0x28, 0x78, 0x79, 0xd9, 0x6e, 0xe4, 0xcc, 0x61, 0xfa, 0x47, 0xee, 0x2d, 0xb4, 0xad, 0xde, 0x68, 0x97, 0x25, 0x90, 0x65, 0x51, 0x12, 0xb9, 0x70, 0xe6, 0xb5, 0xd9, 0x5f, 0x1f, 0x4a, 0x2, 0x18, 0x46, 0xf7, 0x11, 0xc3, 0x63, 0xad, 0x17, 0x15, 0x8a, 0x5a, 0x47, 0x4b, 0x84, 0x17, 0x2a, 0x6b, 0xeb, 0x5e, 0x0, 0x42, 0xa6, 0x6d, 0x69, 0x94, 0x44, 0x6b, 0x81, 0xee, 0x8c, 0xee, 0xe5, 0x98, 0xb2, 0x80, 0x83, 0xc0, 0x75, 0x8b, 0xb0, 0xf5, 0xbe, 0x79, 0x7, 0xe8, 0x28, 0x47, 0x28, 0xd0, 0x49, 0x79, 0x30, 0x10, 0x81, 0x8a, 0xf6, 0x5c, 0x7, 0xab, 0xae, 0x61, 0xcc, 0x7e, 0x1, 0xdd, 0xda, 0x2e, 0x7c, 0xd0, 0xf6, 0x97, 0x37, 0xb2, 0x4d, 0x47, 0x83, 0x69, 0x8c, 0x5, 0x6c, 0x2, 0xad, 0x5, 0x57, 0x58, 0xfc, 0xe, 0x25, 0x4d, 0xca, 0x68, 0x18, 0xc1, 0x3, 0x22, 0xd0, 0xd7, 0x3a, 0x4d, 0x87, 0xed, 0xda, 0x87, 0x6c, 0xf1, 0xc6, 0xae, 0xd2, 0xac, 0x27, 0x53, 0xbd, 0x1c, 0xc2, 0xb5, 0x12, 0x18, 0xf3, 0x13, 0x7f, 0x93, 0x85, 0xe2, 0x60, 0xf1, 0xa9, 0xf9, 0x43, 0x37, 0x11, 0x88, 0x85, 0xa2, 0xd, 0x96, 0xbe, 0x7a, 0xab, 0x7, 0x54, 0xb9, 0x10, 0xf2, 0xdf, 0x5, 0xc8, 0xd1, 0x9, 0xb2, 0x30, 0x36, 0xec, 0x83, 0x1d, 0x31, 0xb4, 0xcc, 0x2, 0xe, 0x1c, 0xf1, 0xe0, 0x23, 0xc1, 0x65, 0x17, 0xcf, 0x74, 0x12, 0xc4, 0x5a, 0xbd, 0xbb, 0x65, 0x82, 0x73, 0xe8, 0xab, 0x36, 0x67, 0xd3, 0x20, 0xc6, 0x8b, 0x5a, 0x2e, 0xf8, 0x79, 0xa8, 0xb8, 0xb4, 0x7, 0x71, 0x9, 0x5a, 0xd, 0x91, 0x69, 0x64, 0x9a, 0xad, 0x58, 0x25, 0xd6, 0x7a, 0x43, 0x25, 0x92, 0xd, 0xa4, 0x34, 0xb2, 0xd5, 0x23, 0xa5, 0xf4, 0x35, 0x0, 0xaa, 0xdf, 0xdd, 0xa8, 0xb3, 0xe2, 0x86, 0xb0, 0x76, 0x53, 0x8a, 0xf1, 0xbb, 0xfd, 0x11, 0xcd, 0x72, 0x97, 0x50, 0x87, 0x8e, 0x2f, 0x61, 0x1a, 0xa2, 0x29, 0x81, 0x9c, 0xd3, 0x25, 0x17, 0x88, 0x17, 0xa7, 0x1d, 0xc2, 0xca, 0xed, 0xf7, 0x98, 0xd0, 0xf9, 0x31, 0x91, 0xab, 0x3, 0xda, 0xfb, 0x96, 0x27, 0x55, 0xa7, 0xe3, 0xde, 0x82, 0x3, 0x30, 0x18, 0xf, 0x0, 0x73, 0x46, 0x6f, 0xa1, 0x4a, 0x2d, 0x31, 0xaa, 0x4a, 0x5f, 0xe8, 0x77, 0xc5, 0x72, 0x48, 0xac, 0x9, 0xf8, 0xde, 0xcd, 0xe5, 0x23, 0x6f, 0xb1, 0x8a, 0x9c, 0xa0, 0x51, 0x3e, 0x91, 0xb1, 0x90, 0xe3, 0xa3, 0x7e, 0xc6, 0x91, 0x54, 0xe4, 0xbd, 0xf6, 0xc3, 0xdc, 0x48, 0x8a, 0xa6, 0x1, 0xa7, 0x58, 0x25, 0xec, 0x47, 0xdf, 0x47, 0xb, 0xca, 0xe4, 0xa9, 0x20, 0xf5, 0x39, 0x42, 0x6d, 0xd9, 0x39, 0x47, 0x7e, 0x57, 0xb6, 0x32, 0x6b, 0xb8, 0xe4, 0x28, 0x75, 0xa, 0x44, 0x39, 0x6d, 0xe, 0xd1, 0xec, 0x5b, 0x28, 0x89, 0xcb, 0x4a, 0xb1, 0x53, 0x88, 0x24, 0x23, 0x60, 0xcb, 0xa6, 0xdb, 0xa3, 0x1a, 0x83, 0xf4, 0xe1, 0x34, 0x7d, 0xf3, 0xce, 0x1, 0xef, 0x5e, 0x5, 0x42, 0x74, 0x9, 0x6f, 0xec, 0xfd, 0x31, 0x37, 0xca, 0x88, 0xf5, 0x88, 0x56, 0x3d, 0xd9, 0xc3, 0xae, 0x65, 0x82, 0xd, 0xd1, 0x5f, 0x79, 0xb1, 0xa9, 0x3a, 0xee, 0x86, 0x1c, 0x44, 0x1d, 0xaa, 0x94, 0xd0, 0x4d, 0xf1, 0xff, 0x4f, 0xd4, 0x34, 0x51, 0x97, 0xd2, 0xb9, 0x59, 0xcd, 0xe6, 0xa6, 0xa2, 0x20, 0x39, 0xe3, 0xe1, 0x3f, 0xe0, 0xad, 0x2e, 0x1c, 0x8e, 0x69, 0x6c, 0xb1, 0x5c, 0xbc, 0x67, 0x5d, 0x52, 0x5d, 0x99, 0x4b, 0xf6, 0x43, 0xbf, 0xae, 0xcc, 0x87, 0x84, 0x2f, 0xee, 0x84, 0xd8, 0x4e, 0xe8, 0x28, 0xce, 0x8d, 0xd2, 0xed, 0x6e, 0x8, 0x6d, 0x3c, 0x7d, 0x99, 0x3a, 0xe0, 0xee, 0xb2, 0xe0, 0xf5, 0x59, 0xf8, 0xc7, 0xe3, 0x81, 0x37, 0x91, 0xe2, 0xbc, 0xbe, 0x79, 0xe3, 0x6b, 0xe, 0xb0, 0xe0, 0x41, 0x64, 0xc3, 0x52, 0xcb, 0xbe, 0x62, 0x85, 0xe2, 0x26, 0x2a, 0xa3, 0x91, 0xb0, 0x39, 0x47, 0x8, 0x26, 0x88, 0x10, 0x1f, 0x7e, 0x11, 0xe, 0x5d, 0xc8, 0x5d, 0xe8, 0x8, 0xcc, 0x3c, 0x4b, 0x61, 0xa6, 0x6f, 0x12, 0xcf, 0xb0, 0x69, 0x44, 0x22, 0x7c, 0x65, 0xaf, 0x21, 0x46, 0xaa, 0xa2, 0xa8, 0xc9, 0x9e, 0x89, 0x74, 0x68, 0x33, 0x7c, 0x6, 0x96, 0x6c, 0xf2, 0xf7, 0xf, 0x31, 0xc6, 0x73, 0xb5, 0x16, 0xb2, 0xd0, 0xe1, 0x22, 0xa9, 0x2d, 0x6e, 0x1a, 0xae, 0x2c, 0x50, 0x2d, 0x8, 0x32, 0xdb, 0x11, 0x30, 0x1e, 0xa1, 0x3, 0xd9, 0x43, 0x2b, 0x4c, 0xac, 0x0, 0x31, 0xbf, 0xf8, 0x43, 0x18, 0x29, 0xc3, 0xde, 0xa7, 0xbc, 0x42, 0x39, 0x79, 0x45, 0xd3, 0xcd, 0x7d, 0x6a, 0xe7, 0xc7, 0x7d, 0xb1, 0x52, 0xff, 0x47, 0x10, 0xfc, 0x7d, 0xbe, 0xb0, 0xd4, 0x2f, 0xb8, 0x44, 0x20, 0xd7, 0x62, 0x93, 0x9f, 0x4e, 0x86, 0x2c, 0xeb, 0x96, 0xa1, 0xff, 0xfc, 0x16, 0xab, 0x32, 0xbf, 0xc9, 0x49, 0xdf, 0xed, 0x1d, 0x8f, 0x6e, 0x7b, 0xd6, 0xe, 0xed, 0x9a, 0x61, 0xe6, 0xab, 0x5c, 0x49, 0x33, 0xc1, 0x69, 0xa7, 0x32, 0xcd, 0xab, 0x6d, 0x2a, 0xc6, 0x62, 0x9, 0xf5, 0xf5, 0xcd, 0x45, 0x9d, 0xdd, 0x5b, 0x4a, 0x7d, 0x7d, 0x74, 0xcb, 0xed, 0x36, 0xd1, 0x42, 0xbe, 0xc8, 0x23, 0xb5, 0x2d, 0xbc, 0x40, 0xee, 0x91, 0x13, 0xb7, 0x1, 0x17, 0xa4, 0x67, 0x88, 0x31, 0xa9, 0xe2, 0xd5, 0x49, 0x51, 0xee, 0xcb, 0xda, 0x86, 0x2d, 0x48, 0xce, 0xe7, 0xf1, 0x71, 0x53, 0x6, 0x93, 0xe5, 0xf, 0xde, 0xeb, 0x4a, 0x24, 0xc4, 0x46, 0x74, 0xbb, 0x84, 0xca, 0x3f, 0xf, 0x84, 0x97, 0xbe, 0x68, 0xd3, 0x85, 0x96, 0x2c, 0xd5, 0x3f, 0x1b, 0x84, 0x3a, 0xe4, 0xd1, 0xc8, 0x74, 0x8a, 0x9d, 0x49, 0x4a, 0xa3, 0x98, 0x1c, 0xc0, 0x3b, 0x1e, 0x30, 0x57, 0x50, 0x4f, 0xc0, 0xcc, 0x48, 0xda, 0x32, 0xf6, 0x69, 0x43, 0x2d, 0x92, 0x22, 0xb4, 0xa, 0xc4, 0xdd, 0x8b, 0x70, 0xac, 0x35, 0x58, 0x14, 0xc8, 0x16, 0xf0, 0xca, 0x83, 0xa8, 0x88, 0x3a, 0xc4, 0x61, 0x88, 0x85, 0x7, 0x73, 0x47, 0x7b, 0x6f, 0x52, 0xb8, 0xe0, 0x11, 0xa7, 0x22, 0xbb, 0x58, 0xf9, 0xa7, 0x55, 0x70, 0x3b, 0x84, 0xf, 0x7b, 0x10, 0xaf, 0xb4, 0x38, 0xf4, 0xa7, 0x31, 0x86, 0xa, 0x90, 0x94, 0xd8, 0x7e, 0x42, 0x1f, 0x3b, 0x6b, 0x8b, 0x26, 0x4a, 0x58, 0xb3, 0x6b, 0x5f, 0xc4, 0x4c, 0x1b, 0xce, 0x88, 0x46, 0x78, 0x24, 0xc4, 0xcb, 0x78, 0x6d, 0xd4, 0x5b, 0x6d, 0xec, 0xc4, 0xb9, 0x16, 0x5f, 0xe8, 0x60, 0x8b, 0x28, 0x9f, 0xe0, 0x16, 0x3c, 0xb5, 0x6b, 0x81, 0x71, 0x8f, 0x48, 0x5, 0x8a, 0x4e, 0x9, 0x64, 0x66, 0x91, 0x56, 0x65, 0xd8, 0xc0, 0x7b, 0xad, 0xcd, 0x62, 0x26, 0xf1, 0xd2, 0x29, 0x2a, 0x82, 0x82, 0xa3, 0x7d, 0x7f, 0x94, 0x27, 0xd7, 0xe5, 0x80, 0x5c, 0x35, 0x1c, 0xd2, 0x5a, 0x7b, 0x76, 0xcc, 0x40, 0x9e, 0x8a, 0x23, 0xe3, 0x2f, 0xce, 0x53, 0xf1, 0xc0, 0xa3, 0x74, 0xd3, 0x28, 0x20, 0x50, 0x37, 0xc8, 0x8d, 0x63, 0xad, 0xa8, 0xe9, 0xcf, 0xba, 0xd3, 0xd1, 0xa1, 0x29, 0xad, 0x29, 0x5c, 0xba, 0x3e, 0x98, 0x26, 0x4d, 0xd4, 0xcf, 0x7, 0x4e, 0x15, 0xc0, 0x97, 0x1b, 0xb1, 0x22, 0x39, 0x99, 0x3f, 0xa1, 0x36, 0x12, 0xe9, 0xdd, 0x7, 0x98, 0xd7, 0xae, 0xfc, 0xc3, 0xc, 0x49, 0x41, 0x5, 0x26, 0xe1, 0x4, 0xc4, 0xfb, 0x87, 0x72, 0xa7, 0xff, 0x92, 0xd, 0xd8, 0x85, 0xe7, 0x43, 0xb6, 0xcd, 0x5d, 0xb3, 0xe6, 0x3c, 0xb0, 0xb3, 0xc0, 0x8c, 0xbf, 0x67, 0x56, 0x95, 0xcb, 0xd5, 0x23, 0xdf, 0xa9, 0x60, 0x4b, 0x4c, 0x21, 0xff, 0xd0, 0x31, 0x48, 0x76, 0xba, 0x4f, 0xab, 0x6c, 0x73, 0x83, 0x7f, 0x4e, 0x51, 0x36, 0x97, 0x4e, 0x51, 0xc7, 0x75, 0xe5, 0x6e, 0xcb, 0xde, 0x5b, 0x21, 0xc4, 0xef, 0xf2, 0x2a, 0xfc, 0x7, 0x4, 0x9a, 0x5f, 0x36, 0xb, 0xdd, 0x70, 0xc0, 0xca, 0x30, 0x80, 0xe7, 0x24, 0x80, 0x44, 0x33, 0xbd, 0x10, 0x10, 0x54, 0x6d, 0xf7, 0xd6, 0x4b, 0x3, 0xef, 0xbe, 0x57, 0x6, 0xda, 0x7, 0xee, 0xaa, 0x6d, 0x64, 0x51, 0x51, 0x3, 0x1, 0x7, 0xba, 0xa5, 0x19, 0x8, 0x8c, 0x44, 0x61, 0xae, 0x53, 0xf0, 0xc6, 0xd, 0x5c, 0x6, 0x51, 0x32, 0x64, 0x41, 0xbf, 0xa9, 0xdd, 0xcc, 0xf, 0x5d, 0x90, 0x41, 0xe1, 0x5c, 0xba, 0xef, 0xc2, 0xbb, 0xce, 0xe3, 0xa6, 0x6c, 0x6a, 0xbe, 0xcf, 0xf, 0xe0, 0x7e, 0x87, 0xce, 0xe3, 0x9, 0x7a, 0x7b, 0x9e, 0x1, 0x62, 0x71, 0x39, 0xb3, 0xab, 0x43, 0x47, 0x88, 0x9e, 0xc1, 0x9f, 0x28, 0x96, 0xe2, 0xb1, 0xb0, 0xd5, 0x69, 0x95, 0x7c, 0xc3, 0x33, 0xc4, 0x27, 0xc, 0xf6, 0xb0, 0x23, 0x8d, 0x8a, 0xc6, 0x5, 0xf3, 0xcf, 0x1, 0xe5, 0x40, 0x84, 0xf2, 0xd9, 0xe0, 0xa8, 0x31, 0x4f, 0x4e, 0x5f, 0xd1, 0x2b, 0xef, 0xcf, 0x90, 0xc8, 0x3c, 0x90, 0xa0, 0xd, 0xde, 0x8c, 0xb7, 0xed, 0xa9, 0x40, 0xb8, 0x10, 0xe5, 0x6d, 0x9, 0x62, 0x23, 0x65, 0xaa, 0x3d, 0x22, 0x40, 0xe4, 0xbd, 0x9b, 0xd7, 0xe, 0xd4, 0xfa, 0xe1, 0x8, 0xf5, 0xad, 0xb8, 0x35, 0xb3, 0x37, 0xee, 0x32, 0x87, 0x5c, 0x41, 0x61, 0x23, 0x4e, 0x71, 0xb6, 0x9a, 0x1c, 0x16, 0x6, 0xb, 0x62, 0x82, 0xbb, 0xf4, 0xc5, 0x8c, 0xa4, 0xad, 0x1, 0x9a, 0x1e, 0x35, 0xb2, 0xc4, 0x19, 0x44, 0xc7, 0xfe, 0x56, 0x9c, 0x7a, 0xf5, 0x6a, 0xa, 0x45, 0x50, 0x3b, 0x54, 0x63, 0xd, 0x5a, 0xf8, 0xcb, 0x67, 0xa3, 0x19, 0x91, 0x42, 0x21, 0x8, 0x1, 0x47, 0xbb, 0x45, 0x46, 0x73, 0x14, 0x79, 0x28, 0xf2, 0xa8, 0x80, 0x6c, 0xba, 0x8d, 0x88, 0x0, 0x80, 0xef, 0xdf, 0x6d, 0x3a, 0x12, 0x39, 0x14, 0xe, 0xce, 0xbe, 0xeb, 0x58, 0x5b, 0x8a, 0xcf, 0x87, 0x5b, 0x4a, 0xd8, 0x42, 0x28, 0xbf, 0xec, 0xda, 0x68, 0x89, 0xe9, 0x83, 0xf9, 0x3c, 0xbe, 0x95, 0x3b, 0x50, 0xbf, 0x25, 0xf2, 0xeb, 0x64, 0xdb, 0x15, 0xd7, 0xc6, 0xe6, 0x24, 0xe3, 0xe8, 0xad, 0x52, 0xc, 0x0, 0x93, 0x72, 0x5d, 0xa2, 0x78, 0xad, 0xcf, 0xc, 0x57, 0xeb, 0x6, 0xe5, 0x33, 0xe8, 0xd1, 0x51, 0x56, 0x2, 0xf9, 0xd5, 0x73, 0xc0, 0xdf, 0xef, 0x19, 0x23, 0x9c, 0xe9, 0x9d, 0x3f, 0x47, 0xd1, 0x85, 0x78, 0x5d, 0xc7, 0x8f, 0x62, 0xbe, 0x85, 0xa, 0x58, 0xe0, 0x42, 0x82, 0xa0, 0xc3, 0x7a, 0x6d, 0x9d, 0x4a, 0x84, 0x72, 0x28, 0xa8, 0x46, 0x69, 0xb, 0x24, 0x5a, 0x4a, 0x7b, 0xdc, 0x7a, 0x3f, 0x8f, 0xeb, 0xab, 0xd4, 0x87, 0xa6, 0xdf, 0xe4, 0x32, 0x69, 0xc6, 0x83, 0xb5, 0xe1, 0xb7, 0x12, 0x9, 0xef, 0x79, 0xd6, 0xb, 0xdc, 0xc7, 0xfa, 0x33, 0xa1, 0x96, 0x48, 0x75, 0x6c, 0x1e, 0xb2, 0xfc, 0x1b, 0x13, 0xd6, 0x50, 0xd0, 0xd8, 0xd5, 0x94, 0xb4, 0xd9, 0xca, 0xec, 0x19, 0xa1, 0x13, 0x6f, 0x7e, 0x1e, 0x8f, 0x1b, 0x1b, 0x99, 0xdf, 0x5, 0xb5, 0x85, 0x5f, 0x21, 0xdc, 0x91, 0xa8, 0x4d, 0x6c, 0x37, 0x5c, 0x1c, 0x4, 0x1e, 0xfa, 0x4f, 0x38, 0x85, 0xe0, 0xb0, 0x40, 0x2a, 0xfb, 0xb, 0xcc, 0x12, 0x2a, 0xb4, 0x61, 0x8d, 0x94, 0x3, 0xa3, 0x13, 0x34, 0x71, 0x5c, 0x86, 0x74, 0xae, 0xde, 0x51, 0xbf, 0x73, 0x26, 0xc5, 0x7b, 0xd6, 0x74, 0x9e, 0x6c, 0x4b, 0x38, 0x6c, 0xd4, 0x0, 0x1d, 0xf9, 0x72, 0xaf, 0xe3, 0xa2, 0x96, 0xc6, 0x9d, 0x5e, 0x99, 0xb0, 0xde, 0xb9, 0x14, 0x96, 0x42, 0xf8, 0x8a, 0x27, 0xde, 0xc0, 0x9, 0xd1, 0x40, 0x2d, 0xfe, 0x93, 0x5f, 0xe8, 0x6, 0x46, 0xbc, 0xa8, 0x10, 0x3e, 0x3d, 0xd3, 0x1c, 0x8b, 0x96, 0x72, 0xe0, 0x17, 0xdb, 0x40, 0xdc, 0x25, 0xa8, 0x44, 0xa8, 0x41, 0xe2, 0x65, 0x31, 0xf7, 0x34, 0x33, 0x74, 0xd7, 0xa8, 0x4f, 0x2d, 0xea, 0xa4, 0x5a, 0xfd, 0xbe, 0x9f, 0x17, 0x1a, 0x12, 0xef, 0x7a, 0x96, 0x36, 0x2f, 0x94, 0xc, 0xfa, 0xf2, 0x1a, 0xfa, 0xa8, 0x29, 0x8e, 0xfd, 0xfe, 0xf7, 0xce, 0xdb, 0x1, 0xb3, 0xc1, 0xe, 0x6e, 0x6e, 0x79, 0x97, 0x35, 0x3c, 0x78, 0x49, 0x5c, 0xc4, 0xc, 0x25, 0x4, 0x33, 0x24, 0xab, 0xe8, 0xc0, 0xcc, 0x2f, 0x3, 0xb7, 0x7c, 0x2c, 0xd1, 0xfa, 0x2e, 0x49, 0xf2, 0xf8, 0x91, 0xdf, 0x7e, 0xca, 0x38, 0xc0, 0xa7, 0xc8, 0x45, 0xe4, 0x2d, 0xe0, 0xfd, 0xc5, 0x92, 0xe9, 0x45, 0x8d, 0x92, 0x99, 0xba, 0x3b, 0x31, 0x2a, 0x48, 0xa9, 0x10, 0x1e, 0x88, 0xc8, 0xf8, 0xf0, 0x61, 0x5e, 0x53, 0xb9, 0x8c, 0x2, 0xb3, 0x9e, 0x28, 0x19, 0x16, 0x4b, 0xa7, 0x15, 0x70, 0x57, 0x43, 0xc9, 0x1e, 0xc0, 0x3f, 0xae, 0xfa, 0x52, 0x82, 0xe5, 0x3b, 0x28, 0xde, 0x2, 0xf8, 0x8a, 0xd2, 0x6f, 0x0, 0xeb, 0xc4, 0xc, 0x2b, 0x9f, 0xb4, 0xf0, 0x7c, 0x1d, 0x92, 0x3e, 0x13, 0x4a, 0x81, 0x2, 0x37, 0xa2, 0x4b, 0x76, 0xd9, 0xbd, 0x3d, 0x9e, 0x8a, 0xd0, 0xef, 0x13, 0x67, 0xf7, 0xc8, 0xd1, 0x47, 0xd3, 0x12, 0x79, 0x6e, 0xe2, 0xe1, 0x79, 0x1f, 0xcf, 0xd2, 0x3a, 0x1a, 0x89, 0x4e, 0xb5, 0xb3, 0xc1, 0x7a, 0xf1, 0xf4, 0xdd, 0x70, 0x1f, 0x53, 0x6e, 0x80, 0xe5, 0x87, 0x2, 0x66, 0xdb, 0x5e, 0x6, 0x5b, 0x95, 0x34, 0x25, 0x32, 0x60, 0xc9, 0xd7, 0x62, 0xee, 0xfd, 0x35, 0xa0, 0xc5, 0x75, 0x55, 0xf8, 0x39, 0x77, 0x32, 0xab, 0xd2, 0xe, 0x22, 0x9b, 0xd1, 0x1a, 0x3d, 0xb2, 0x9, 0x65, 0x8d, 0x3, 0xf8, 0xc6, 0x76, 0xe9, 0xdc, 0x68, 0xca, 0x23, 0x20, 0x29, 0xef, 0x68, 0xd8, 0x47, 0x33, 0x3b, 0xe5, 0xc1, 0xd6, 0x9, 0xe0, 0x36, 0x11, 0xc1, 0xb2, 0xcc, 0x11, 0x6c, 0x9, 0xa3, 0x40, 0xba, 0x7b, 0x83, 0xa7, 0x56, 0xc8, 0x37, 0xa6, 0xac, 0xd8, 0x32, 0x9d, 0xc0, 0x5a, 0xe0, 0x20, 0x1c, 0xcf, 0x95, 0xfe, 0xa0, 0x88, 0x13, 0x70, 0xb0, 0x8a, 0x36, 0x14, 0x96, 0x41, 0x2f, 0xcc, 0xbb, 0x3d, 0x72, 0x54, 0x47, 0x68, 0xf1, 0x57, 0x88, 0xf9, 0xca, 0x36, 0xf, 0x8c, 0x11, 0xda, 0xd4, 0x41, 0x28, 0xb1, 0x77, 0xda, 0x1e, 0x3d, 0x28, 0x70, 0xb6, 0xf4, 0x15, 0x48, 0x80, 0x91, 0x9b, 0x18, 0x5, 0x52, 0xf5, 0x8e, 0x75, 0x41, 0x50, 0xf9, 0xd2, 0xf6, 0x1, 0x62, 0x64, 0x3, 0xd5, 0x5f, 0x8d, 0x83, 0xa5, 0x88, 0x79, 0x5, 0x59, 0xb7, 0xfd, 0xb8, 0xe6, 0x62, 0x2e, 0x2c, 0x69, 0x8a, 0x2b, 0xaf, 0xa, 0x16, 0x83, 0x4d, 0x62, 0x4c, 0x35, 0x7a, 0xcc, 0xea, 0x7f, 0xa1, 0xf, 0x98, 0x5, 0xd4, 0xde, 0x9d, 0xcf, 0x6b, 0xd0, 0x20, 0x2b, 0x8e, 0x42, 0xf4, 0x3c, 0xcf, 0x20, 0x82, 0xb9, 0x41, 0xe2, 0xf8, 0x69, 0xac, 0x5c, 0xa6, 0x7, 0x9b, 0x38, 0x23, 0x82, 0x14, 0x9c, 0x6a, 0x8f, 0x24, 0x46, 0x8f, 0x69, 0xac, 0x5f, 0x8a, 0x1e, 0x36, 0x11, 0x4, 0x65, 0xb9, 0x1d, 0xfd, 0xe6, 0x54, 0x1f, 0xc2, 0xf7, 0x27, 0xdb, 0x8a, 0x4, 0x70, 0x7c, 0xce, 0xfc, 0x96, 0xdc, 0xbc, 0x4b, 0xb7, 0x39, 0xfe, 0xef, 0x2b, 0x56, 0x3d, 0xe8, 0x27, 0x75, 0x9c, 0x7f, 0xee, 0x44, 0x6f, 0xbf, 0xb4, 0x45, 0x98, 0x7b, 0x2c, 0xdf, 0xee, 0xa5, 0xf2, 0x25, 0x5, 0x44, 0xd, 0x4d, 0xe3, 0xe5, 0xf8, 0x29, 0xc0, 0xa6, 0x10, 0xd4, 0xec, 0xcb, 0x46, 0x79, 0x92, 0x4b, 0x33, 0x30, 0x9d, 0xc8, 0xc1, 0xa5, 0x39, 0x19, 0xec, 0x3d, 0x61, 0x73, 0x67, 0x77, 0xcb, 0xcd, 0x2d, 0x1f, 0xbb, 0xfc, 0x7c, 0x93, 0x8e, 0xaf, 0x5, 0x36, 0xa8, 0xf5, 0x48, 0x47, 0xa8, 0xf0, 0x4e, 0x15, 0x10, 0x5e, 0x24, 0x94, 0x18, 0x82, 0xe5, 0xd8, 0x19, 0x69, 0x4, 0xe4, 0x2d, 0xe, 0xe, 0x16, 0x65, 0x5b, 0x15, 0x9d, 0xc4, 0xe3, 0xc2, 0x9b, 0x5e, 0x12, 0x34, 0x7, 0xed, 0x43, 0x5a, 0x4b, 0xa, 0x79, 0x3, 0x4a, 0xd4, 0x43, 0xd0, 0x96, 0x56, 0x4c, 0x80, 0x13, 0x51, 0x75, 0xae, 0xa, 0x2a, 0xe3, 0xae, 0x84, 0x51, 0x37, 0x63, 0x54, 0x60, 0x7b, 0x58, 0x8d, 0x68, 0x12, 0x64, 0x75, 0x7, 0xaf, 0x61, 0x1f, 0x63, 0x64, 0xef, 0xbe, 0xe7, 0xe9, 0xdd, 0xad, 0x94, 0x85, 0x76, 0x32, 0xe4, 0xdd, 0xc, 0xbc, 0x48, 0xec, 0x40, 0x85, 0xdd, 0xe8, 0xd6, 0xfa, 0x3, 0x36, 0xf6, 0x5a, 0xab, 0x97, 0xb, 0xd, 0xac, 0x57, 0x6d, 0x64, 0x5, 0xe9, 0xb7, 0xd, 0xca, 0x43, 0x64, 0x78, 0xcc, 0xd6, 0xc1, 0xae, 0xd0, 0xb3, 0x52, 0x0, 0x50, 0x49, 0x51, 0x5e, 0xe8, 0xad, 0x1e, 0x48, 0x23, 0x2c, 0xd3, 0xa7, 0x9d, 0x80, 0x8a, 0xa8, 0xb4, 0x3, 0xf2, 0x62, 0xd1, 0x64, 0x5e, 0xfd, 0x7e, 0x2c, 0x93, 0x5a, 0x48, 0xdc, 0x7f, 0x8f, 0xdd, 0x9a, 0x1a, 0x11, 0x7c, 0x22, 0xcf, 0xab, 0xd3, 0xc, 0x10, 0xd3, 0xec, 0xdf, 0xfa, 0x7b, 0x38, 0x7a, 0x9, 0x91, 0xf9, 0xd5, 0x67, 0x88, 0x7c, 0x7c, 0xd3, 0x26, 0x51, 0x58, 0xda, 0xe3, 0xa9, 0x61, 0xff, 0x86, 0x64, 0x60, 0xf0, 0xca, 0x17, 0x14, 0x51, 0xf6, 0x2a, 0x7e, 0xa3, 0xde, 0xe, 0xe3, 0x68, 0xa5, 0x28, 0xaf, 0x6b, 0xb1, 0xab, 0x8b, 0xd0, 0xbe, 0xc9, 0xbd, 0xd7, 0x91, 0x3e, 0x91, 0xc6, 0x82, 0x46, 0x5, 0x2b, 0x3c, 0xeb, 0x7, 0xef, 0xd3, 0xbe, 0xd, 0x9e, 0xda, 0xd4, 0x54, 0x53, 0x76, 0xa4, 0x36, 0xc2, 0xd6, 0x4b, 0xde, 0x9, 0x6c, 0x7d, 0xf6, 0x36, 0x2f, 0xfa, 0x96, 0xe2, 0x7, 0xb3, 0xa3, 0xa3, 0xc6, 0x5b, 0x14, 0xa7, 0xb3, 0x50, 0x35, 0x7e, 0xa4, 0x5a, 0x91, 0xc9, 0x9c, 0x2c, 0xfc, 0xf1, 0xd2, 0xea, 0x20, 0x51, 0x9c, 0x64, 0xa2, 0x95, 0xd, 0xda, 0xb6, 0xc2, 0x7c, 0xb3, 0x17, 0xf3, 0x88, 0xcb, 0x9d, 0xde, 0x8d, 0xdd, 0xec, 0x2e, 0xe3, 0xa9, 0xd1, 0xa2, 0x8e, 0x45, 0x26, 0x32, 0xcd, 0x11, 0xb0, 0x6f, 0x20, 0x4c, 0x1a, 0x2f, 0xf3, 0x12, 0x70, 0x9a, 0x1, 0x5c, 0x57, 0xef, 0x8a, 0x24, 0x56, 0xeb, 0xf7, 0xcd, 0xcd, 0xe5, 0x4a, 0xc2, 0x2a, 0x65, 0x80, 0xab, 0x9c, 0x76, 0x11, 0xc, 0xbc, 0xac, 0xc9, 0x25, 0x11, 0x1b, 0xcf, 0x37, 0x67, 0x44, 0x26, 0x90, 0x9a, 0xb1, 0x76, 0xb2, 0x4, 0xc3, 0x11, 0x65, 0x48, 0x2f, 0xd7, 0x5, 0x68, 0x83, 0x9c, 0xc7, 0xb9, 0x69, 0xb5, 0xe2, 0xa0, 0xa5, 0x35, 0xd0, 0xc, 0x7a, 0x43, 0x59, 0x2e, 0xc5, 0xb9, 0xbb, 0xcd, 0xb7, 0x5, 0x81, 0x76, 0x6b, 0xa1, 0x3d, 0xb0, 0x33, 0x95, 0xe7, 0xe, 0xbb, 0xed, 0xab, 0xdc, 0x7e, 0x9b, 0x15, 0x26, 0xd3, 0x37, 0xdf, 0x86, 0xfd, 0x43, 0xb9, 0x18, 0xe4, 0xe, 0x4d, 0x9b, 0x7, 0x87, 0x60, 0x61, 0x73, 0xb4, 0xcd, 0x95, 0x80, 0xb3, 0x28, 0x31, 0x40, 0x5b, 0x88, 0xfb, 0xc3, 0xb3, 0x51, 0x21, 0x1f, 0x32, 0x32, 0x1d, 0x14, 0x93, 0x8c, 0xd9, 0xaf, 0x5c, 0x45, 0xc3, 0x24, 0xd0, 0x2c, 0x35, 0x36, 0xc1, 0xf4, 0x89, 0xae, 0x61, 0x35, 0x94, 0x85, 0x30, 0x12, 0xaa, 0x14, 0x7e, 0xe6, 0xbf, 0xd7, 0xd6, 0xbc, 0xed, 0xd, 0x8e, 0xfd, 0x44, 0x4a, 0x4f, 0x17, 0x56, 0x91, 0x90, 0x4d, 0x74, 0x1f, 0xd9, 0x27, 0x31, 0x93, 0xdc, 0xa1, 0x74, 0x36, 0x7d, 0xe2, 0x69, 0x16, 0x56, 0x3c, 0x3c, 0xa8, 0x94, 0x93, 0x2a, 0x5, 0xb6, 0xf, 0x2c, 0x6f, 0x29, 0x34, 0x6c, 0x6f, 0x23, 0x44, 0x9c, 0xb5, 0x52, 0x98, 0xdf, 0x3d, 0xe6, 0x1b, 0x3e, 0xfb, 0x33, 0xc6, 0xd7, 0x7e, 0x9c, 0x53, 0x49, 0xb3, 0x87, 0x8b, 0x22, 0x99, 0xec, 0x9b, 0xd7, 0xb4, 0xf6, 0xab, 0xae, 0x9f, 0xe6, 0x85, 0xe8, 0x68, 0xf0, 0x2d, 0x55, 0x82, 0x1a, 0xec, 0x58, 0x7e, 0x3, 0x7c, 0xbd, 0xb, 0xd3, 0xd, 0x97, 0x25, 0x5b, 0xf5, 0xe3, 0x90, 0x88, 0x7f, 0x5a, 0x59, 0xf5, 0xd7, 0x59, 0xaf, 0x57, 0x31, 0x95, 0x45, 0x38, 0x6d, 0xdf, 0xf3, 0x7e, 0x6, 0xc7, 0x9, 0xe8, 0x7b, 0x9c, 0x52, 0xa1, 0xd6, 0xdc, 0x33, 0x84, 0xdf, 0xa7, 0xfb, 0x9a, 0xcd, 0x3d, 0xc, 0x84, 0x7c, 0x88, 0x7f, 0x1d, 0x31, 0x6d, 0x70, 0x91, 0xaa, 0x45, 0x45, 0x24, 0xdb, 0xc, 0xf8, 0xc, 0x2a, 0xca, 0x53, 0xda, 0x75, 0xe3, 0x79, 0xe3, 0xe4, 0xed, 0x45, 0xdf, 0xe6, 0x5f, 0xaf, 0x98, 0xcd, 0x23, 0x53, 0x84, 0xd0, 0x60, 0xc5, 0xc6, 0xb8, 0x22, 0x6d, 0x64, 0xf9, 0x98, 0x26, 0x6e, 0xea, 0x94, 0x3f, 0x2e, 0xcd, 0x9f, 0xc6, 0x69, 0xca, 0x98, 0x92, 0xc6, 0x0, 0x2b, 0x7e, 0xe9, 0x28, 0xd4, 0xf7, 0x17, 0x4e, 0x2d, 0xf7, 0x8c, 0x1a, 0x24, 0xa8, 0x82, 0x3c, 0xbe, 0xfc, 0xd4, 0x8f, 0x81, 0x3a, 0x7c, 0x50, 0xf8, 0xf5, 0x7c, 0xe4, 0x5f, 0x2f, 0x73, 0x92, 0x7e, 0x9e, 0xd8, 0x69, 0x94, 0xb6, 0x91, 0x7b, 0xae, 0x1e, 0x51, 0xc6, 0x62, 0x4c, 0x3f, 0x66, 0xa, 0xb9, 0xdd, 0xc2, 0x81, 0x20, 0x2a, 0x76, 0x32, 0x4e, 0xef, 0x53, 0x81, 0xa5, 0x7c, 0x51, 0x76, 0x44, 0x3a, 0x58, 0x8b, 0xb9, 0x36, 0xa3, 0xfe, 0x4d, 0xde, 0x64, 0xf9, 0x7a, 0x77, 0xd2, 0x24, 0xd9, 0x61, 0x82, 0x5e, 0x97, 0xf, 0x44, 0x8d, 0x59, 0x51, 0xa, 0x25, 0xce, 0xd1, 0x2e, 0x6d, 0xdf, 0xa1, 0x94, 0xfa, 0x28, 0x89, 0x9b, 0x50, 0x7f, 0x3d, 0xae, 0x36, 0x10, 0x45, 0xee, 0x1a, 0x86, 0x8b, 0xe8, 0xf2, 0x29, 0xc2, 0x32, 0xfd, 0x19, 0xf0, 0x66, 0xfe, 0xda, 0x95, 0x7c, 0x23, 0x19, 0x70, 0xdb, 0x2f, 0x8d, 0x18, 0x1, 0xca, 0xd5, 0x7d, 0x69, 0xd3, 0x6e, 0xe0, 0x3b, 0xad, 0xaf, 0x93, 0x1d, 0xf4, 0x38, 0xbc, 0xe7, 0x7d, 0xa5, 0x4c, 0xbe, 0xd8, 0x73, 0xb3, 0x31, 0xf6, 0xe8, 0x19, 0xfc, 0x8e, 0x2b, 0xc2, 0x95, 0x5e, 0xa9, 0xc2, 0x27, 0x8b, 0x10, 0x57, 0x8d, 0x77, 0x27, 0xd7, 0x13, 0x99, 0x47, 0x76, 0xf7, 0xa0, 0xb, 0x63, 0x3a, 0xd1, 0xa2, 0x3d, 0xa1, 0xe8, 0xcd, 0x7e, 0x3b, 0xd3, 0xba, 0x8c, 0xfa, 0x63, 0x1a, 0x54, 0x10, 0x94, 0x45, 0xf9, 0x5f, 0x4, 0x6d, 0xec, 0xc5, 0xa, 0x64, 0x65, 0x2f, 0x44, 0xb9, 0x30, 0x38, 0xa8, 0x8, 0x2, 0x44, 0x52, 0x1a, 0x76, 0x99, 0x8e, 0xad, 0x1f, 0xd3, 0x18, 0x5b, 0x2e, 0xa, 0x34, 0xac, 0x62, 0xa3, 0x79, 0x2f, 0x38, 0xda, 0x49, 0x88, 0x53, 0xaa, 0x7b, 0xd3, 0xd2, 0xcc, 0xec, 0xab, 0xac, 0x86, 0x42, 0x87, 0x55, 0x7e, 0x92, 0xa0, 0x4f, 0x4c, 0x30, 0x7a, 0x66, 0x6d, 0x3f, 0x5a, 0xb2, 0x28, 0x9d, 0xc0, 0x2e, 0x3c, 0x78, 0x4, 0x50, 0x4a, 0x6f, 0x86, 0xb4, 0x25, 0x54, 0x1, 0x4f, 0x5c, 0x9e, 0xb5, 0xd5, 0x2a, 0x80, 0xd0, 0xb1, 0x1, 0x5a, 0xb6, 0x7, 0x5b, 0x81, 0xc0, 0x59, 0xe, 0xe4, 0x33, 0x58, 0x4, 0x8a, 0x3e, 0x8e, 0xa1, 0x57, 0x69, 0xc0, 0x66, 0xb6, 0x49, 0x20, 0x3f, 0x3c, 0x9e, 0xe2, 0xea, 0x9f, 0xee, 0xa0, 0x16, 0xd8, 0x6a, 0x36, 0xce, 0xd3, 0xdb, 0x3c, 0x8, 0x13, 0xc0, 0x86, 0xbf, 0x6d, 0x38, 0xd0, 0x34, 0x7a, 0xc3, 0xd, 0xf0, 0x4a, 0x88, 0xcb, 0x86, 0xe8, 0x8e, 0xbb, 0x40, 0x51, 0x9, 0x70, 0xa8, 0x61, 0x3b, 0x4a, 0x3a, 0x38, 0xc9, 0x56, 0x93, 0x5, 0xcc, 0x99, 0x49, 0xca, 0xe2, 0x53, 0xcd, 0xf5, 0xa7, 0xcb, 0x20, 0xf3, 0x29, 0xa8, 0x73, 0xdb, 0x9f, 0xcc, 0xe8, 0x77, 0x6a, 0xd5, 0x85, 0x6d, 0x1a, 0xea, 0x39, 0xc, 0xd8, 0xe6, 0xd9, 0xd1, 0x4e, 0xc0, 0xbd, 0x6f, 0x4e, 0x17, 0xc, 0xd0, 0xf7, 0x87, 0x4b, 0x4e, 0xfe, 0x36, 0x6e, 0x28, 0xad, 0xc3, 0xa, 0x71, 0xcd, 0x76, 0xe9, 0xaf, 0x63, 0x2b, 0xe9, 0xb9, 0x14, 0xa7, 0x11, 0xe4, 0xb9, 0xc8, 0xfc, 0x7, 0x41, 0x9b, 0xae, 0x88, 0x1, 0xf8, 0x39, 0xa2, 0xac, 0xeb, 0xf6, 0x7d, 0xd1, 0x7a, 0x64, 0x9a, 0x5d, 0x48, 0x14, 0xb, 0x92, 0x0, 0x91, 0x50, 0x31, 0xeb, 0x1, 0xab, 0x3c, 0x57, 0x1e, 0xc2, 0xc0, 0xd6, 0xc1, 0xa8, 0xb0, 0x33, 0x86, 0x4d, 0x78, 0x6c, 0x8b, 0x7f, 0xd3, 0x88, 0x33, 0xf5, 0xe9, 0x62, 0x41, 0xad, 0x56, 0xd9, 0x7c, 0xe6, 0x30, 0xf2, 0x7a, 0xc5, 0x60, 0xeb, 0x4c, 0x38, 0xca, 0xfe, 0x86, 0x14, 0x3d, 0x45, 0xc3, 0x59, 0xe4, 0x82, 0x43, 0xa, 0x0, 0x61, 0x25, 0x76, 0x5f, 0x4a, 0xc, 0x5b, 0xdf, 0xff, 0xe3, 0x93, 0x4c, 0x79, 0x97, 0xd6, 0x93, 0x4e, 0xd3, 0x7, 0x7d, 0xb5, 0xd5, 0xd2, 0x26, 0x90, 0xc6, 0x17, 0x87, 0x15, 0xaf, 0x17, 0x70, 0x7c, 0xad, 0x77, 0xd9, 0x12, 0xd, 0x6e, 0x71, 0x94, 0xf6, 0x9a, 0xb2, 0xbe, 0x91, 0x5, 0x8e, 0x6, 0xba, 0xdc, 0x2b, 0xe6, 0x8a, 0xcf, 0xce, 0x3a, 0x9a, 0x35, 0x8c, 0x5c, 0x33, 0x7f, 0xee, 0xc0, 0x68, 0xfe, 0xaf, 0xe, 0xba, 0x9c, 0x65, 0xc5, 0xb0, 0x3f, 0x34, 0x17, 0x2f, 0x90, 0xda, 0x57, 0xba, 0x1, 0x28, 0x2e, 0x67, 0x2e, 0xfc, 0x54, 0xcc, 0xb5, 0x2c, 0xc3, 0x64, 0xcc, 0xab, 0xc1, 0x6e, 0x31, 0x3, 0xbc, 0x32, 0x43, 0xe1, 0x48, 0x90, 0x7f, 0xc4, 0x9b, 0x4d, 0x92, 0x2e, 0xa0, 0x5b, 0x6e, 0xe5, 0xad, 0xcd, 0x74, 0x49, 0xb0, 0xbb, 0x4f, 0x5, 0xf4, 0x45, 0x93, 0x64, 0xbc, 0xf0, 0x3b, 0xcc, 0x1a, 0x3d, 0xae, 0x40, 0xac, 0x9, 0x9d, 0xd6, 0xfb, 0x8b, 0xac, 0x26, 0xb4, 0x90, 0x7e, 0xf, 0x85, 0xf8, 0x10, 0xad, 0xa8, 0x52, 0x3, 0x3f, 0xf7, 0x1a, 0x32, 0x0, 0xe3, 0x62, 0x2d, 0x98, 0x9b, 0x5d, 0x30, 0x30, 0xf5, 0xc8, 0x1b, 0x7d, 0x4b, 0xb5, 0x3c, 0x3a, 0x69, 0x1a, 0xae, 0x88, 0x5, 0x7d, 0xd1, 0xa6, 0x33, 0xff, 0x50, 0xed, 0x42, 0x1, 0x58, 0x1c, 0x65, 0xd2, 0x80, 0xf8, 0xb7, 0xea, 0x68, 0xf2, 0xbf, 0xbe, 0x77, 0xae, 0xa, 0xc6, 0x25, 0x5d, 0x84, 0x74, 0xcf, 0x5, 0x59, 0x27, 0x84, 0x38, 0xf9, 0xa8, 0x66, 0x8d, 0xa1, 0x4f, 0x57, 0xb4, 0xb4, 0xfc, 0x37, 0xb8, 0xb6, 0xb1, 0x46, 0xc, 0x54, 0xa4, 0x68, 0xfc, 0xf3, 0x5c, 0x66, 0x9d, 0xab, 0xa8, 0xde, 0xb8, 0xf9, 0x14, 0x34, 0x6d, 0x3a, 0x2a, 0x19, 0x84, 0x53, 0x3d, 0x8d, 0xf9, 0xc1, 0x62, 0x62, 0x3, 0x59, 0x11, 0xeb, 0x52, 0x6e, 0x16, 0x62, 0x6f, 0x2f, 0x82, 0x6e, 0x43, 0xd7, 0xda, 0x85, 0xec, 0x5a, 0xc2, 0xd5, 0xaf, 0x52, 0x1a, 0xc7, 0x8f, 0xdd, 0x75, 0xb4, 0x59, 0x74, 0xa0, 0xc0, 0x27, 0x25, 0xbf, 0x88, 0x9, 0x99, 0x1f, 0x9d, 0x8e, 0x49, 0xd1, 0x29, 0xc0, 0x26, 0xfd, 0x11, 0x31, 0x1e, 0x14, 0x58, 0x55, 0xcc, 0xf9, 0xeb, 0x43, 0x6, 0xc2, 0x7b, 0xb, 0x4c, 0x1d, 0xef, 0x8, 0xb, 0x16, 0xc3, 0x3e, 0xd0, 0xad, 0x80, 0xf6, 0x1d, 0x8e, 0x59, 0x0, 0x93, 0x31, 0xa6, 0x75, 0x76, 0xa0, 0xbd, 0xb1, 0x81, 0x62, 0xb1, 0x6f, 0x12, 0xff, 0x76, 0xd7, 0x95, 0x7a, 0x98, 0x90, 0x38, 0x79, 0x40, 0xb5, 0x51, 0xbe, 0x1e, 0xe2, 0x72, 0x3, 0x24, 0x8, 0xee, 0x5f, 0x48, 0x10, 0xe5, 0xff, 0xbb, 0xe1, 0xc4, 0xac, 0xf1, 0xc1, 0xea, 0x90, 0x92, 0x7d, 0x4b, 0xd4, 0xdc, 0xe, 0xbd, 0xe2, 0xda, 0x54, 0x78, 0x3a, 0x71, 0x84, 0x33, 0xcb, 0xb2, 0xff, 0xae, 0x2d, 0x8a, 0xed, 0x57, 0x48, 0x44, 0xc4, 0x6e, 0x14, 0xc8, 0x2d, 0xf2, 0x17, 0xb2, 0x3e, 0x6d, 0x9f, 0xa9, 0xb4, 0xed, 0xf7, 0x45, 0x70, 0x7c, 0x7d, 0x80, 0x87, 0xa3, 0xe2, 0xa, 0xc, 0x30, 0x53, 0x61, 0x6c, 0xd8, 0x17, 0x1b, 0x3d, 0x4d, 0x6a, 0x7f, 0x87, 0xc0, 0xe3, 0xf3, 0xfb, 0xe, 0x71, 0xd7, 0x2, 0x17, 0x47, 0x66, 0xad, 0xc9, 0xe4, 0xf0, 0xf9, 0x5, 0x41, 0x4e, 0xad, 0xc4, 0x65, 0x7c, 0xe4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xf, 0x16, 0x21, 0x24, 0x2d, 0x32, 0x35,
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			beaconState, privKeys := tt.genState(t)
			idx, err := helpers.BeaconProposerIndex(context.Background(), beaconState)
			require.NoError(t, err)
			block := tt.genBlock(t, beaconState, privKeys)
			got, err := signing.ComputeDomainAndSign(
				beaconState, time.CurrentEpoch(beaconState), block, tt.domainType, privKeys[idx])
			require.NoError(t, err)
			require.DeepEqual(t, tt.want, got, "Incorrect signature")
		})
	}
}

func TestSigningRoot_ComputeForkDigest(t *testing.T) {
	tests := []struct {
		version []byte
		root    [32]byte
		result  [4]byte
	}{
		{version: []byte{'A', 'B', 'C', 'D'}, root: [32]byte{'i', 'o', 'p'}, result: [4]byte{0x69, 0x5c, 0x26, 0x47}},
		{version: []byte{'i', 'm', 'n', 'a'}, root: [32]byte{'z', 'a', 'b'}, result: [4]byte{0x1c, 0x38, 0x84, 0x58}},
		{version: []byte{'b', 'w', 'r', 't'}, root: [32]byte{'r', 'd', 'c'}, result: [4]byte{0x83, 0x34, 0x38, 0x88}},
	}
	for _, tt := range tests {
		digest, err := signing.ComputeForkDigest(tt.version, tt.root[:])
		require.NoError(t, err)
		assert.Equal(t, tt.result, digest, "Wanted domain version: %#x, got: %#x", digest, tt.result)
	}
}

func TestFuzzverifySigningRoot_10000(_ *testing.T) {
	fuzzer := fuzz.NewWithSeed(0)
	st := &qrysmpb.BeaconStateCapella{}
	var pubkey [field_params.DilithiumPubkeyLength]byte
	var sig [96]byte
	var domain [4]byte
	var p []byte
	var s []byte
	var d []byte
	for i := 0; i < 10000; i++ {
		fuzzer.Fuzz(st)
		fuzzer.Fuzz(&pubkey)
		fuzzer.Fuzz(&sig)
		fuzzer.Fuzz(&domain)
		fuzzer.Fuzz(st)
		fuzzer.Fuzz(&p)
		fuzzer.Fuzz(&s)
		fuzzer.Fuzz(&d)
		err := signing.VerifySigningRoot(st, pubkey[:], sig[:], domain[:])
		_ = err
		err = signing.VerifySigningRoot(st, p, s, d)
		_ = err
	}
}

func TestDigestMap(t *testing.T) {
	testVersion := []byte{'A', 'B', 'C', 'D'}
	testValRoot := [32]byte{'t', 'e', 's', 't', 'r', 'o', 'o', 't'}
	digest, err := signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)

	cachedDigest, err := signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)
	assert.Equal(t, digest, cachedDigest)
	testVersion[3] = 'E'
	cachedDigest, err = signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)
	assert.NotEqual(t, digest, cachedDigest)
	testValRoot[5] = 'z'
	cachedDigest2, err := signing.ComputeForkDigest(testVersion, testValRoot[:])
	assert.NoError(t, err)
	assert.NotEqual(t, digest, cachedDigest2)
	assert.NotEqual(t, cachedDigest, cachedDigest2)
}
func TestBlockSignatureBatch_NoSigVerification(t *testing.T) {
	tests := []struct {
		pubkey          []byte
		mockSignature   []byte
		domain          []byte
		wantMessageHexs []string
	}{
		{
			pubkey:          []byte{0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0x4c, 0xa9, 0x9a, 0x76, 0xed, 0x77, 0x96, 0xf7, 0xbe, 0x22, 0xd5, 0xb7, 0xe8, 0x5d, 0xee, 0xb7, 0xc5, 0x67, 0x7e, 0x88, 0xe5, 0x11, 0xe0, 0xb3, 0x37, 0x61, 0x8f, 0x8c, 0x4e, 0xb6, 0x13, 0x49, 0xb4, 0xbf, 0x2d, 0x15, 0x3f, 0x64, 0x9f, 0x7b, 0x53, 0x35, 0x9f, 0xe8, 0xb9, 0x4a, 0x38, 0xe4, 0xe4},
			mockSignature:   []byte{0xa9, 0x9a, 0x76, 0xed, 0x77},
			domain:          []byte{4, 0, 0, 0, 245, 165, 253, 66, 209, 106, 32, 48, 39, 152, 239, 110, 211, 9, 151, 155, 67, 0, 61, 35, 32, 217, 240, 232, 234, 152, 49, 169},
			wantMessageHexs: []string{"0xf06d9c4a798753e6ef1a7a23b6518d5b3415942233c6537bc51be59243d8d4ab"},
		},
	}
	for _, tt := range tests {
		block := util.NewBeaconBlockCapella()
		got, err := signing.BlockSignatureBatch(tt.pubkey, tt.mockSignature, tt.domain, block.Block.HashTreeRoot)
		require.NoError(t, err)
		for i, message := range got.Messages {
			require.Equal(t, tt.wantMessageHexs[i], hexutil.Encode(message[:]))
		}
	}
}
