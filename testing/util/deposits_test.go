package util

import (
	"bytes"
	"context"
	"encoding/hex"

	// "encoding/hex"
	"testing"

	"github.com/theQRL/qrysm/v4/beacon-chain/core/helpers"
	"github.com/theQRL/qrysm/v4/config/params"
	"github.com/theQRL/qrysm/v4/testing/require"
	"google.golang.org/protobuf/proto"
)

func TestSetupInitialDeposits_1024Entries(t *testing.T) {
	entries := 1
	resetCache()
	deposits, privKeys, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, depositDataRoots, err := DeterministicDepositTrie(len(deposits))
	require.NoError(t, err)

	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	if len(privKeys) != entries {
		t.Fatalf("incorrect number of private keys returned, wanted %d but received %d", entries, len(privKeys))
	}
	expectedPublicKeyAt0 := []byte("b755417ac7b0a00d7a04ccc9ba74c5bf46213704ae6c366176b5c92dd6c209331a23b29e4c22f8db4b4c8f90c69a6e6a14c0ecae5abde6f6e6f03a41154ef97d49f55ab23e1e421f7dba88182c8ee507cfa225ddf6fbb7e5d5331dbf21995313bf40d127ca8889ce06fd10b848f83bf6b0b7412ece6255b895833c17309c39af542eb6a12c61aa788dd1dd054c8c6630e80e34c211f107c7c440342f3a434698d6abbc68bb80e98694f720e996872bd049ab12d263ac63fb63ac100c5122e1b69ae2bec37850c38f9db50928facb0a7bb39a4205eb1c7f2fdabbeb32edb17eaa9fcd68f43eb56c66e829ce95bbd86545e22f138df8b48816543622bfdb0fb36079ac56cbbfeffe6b33781c410f51dbb2188d47c924e0d4c2c8b55cf37e749d28096df5cf12256b0d62324140c4bedf3fdf75360c6a00e441a77e57e5f26e9a5786adb75b10d5d8265038eca3fe6f52568ca4099deac108604f932f793eb6e8962ec4372a49e288c488f94096b2fbc32365be7c24588dbcf83a963973a3f1ebf151fe3a36dad00bff7e72af525bfac2422a0431988289f10530c8d069c7dccdb4ac5b68981f7909f15e5faab4546d53855ef12de6cdabc1006ded7779dd91f0615621b9f7b2a5945dd044504e7fdec80c62c68b16179ff628f9f6c59398d9dfa35fcc2a40022f9ed19cb726c3052076502ac5b34ae945065191a0161526e750942f4a4a7b05695fe7f3cc7f4c22a7254063f78d80f5da1d9b737a642a59ad16d955e118a1b1e68e7fc83d198780cb37a84da1095a96c1bef28e3cb8561c4eaa05647a523df7b1d39695cd5a47e51e4e75d865dadefb2933404f684422400de0158c1a8f2dabc8b87ced747de591a68bd0f9aadbf90911cdb6b08f77450454d005129c10a9be844be3ad848b0a674356c0d31b9f19acf45a9781e85bf1a6a2b88999313bfaf816637b239d4fced92293082f649dc3c48ff0443505e63dd948f53dc867fbb523faaa9b6f95e6193b18b0bf3150b35564acc654ddcc6c8122fb134c4acb45a6f583ec5f8374b5b118153271aef87b4986d76f2e6996523cfab3dea3f794fe62c1ff5736fdf9d13295c8d3b29fddc06200aae6383aa3b3e9581eb48131d27b834c0e903e9d1e553afb56199ea789fd475da516b428d655ac86662dbb26a85da97af5dbf166a31cdb6d6dc0cec8137d75ba3e892a3217beeb4e3de845f2e762ddfd7ad1c1cc846dfbf0b75590268347a6a5566599352661e25149058957b0363e82e0e6b707d72d2ecb4f7742333586aaeed28a52f905a111abcce4fdb3950b6ee09e59ef42d5e156315ef6c3a0b3de5d0643b5c5b020eeed54d2a8e619fd15e35ae182cda8415292e40e52af5a6434187af39ee73a5ddf70d3db69de5c54cc24d1e42071f39ef150803d37550a34a4de0bcbfb02e668f7323ac7293e0d743a383d9d6120df38db45b38542e0eb3fb2d73339d523cc2f2e35f6fa2de260de4c8191a242a67cc08f6ee7ed4546c8c2c8883516f1c21e5432a56850f7c1ab67fda639424d5d5ab5ae5fa6b54879ea669f9933874077936d9a6023ef21a270adfe2ccef04ee076773e0aaa09af869dde0b2db2e7a2ee9172b5b39510e6bc24e8b4efd3c80162af808bf8fbe42ef4d2a222f825f64ea313db470905f93cd3bd944773354645845880eadab41c47f2a40abc3d1e1b1095e601a11ef1a2e00edc52b500c9cec70fea2d863bc7182f276bf0ca8b9c3bbd4e8cbff8eefc62b8bef1702681967d11c3178faa42baec7752f3bc9837b9e7b2afca131ed01c8cb54465c79261d4a7ec9407c1779457f1e5af2a76d98f0e589f70fcedc1b6a612000a4224d5dc3abe7197485c5b81e6cda403b0a8e974e1ea3c0f327f55a87a7ff063b0391ecdcd57ecef81d3f66063223fcad66fdf79c9f4bb823cf52aa9f7f141bf76ba05e6a8d2e5cec872a59285a7e90dbaa2c931a26979c60f6060e2f5b458f44d16c637a7d4508ca233008232ed6aa9c0557f2ac51fe706abd45e04f5b812b19f427870343c323bb1e7a98ea7fac273444b73777956b84dbb0de64d623211598a7d1ff169c4445469a4b0e50677ed828f60ea4f028b2aed7bf5e56a6ae7607ed6c9b291a3c3d76f1ea5a0419f59cb91c89f07d9706ec46c42fabd47b280c7685355f74b58ac10599e927ff63d5015f2a8e5471e3b5afbd208fa761f8106f9293e821d483b1da1b298a386ad82459db140ea87e1a3a23a6426bd814385a28c4c3a842a44e2024e486b0b4644658d73236ceed421de204656a11182f21e94d66ea9c290249fc9e374cedd4e67b0969acfc1f4ecbdd401ec936353309134becd14db6784a51283bda7980292cde6c8cd35ba0b3a1109905ab8b8a2f90e93c6cf47dd16737894d04426c9e3b85191debeb9302511faedb31a21ab3b22a90aec1e22985757e6ffccbe751f9c6256d69bad6d6e1cfe989202e87cf2d54f1b4e4163902d6e0df22f3accac0e28cccb4c0ed17652bdce8c5aaa3160ed20ef1bd455119e00e1c3832e6c838a6b7635723c4e078b8d2df66f9c3ab7999cbb6dea42f35ab3ea13b6d0a0a673615337da54f2ab1bbfbf3b0912fcc1b73798a883281a8a831938c02e226533b38d426204ca082e9a39ed8736d620465954ffd5a5645aff6684702a08569534713ce8b9be795a979a947f67225a2dda27d20e4f906e39738a413233ac8b5c7da0cf59caa54ac89b7002a0b73997ce1879949f3f5d37a82f49047e6c6487351eaa5e7a8145120fa77c2383278ae7f7b2b169b64c8a4ac6e6e6ae8c78b5e755d42e24621ee59479c0603736647480f944c90545038ba8fb048dfd475c739fec820c792010b4e9203d1c18b908e9feb448caa815bdd8e8363ba793544ce67ec4ecdac3b0cea2acc4d51aa5fc2f38168f4c9c83386e9c5fc2e96fcab0a9827f6daf8eb1fcb8c391a7cbbbea098b6946ea5111f63f1a31455d49a45bdb48f999a3153ee37b12917e564778f7c574b3925f12a03190b21b8bb062cd7663c377a396cb99cef834eea667d19ed20d22f11e8564c3cd670fd3b020e764118cc22cabf2f967776b0406cc67f7510e10b35d7779031822b6feab45735b7121d628160783c40f3e3cc2cccebc623d77e8f4d3c9de88fe0660a137aa5f5811c873ad57115200468aaac22a768f8e227c95faa7324b1d1a81b03c81a76bf6517a9645f5f53a8f5865ea278d95d675b25c1def5d818fbdb2a7d497bc3a0645d4e362ede1b4fbe472e6f4968d92d30ed475e55205fedbdcf2ed46bc7386d05812a7cea540aa6544525ae423bfeccad82a6d1269c9c19b8c58ce6a1565d0dc54853d32962912f3c7508276e7189686ff49436dfd80c36d9a4d8b41e0845082ac538db51b5b11e2fe23756c2360f1dc4fcdbd7d2ea2e714795baad4c7aba58ac00566b52c36951be76efbf083628a20fdd828a15e0781faadf32262f09f017975dc36b9639bb705fb9e0321a05efeed7186e96d3004b7238efc015503aa15d81db812a9876870564d2a81632d30d4e09ad3b04b8cef2801c3a095dcbfe6b321f187a55a57eb42ae495d89a9fdecb91e3795c24f57f4b45d050847462505ba32e0de293f228d7452ef8cdd0495b4906047473a38a900d471930b29c1649829b030c025")
	expectedPublicKeyAt0B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt0)))
	_, err = hex.Decode(expectedPublicKeyAt0B, expectedPublicKeyAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt0 := []byte("004734bcf98f6f83c15ccd7d6bcb5a17667dc307adaccea712932231aa7079b3")
	expectedWithdrawalCredentialsAt0B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt0)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt0B, expectedWithdrawalCredentialsAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0, deposits[0].Data.WithdrawalCredentials)
	}

	dRootAt0 := []byte("f91e27ad241ffbd97cc2babb6634259e3e4461a8d6eebf679dd1267dced2dfc2")
	dRootAt0B := make([]byte, hex.DecodedLen(len(dRootAt0)))
	_, err = hex.Decode(dRootAt0B, dRootAt0)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt0B, depositDataRoots[0])
	}

	sigAt0 := []byte("")
	sigAt0B := make([]byte, hex.DecodedLen(len(sigAt0)))
	_, err = hex.Decode(sigAt0B, sigAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt0B, deposits[0].Data.Signature)
	}

	entries = 1024
	resetCache()
	deposits, privKeys, err = DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, depositDataRoots, err = DeterministicDepositTrie(len(deposits))
	require.NoError(t, err)
	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	if len(privKeys) != entries {
		t.Fatalf("incorrect number of private keys returned, wanted %d but received %d", entries, len(privKeys))
	}
	// Ensure 0  has not changed
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0B, deposits[0].Data.WithdrawalCredentials)
	}
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt0B, depositDataRoots[0])
	}
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt0B, deposits[0].Data.Signature)
	}

	expectedPublicKeyAt1023 := []byte("5de694585e91d95c86a104a9f66cd685c48b60fe9c79403b4979c1707238980bdf27893e8be214313fd4655ff540e206b820ab741d859d3f6182e07936aef4615b78d5d03d89be306203c3314bb2bff2845b809457653b7c9fe268a0df86bbf84ee155a2917236a445ad1b494885e1f206d845e952870524083947aaedfe7ffc21e67d2e883bb52b3f87f658c209ea70a3b78caab780491ab874d1312af2e93dd66e0006cfc930d7f4d8e3e558edf2befb9a684429b19c3b6e936372ea3ad4ca182bec8dd09f208d42b4ae336590ae4969f9aa469f89e28481796011cb97950185f8212b0c2bd9678fc5c99e7b73aabcc4632a544f12b2513101fe1288409ab4dccebe3554dd9e767ecfe8f6972075f49d78215c9bf328caa4dc80d9684906262a7b6f9cc2e542830924368dd041ec227ce353b0ae7ee20aea5df37d1a3af62e0466fcc5f94fbf9ed7acbdee421aa9e1d1f779013c8ddcf9cbae4ff46140fd94190e86ad8ac4472a646713138f851d562ecf3352e2ea818109e17651a600ee2861cee0465b0844ba126b6e7c96cbb7b09c233aaf4493df573482ca2a2e825e1683f6e31c15245db48b268c65a51fa2ef13335cda2898035439a49f1c4731ec87aae43768a6772503b239633c542665d2b1940565969b34b1f311fbb57074a4bef770244ad46f23c644babc198c34f4d3ddfd5f50ca7a567faca715b187c31f4970a871db296dc5ade768a5ad9db45104aeaa28cd278733acb06e637ac7f5fd07a381a29594e2c68f119ada586e7e1378a3f489b0cc45443a993b40202d284c993714fb4e88864b5e27153b6b93d3601d72cf161036d1c63a753ed67e20d5355222aebce82cef8fc70ab3b1044a45f68ee5c67a26920d9cda7efb1156a31192ae0b7864aecae8e2de037f9cde4fe83374422cfec1e37126d9afee8bdd3339ecc262df7825c5f66d6062865d92666194c2d26ed65d46e1cd200290b0e3bf1bce545d7af8d132304f2d985ce265ad70b8a5e5957c4fba4ee203ab5113c02485f3a78267ca611698b597fda64bb2cc7699d619ff8b4b688d23afefb8283768663aa91b73d870c01692fcd73e223960696b186facfaf353429ea4c03d8de631b46b36fa9f5748f80361aab75eef011a203784e2d73cbe6bdf53c2fa4f7ca9e76326bc2081ccfa6e3675bac97701fb79ec8c98de7002a845275fe40418d910530f714115cdfd540ef36073fc58b106d0761944e95c1400fa66abfe12d292ea1f323e770c0a0a858ab5bababe541c3466ec2f6bd65b7625f82f09ac40f780dae07be533653fc4ddbed97753af16b03c6107cfbaa6d3068e58552e7fe2b6569c33de9e60a395d4c44b6ebb7319e351cdde35475560536baec8032a7a5f5b55abac9b1b3c8d448c530fde8523b25960c21445942d84891ecfde2c39d580a5b89e78bf8d49881e9984fa7205600091d8f4c8aaf6327d03bf710c2c65d05b3a218f69b855b075a2ed6a46b806f6a38a04b5e89aed4a922b4524f182c32e3b41242034c4bfb80bf0472d2e1fd688d153d8b40a3f007b50deeebb99a1bcd568bcc6a703d0c6fff2f4072bf827c401636d7f60eddd56769b693e0ff50a3ec8be0e031f1d01f4fa1eb68f0ac9df4c7e4b1dfb56fba91b8ef8b21b706d786c8c95f447df11ee8c4f9175af2149bb968bdf7de0a6102be3d7445177e9551e20653de4d96624f521a9cb85279cd19ab46e84ec8d1abefdd2ac905aedce8d1932325402d50b4aebfdf2259a717a41f03ed76dcaf769f9a3f4550b8cd3cb96f3f7b02f64ed7fa15284afcb347eafdbdda7eea5d65f3fda3be850de0ba4896ebb02d9d30291ec75f900c1234ea07b67170132ba2d10206c849b90a8721cbba1b862488bbabde68d95ba42bc94e4c5f29ea69b770fdbbd5c45d41dfa40567d7341bbfd3397769ffb93b7c8875ecc5e238d03bd5282bc99b0a89d9315704d9e463da2766b1e635f73fd60ad9b3aeeb41cdc8c4af4016e9c581744860c5dd5d0b53422f06197773c7b1a47b67affadc0d066e51349f9c9bf3f03cb641afc4a55e8b175e8f250e15a7a6c985969d568f4f212210862e4608b73b62cc94166511621c8bb91a38a62962768e896dac201d2d6823f9526397b8d4a327a9e2cf06c0ac8ac0de9efbbef679c2c5d10283c85da324d79681c20164b60831e26f7281e28e83bb9eb09645c5b7fa76a28d80d21ee03070554539f118615c5044138528d49f83ba789c49a58c1c0515725c555256371227bd8c041a11bf46af25c8534d3e681c743070249de2649c837f7305c76fb4a6d3b0a3e76430fd34e793e662d38df96915d9c22423faa9448ae3bffb18c7e4734335d93d9abb9d0f1e40cf5249f604d2bb5c5b5277485a98cc3d8292c41094cf62e1b1322739d7482fea2a43d8003a81b3b09c9957cb3ba7caaf615deb9bad2476f8ea19c6e4440ea9dc8fdebf5f2b23f5ff34c9150fa015f3e03a50dcce811de1c007e77a18ef069b034f9119f1791b6d891e7fd715097c2898174f72f7b7c9cff784cb67fd714fc18ab38e7cf77b1635e2a0963613ba77fbbab1fea21ddb814f5a9e85cc41f33b838a8b03d27b376606a0eb691da3540aa0b981a46588ba092d7fced9dc877ddeac0e3da6335cad25270c5b59b13274bef288b8a02b02bd07d6924666d1037d7787aae2b1b8bb694136af4b4a3ddedb1bae1f75d1351dbf531770f13c93c5e852d9ff3891c7e13a8015986d220451a58b4d835a03a56632545350419d6aa97d2b91668f95dc92b0144877c9661e1974afe92c8460b1486b04ab32a4501f1287fb9cd431129864b1604fcfa692033923919af9e4fd1faf110739ef2d263c4e1adad18acf8eae4686e24c2b0e793619f50a7cf075ba3677306c5076a23f070708691fd592dab4f3aec2030d4456b11a9719fba80bcd21b9ce5b2a5e39272aa4fd1da29953ab316c8033bddea4405da663e41a4091021a47378fe2dc60915dc090e1f831421507722e138c66e026f4fb580ec9e7712ef76582c795f77182f58c1b17f995a2b26cb8f65e2bd5ec1235f2de64d1d4fa6177b763bf680aba151c5220ddf953f8022b0743908abb1dc5b656fc3f68bdc7a3dfbeaff3ce2b1ff1b0834c9696201722d6fd62ea4c39668e0d40e681fdee965a4f4e7d1b56ee60c677d8608048b68c0984337a7cc62580b95e085d1550156656cb5208daeee7d0e473a9f9fbf7fb9b7fd9ff90a4d8d11e324992909a21d8e840b6f6e262f9b1467fd4ca96636c65ab66f5da281722361b54c810eac681fc43a84cac6ee1859b302cd52ed18818ce5f500f932fff60df1d502955757601f2a6be0bf3563f25b078d44b0fb55baafe2bb3ef90c7e42b3d8011f4b813009cd44a3b7e24d25eb45fb488a7e9a34dc0975bb6871dec843403507cdc90d05d7b2a6df4b54fad28626785064820d3aaac34bb52b8610c187d3c366f9bfebdbb92d7d0c206efd7e11c507444d299eed7e9eaedde074c957c4bf488309dbe9668be43b3e73df635e253c909fb06f0f0d1817ed3c3a3a8a5263af846e4a6324973eda916007dc94f0d8639e57fe9eae342eb209ae4099a0332fb97c6f811495549586370c93fdab5e6a92cb62e2d2e599584f923668ae84df0676bb08e12f13a2af1283")
	expectedPublicKeyAt1023B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt1023)))
	_, err = hex.Decode(expectedPublicKeyAt1023B, expectedPublicKeyAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.PublicKey, expectedPublicKeyAt1023B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt1023B, deposits[1023].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt1023 := []byte("009560ec38ca371e316dafbd545bce01bc809cede91bb7d9310fb64db8dba123")
	expectedWithdrawalCredentialsAt1023B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt1023)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt1023B, expectedWithdrawalCredentialsAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt1023B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt1023B, deposits[1023].Data.WithdrawalCredentials)
	}
	dRootAt1023 := []byte("8355e81d7a226382f995616c82e8a24b3650af9aa842a3543995d311e65dc85c")
	dRootAt1023B := make([]byte, hex.DecodedLen(len(dRootAt1023)))
	_, err = hex.Decode(dRootAt1023B, dRootAt1023)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[1023][:], dRootAt1023B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt1023B, depositDataRoots[1023])
	}
	sigAt1023 := []byte("")
	sigAt1023B := make([]byte, hex.DecodedLen(len(sigAt1023)))
	_, err = hex.Decode(sigAt1023B, sigAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.Signature, sigAt1023B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt1023B, deposits[1023].Data.Signature)
	}
}

func TestDepositsWithBalance_MatchesDeterministic(t *testing.T) {
	entries := 64
	resetCache()
	balances := make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance
	}
	deposits, depositTrie, err := DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err := DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)

	determDeposits, _, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, determDepositDataRoots, err := DeterministicDepositTrie(entries)
	require.NoError(t, err)

	for i := 0; i < entries; i++ {
		if !proto.Equal(deposits[i], determDeposits[i]) {
			t.Errorf("Expected deposit %d to match", i)
		}
		if !bytes.Equal(depositDataRoots[i][:], determDepositDataRoots[i][:]) {
			t.Errorf("Expected deposit root %d to match", i)
		}
	}
}

func TestDepositsWithBalance_MatchesDeterministic_Cached(t *testing.T) {
	entries := 32
	resetCache()
	// Cache half of the deposit cache.
	_, _, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, _, err = DeterministicDepositTrie(entries)
	require.NoError(t, err)

	// Generate balanced deposits with half cache.
	entries = 64
	balances := make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance
	}
	deposits, depositTrie, err := DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err := DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)

	// Get 64 standard deposits.
	determDeposits, _, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, determDepositDataRoots, err := DeterministicDepositTrie(entries)
	require.NoError(t, err)

	for i := 0; i < entries; i++ {
		if !proto.Equal(deposits[i], determDeposits[i]) {
			t.Errorf("Expected deposit %d to match", i)
		}
		if !bytes.Equal(depositDataRoots[i][:], determDepositDataRoots[i][:]) {
			t.Errorf("Expected deposit root %d to match", i)
		}
	}
}

func TestSetupInitialDeposits_1024Entries_PartialDeposits(t *testing.T) {
	entries := 1
	resetCache()
	balances := make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance / 2
	}
	deposits, depositTrie, err := DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err := DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)

	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	expectedPublicKeyAt0 := []byte("b755417ac7b0a00d7a04ccc9ba74c5bf46213704ae6c366176b5c92dd6c209331a23b29e4c22f8db4b4c8f90c69a6e6a14c0ecae5abde6f6e6f03a41154ef97d49f55ab23e1e421f7dba88182c8ee507cfa225ddf6fbb7e5d5331dbf21995313bf40d127ca8889ce06fd10b848f83bf6b0b7412ece6255b895833c17309c39af542eb6a12c61aa788dd1dd054c8c6630e80e34c211f107c7c440342f3a434698d6abbc68bb80e98694f720e996872bd049ab12d263ac63fb63ac100c5122e1b69ae2bec37850c38f9db50928facb0a7bb39a4205eb1c7f2fdabbeb32edb17eaa9fcd68f43eb56c66e829ce95bbd86545e22f138df8b48816543622bfdb0fb36079ac56cbbfeffe6b33781c410f51dbb2188d47c924e0d4c2c8b55cf37e749d28096df5cf12256b0d62324140c4bedf3fdf75360c6a00e441a77e57e5f26e9a5786adb75b10d5d8265038eca3fe6f52568ca4099deac108604f932f793eb6e8962ec4372a49e288c488f94096b2fbc32365be7c24588dbcf83a963973a3f1ebf151fe3a36dad00bff7e72af525bfac2422a0431988289f10530c8d069c7dccdb4ac5b68981f7909f15e5faab4546d53855ef12de6cdabc1006ded7779dd91f0615621b9f7b2a5945dd044504e7fdec80c62c68b16179ff628f9f6c59398d9dfa35fcc2a40022f9ed19cb726c3052076502ac5b34ae945065191a0161526e750942f4a4a7b05695fe7f3cc7f4c22a7254063f78d80f5da1d9b737a642a59ad16d955e118a1b1e68e7fc83d198780cb37a84da1095a96c1bef28e3cb8561c4eaa05647a523df7b1d39695cd5a47e51e4e75d865dadefb2933404f684422400de0158c1a8f2dabc8b87ced747de591a68bd0f9aadbf90911cdb6b08f77450454d005129c10a9be844be3ad848b0a674356c0d31b9f19acf45a9781e85bf1a6a2b88999313bfaf816637b239d4fced92293082f649dc3c48ff0443505e63dd948f53dc867fbb523faaa9b6f95e6193b18b0bf3150b35564acc654ddcc6c8122fb134c4acb45a6f583ec5f8374b5b118153271aef87b4986d76f2e6996523cfab3dea3f794fe62c1ff5736fdf9d13295c8d3b29fddc06200aae6383aa3b3e9581eb48131d27b834c0e903e9d1e553afb56199ea789fd475da516b428d655ac86662dbb26a85da97af5dbf166a31cdb6d6dc0cec8137d75ba3e892a3217beeb4e3de845f2e762ddfd7ad1c1cc846dfbf0b75590268347a6a5566599352661e25149058957b0363e82e0e6b707d72d2ecb4f7742333586aaeed28a52f905a111abcce4fdb3950b6ee09e59ef42d5e156315ef6c3a0b3de5d0643b5c5b020eeed54d2a8e619fd15e35ae182cda8415292e40e52af5a6434187af39ee73a5ddf70d3db69de5c54cc24d1e42071f39ef150803d37550a34a4de0bcbfb02e668f7323ac7293e0d743a383d9d6120df38db45b38542e0eb3fb2d73339d523cc2f2e35f6fa2de260de4c8191a242a67cc08f6ee7ed4546c8c2c8883516f1c21e5432a56850f7c1ab67fda639424d5d5ab5ae5fa6b54879ea669f9933874077936d9a6023ef21a270adfe2ccef04ee076773e0aaa09af869dde0b2db2e7a2ee9172b5b39510e6bc24e8b4efd3c80162af808bf8fbe42ef4d2a222f825f64ea313db470905f93cd3bd944773354645845880eadab41c47f2a40abc3d1e1b1095e601a11ef1a2e00edc52b500c9cec70fea2d863bc7182f276bf0ca8b9c3bbd4e8cbff8eefc62b8bef1702681967d11c3178faa42baec7752f3bc9837b9e7b2afca131ed01c8cb54465c79261d4a7ec9407c1779457f1e5af2a76d98f0e589f70fcedc1b6a612000a4224d5dc3abe7197485c5b81e6cda403b0a8e974e1ea3c0f327f55a87a7ff063b0391ecdcd57ecef81d3f66063223fcad66fdf79c9f4bb823cf52aa9f7f141bf76ba05e6a8d2e5cec872a59285a7e90dbaa2c931a26979c60f6060e2f5b458f44d16c637a7d4508ca233008232ed6aa9c0557f2ac51fe706abd45e04f5b812b19f427870343c323bb1e7a98ea7fac273444b73777956b84dbb0de64d623211598a7d1ff169c4445469a4b0e50677ed828f60ea4f028b2aed7bf5e56a6ae7607ed6c9b291a3c3d76f1ea5a0419f59cb91c89f07d9706ec46c42fabd47b280c7685355f74b58ac10599e927ff63d5015f2a8e5471e3b5afbd208fa761f8106f9293e821d483b1da1b298a386ad82459db140ea87e1a3a23a6426bd814385a28c4c3a842a44e2024e486b0b4644658d73236ceed421de204656a11182f21e94d66ea9c290249fc9e374cedd4e67b0969acfc1f4ecbdd401ec936353309134becd14db6784a51283bda7980292cde6c8cd35ba0b3a1109905ab8b8a2f90e93c6cf47dd16737894d04426c9e3b85191debeb9302511faedb31a21ab3b22a90aec1e22985757e6ffccbe751f9c6256d69bad6d6e1cfe989202e87cf2d54f1b4e4163902d6e0df22f3accac0e28cccb4c0ed17652bdce8c5aaa3160ed20ef1bd455119e00e1c3832e6c838a6b7635723c4e078b8d2df66f9c3ab7999cbb6dea42f35ab3ea13b6d0a0a673615337da54f2ab1bbfbf3b0912fcc1b73798a883281a8a831938c02e226533b38d426204ca082e9a39ed8736d620465954ffd5a5645aff6684702a08569534713ce8b9be795a979a947f67225a2dda27d20e4f906e39738a413233ac8b5c7da0cf59caa54ac89b7002a0b73997ce1879949f3f5d37a82f49047e6c6487351eaa5e7a8145120fa77c2383278ae7f7b2b169b64c8a4ac6e6e6ae8c78b5e755d42e24621ee59479c0603736647480f944c90545038ba8fb048dfd475c739fec820c792010b4e9203d1c18b908e9feb448caa815bdd8e8363ba793544ce67ec4ecdac3b0cea2acc4d51aa5fc2f38168f4c9c83386e9c5fc2e96fcab0a9827f6daf8eb1fcb8c391a7cbbbea098b6946ea5111f63f1a31455d49a45bdb48f999a3153ee37b12917e564778f7c574b3925f12a03190b21b8bb062cd7663c377a396cb99cef834eea667d19ed20d22f11e8564c3cd670fd3b020e764118cc22cabf2f967776b0406cc67f7510e10b35d7779031822b6feab45735b7121d628160783c40f3e3cc2cccebc623d77e8f4d3c9de88fe0660a137aa5f5811c873ad57115200468aaac22a768f8e227c95faa7324b1d1a81b03c81a76bf6517a9645f5f53a8f5865ea278d95d675b25c1def5d818fbdb2a7d497bc3a0645d4e362ede1b4fbe472e6f4968d92d30ed475e55205fedbdcf2ed46bc7386d05812a7cea540aa6544525ae423bfeccad82a6d1269c9c19b8c58ce6a1565d0dc54853d32962912f3c7508276e7189686ff49436dfd80c36d9a4d8b41e0845082ac538db51b5b11e2fe23756c2360f1dc4fcdbd7d2ea2e714795baad4c7aba58ac00566b52c36951be76efbf083628a20fdd828a15e0781faadf32262f09f017975dc36b9639bb705fb9e0321a05efeed7186e96d3004b7238efc015503aa15d81db812a9876870564d2a81632d30d4e09ad3b04b8cef2801c3a095dcbfe6b321f187a55a57eb42ae495d89a9fdecb91e3795c24f57f4b45d050847462505ba32e0de293f228d7452ef8cdd0495b4906047473a38a900d471930b29c1649829b030c025")
	expectedPublicKeyAt0B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt0)))
	_, err = hex.Decode(expectedPublicKeyAt0B, expectedPublicKeyAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt0 := []byte("004734bcf98f6f83c15ccd7d6bcb5a17667dc307adaccea712932231aa7079b3")
	expectedWithdrawalCredentialsAt0B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt0)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt0B, expectedWithdrawalCredentialsAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0B, deposits[0].Data.WithdrawalCredentials)
	}
	dRootAt0 := []byte("91c40170d5b4630f3953990ad84ef250ae79dcbdbe485558ca37fd2bef59e740")
	dRootAt0B := make([]byte, hex.DecodedLen(len(dRootAt0)))
	_, err = hex.Decode(dRootAt0B, dRootAt0)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %#x but received %#x", dRootAt0B, depositDataRoots[0])
	}

	sigAt0 := []byte("")
	sigAt0B := make([]byte, hex.DecodedLen(len(sigAt0)))
	_, err = hex.Decode(sigAt0B, sigAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %#x but received %#x", sigAt0B, deposits[0].Data.Signature)
	}

	entries = 1024
	resetCache()
	balances = make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance / 2
	}
	deposits, depositTrie, err = DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err = DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)
	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	// Ensure 0  has not changed
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0B, deposits[0].Data.WithdrawalCredentials)
	}
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt0B, depositDataRoots[0])
	}
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt0B, deposits[0].Data.Signature)
	}
	expectedPublicKeyAt1023 := []byte("5de694585e91d95c86a104a9f66cd685c48b60fe9c79403b4979c1707238980bdf27893e8be214313fd4655ff540e206b820ab741d859d3f6182e07936aef4615b78d5d03d89be306203c3314bb2bff2845b809457653b7c9fe268a0df86bbf84ee155a2917236a445ad1b494885e1f206d845e952870524083947aaedfe7ffc21e67d2e883bb52b3f87f658c209ea70a3b78caab780491ab874d1312af2e93dd66e0006cfc930d7f4d8e3e558edf2befb9a684429b19c3b6e936372ea3ad4ca182bec8dd09f208d42b4ae336590ae4969f9aa469f89e28481796011cb97950185f8212b0c2bd9678fc5c99e7b73aabcc4632a544f12b2513101fe1288409ab4dccebe3554dd9e767ecfe8f6972075f49d78215c9bf328caa4dc80d9684906262a7b6f9cc2e542830924368dd041ec227ce353b0ae7ee20aea5df37d1a3af62e0466fcc5f94fbf9ed7acbdee421aa9e1d1f779013c8ddcf9cbae4ff46140fd94190e86ad8ac4472a646713138f851d562ecf3352e2ea818109e17651a600ee2861cee0465b0844ba126b6e7c96cbb7b09c233aaf4493df573482ca2a2e825e1683f6e31c15245db48b268c65a51fa2ef13335cda2898035439a49f1c4731ec87aae43768a6772503b239633c542665d2b1940565969b34b1f311fbb57074a4bef770244ad46f23c644babc198c34f4d3ddfd5f50ca7a567faca715b187c31f4970a871db296dc5ade768a5ad9db45104aeaa28cd278733acb06e637ac7f5fd07a381a29594e2c68f119ada586e7e1378a3f489b0cc45443a993b40202d284c993714fb4e88864b5e27153b6b93d3601d72cf161036d1c63a753ed67e20d5355222aebce82cef8fc70ab3b1044a45f68ee5c67a26920d9cda7efb1156a31192ae0b7864aecae8e2de037f9cde4fe83374422cfec1e37126d9afee8bdd3339ecc262df7825c5f66d6062865d92666194c2d26ed65d46e1cd200290b0e3bf1bce545d7af8d132304f2d985ce265ad70b8a5e5957c4fba4ee203ab5113c02485f3a78267ca611698b597fda64bb2cc7699d619ff8b4b688d23afefb8283768663aa91b73d870c01692fcd73e223960696b186facfaf353429ea4c03d8de631b46b36fa9f5748f80361aab75eef011a203784e2d73cbe6bdf53c2fa4f7ca9e76326bc2081ccfa6e3675bac97701fb79ec8c98de7002a845275fe40418d910530f714115cdfd540ef36073fc58b106d0761944e95c1400fa66abfe12d292ea1f323e770c0a0a858ab5bababe541c3466ec2f6bd65b7625f82f09ac40f780dae07be533653fc4ddbed97753af16b03c6107cfbaa6d3068e58552e7fe2b6569c33de9e60a395d4c44b6ebb7319e351cdde35475560536baec8032a7a5f5b55abac9b1b3c8d448c530fde8523b25960c21445942d84891ecfde2c39d580a5b89e78bf8d49881e9984fa7205600091d8f4c8aaf6327d03bf710c2c65d05b3a218f69b855b075a2ed6a46b806f6a38a04b5e89aed4a922b4524f182c32e3b41242034c4bfb80bf0472d2e1fd688d153d8b40a3f007b50deeebb99a1bcd568bcc6a703d0c6fff2f4072bf827c401636d7f60eddd56769b693e0ff50a3ec8be0e031f1d01f4fa1eb68f0ac9df4c7e4b1dfb56fba91b8ef8b21b706d786c8c95f447df11ee8c4f9175af2149bb968bdf7de0a6102be3d7445177e9551e20653de4d96624f521a9cb85279cd19ab46e84ec8d1abefdd2ac905aedce8d1932325402d50b4aebfdf2259a717a41f03ed76dcaf769f9a3f4550b8cd3cb96f3f7b02f64ed7fa15284afcb347eafdbdda7eea5d65f3fda3be850de0ba4896ebb02d9d30291ec75f900c1234ea07b67170132ba2d10206c849b90a8721cbba1b862488bbabde68d95ba42bc94e4c5f29ea69b770fdbbd5c45d41dfa40567d7341bbfd3397769ffb93b7c8875ecc5e238d03bd5282bc99b0a89d9315704d9e463da2766b1e635f73fd60ad9b3aeeb41cdc8c4af4016e9c581744860c5dd5d0b53422f06197773c7b1a47b67affadc0d066e51349f9c9bf3f03cb641afc4a55e8b175e8f250e15a7a6c985969d568f4f212210862e4608b73b62cc94166511621c8bb91a38a62962768e896dac201d2d6823f9526397b8d4a327a9e2cf06c0ac8ac0de9efbbef679c2c5d10283c85da324d79681c20164b60831e26f7281e28e83bb9eb09645c5b7fa76a28d80d21ee03070554539f118615c5044138528d49f83ba789c49a58c1c0515725c555256371227bd8c041a11bf46af25c8534d3e681c743070249de2649c837f7305c76fb4a6d3b0a3e76430fd34e793e662d38df96915d9c22423faa9448ae3bffb18c7e4734335d93d9abb9d0f1e40cf5249f604d2bb5c5b5277485a98cc3d8292c41094cf62e1b1322739d7482fea2a43d8003a81b3b09c9957cb3ba7caaf615deb9bad2476f8ea19c6e4440ea9dc8fdebf5f2b23f5ff34c9150fa015f3e03a50dcce811de1c007e77a18ef069b034f9119f1791b6d891e7fd715097c2898174f72f7b7c9cff784cb67fd714fc18ab38e7cf77b1635e2a0963613ba77fbbab1fea21ddb814f5a9e85cc41f33b838a8b03d27b376606a0eb691da3540aa0b981a46588ba092d7fced9dc877ddeac0e3da6335cad25270c5b59b13274bef288b8a02b02bd07d6924666d1037d7787aae2b1b8bb694136af4b4a3ddedb1bae1f75d1351dbf531770f13c93c5e852d9ff3891c7e13a8015986d220451a58b4d835a03a56632545350419d6aa97d2b91668f95dc92b0144877c9661e1974afe92c8460b1486b04ab32a4501f1287fb9cd431129864b1604fcfa692033923919af9e4fd1faf110739ef2d263c4e1adad18acf8eae4686e24c2b0e793619f50a7cf075ba3677306c5076a23f070708691fd592dab4f3aec2030d4456b11a9719fba80bcd21b9ce5b2a5e39272aa4fd1da29953ab316c8033bddea4405da663e41a4091021a47378fe2dc60915dc090e1f831421507722e138c66e026f4fb580ec9e7712ef76582c795f77182f58c1b17f995a2b26cb8f65e2bd5ec1235f2de64d1d4fa6177b763bf680aba151c5220ddf953f8022b0743908abb1dc5b656fc3f68bdc7a3dfbeaff3ce2b1ff1b0834c9696201722d6fd62ea4c39668e0d40e681fdee965a4f4e7d1b56ee60c677d8608048b68c0984337a7cc62580b95e085d1550156656cb5208daeee7d0e473a9f9fbf7fb9b7fd9ff90a4d8d11e324992909a21d8e840b6f6e262f9b1467fd4ca96636c65ab66f5da281722361b54c810eac681fc43a84cac6ee1859b302cd52ed18818ce5f500f932fff60df1d502955757601f2a6be0bf3563f25b078d44b0fb55baafe2bb3ef90c7e42b3d8011f4b813009cd44a3b7e24d25eb45fb488a7e9a34dc0975bb6871dec843403507cdc90d05d7b2a6df4b54fad28626785064820d3aaac34bb52b8610c187d3c366f9bfebdbb92d7d0c206efd7e11c507444d299eed7e9eaedde074c957c4bf488309dbe9668be43b3e73df635e253c909fb06f0f0d1817ed3c3a3a8a5263af846e4a6324973eda916007dc94f0d8639e57fe9eae342eb209ae4099a0332fb97c6f811495549586370c93fdab5e6a92cb62e2d2e599584f923668ae84df0676bb08e12f13a2af1283")
	expectedPublicKeyAt1023B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt1023)))
	_, err = hex.Decode(expectedPublicKeyAt1023B, expectedPublicKeyAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.PublicKey, expectedPublicKeyAt1023B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt1023B, deposits[1023].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt1023 := []byte("009560ec38ca371e316dafbd545bce01bc809cede91bb7d9310fb64db8dba123")
	expectedWithdrawalCredentialsAt1023B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt1023)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt1023B, expectedWithdrawalCredentialsAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt1023B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt1023B, deposits[1023].Data.WithdrawalCredentials)
	}
	dRootAt1023 := []byte("7cff3b26de5007156508882eeb9124411e0d12fa9eca0f46fda5ed2241d1559c")
	dRootAt1023B := make([]byte, hex.DecodedLen(len(dRootAt1023)))
	_, err = hex.Decode(dRootAt1023B, dRootAt1023)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[1023][:], dRootAt1023B) {
		t.Fatalf("incorrect deposit data root, wanted %#x but received %#x", dRootAt1023B, depositDataRoots[1023])
	}
	sigAt1023 := []byte("")
	sigAt1023B := make([]byte, hex.DecodedLen(len(sigAt1023)))
	_, err = hex.Decode(sigAt1023B, sigAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.Signature, sigAt1023B) {
		t.Fatalf("incorrect signature, wanted %#x but received %#x", sigAt1023B, deposits[1023].Data.Signature)
	}
}

func TestDeterministicGenesisState_100Validators(t *testing.T) {
	validatorCount := uint64(100)
	beaconState, privKeys := DeterministicGenesisState(t, validatorCount)
	activeValidators, err := helpers.ActiveValidatorCount(context.Background(), beaconState, 0)
	require.NoError(t, err)

	// lint:ignore uintcast -- test code
	if len(privKeys) != int(validatorCount) {
		t.Fatalf("expected amount of private keys %d to match requested amount of validators %d", len(privKeys), validatorCount)
	}
	if activeValidators != validatorCount {
		t.Fatalf("expected validators in state %d to match requested amount %d", activeValidators, validatorCount)
	}
}

func TestDepositTrieFromDeposits(t *testing.T) {
	deposits, _, err := DeterministicDepositsAndKeys(100)
	require.NoError(t, err)
	zond1Data, err := DeterministicZond1Data(len(deposits))
	require.NoError(t, err)

	depositTrie, _, err := DepositTrieFromDeposits(deposits)
	require.NoError(t, err)

	root, err := depositTrie.HashTreeRoot()
	if err != nil {
		t.Fatal(err)
	}
	if !bytes.Equal(root[:], zond1Data.DepositRoot) {
		t.Fatal("expected deposit trie root to equal zond1data deposit root")
	}
}
