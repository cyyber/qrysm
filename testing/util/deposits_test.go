package util

import (
	"bytes"
	"encoding/hex"
	"testing"

	"github.com/theQRL/qrysm/config/params"
	"github.com/theQRL/qrysm/testing/require"
	"google.golang.org/protobuf/proto"
)

func TestSetupInitialDeposits_1024Entries(t *testing.T) {
	entries := 1
	resetCache()
	deposits, privKeys, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, depositDataRoots, err := DeterministicDepositTrie(len(deposits))
	require.NoError(t, err)

	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	if len(privKeys) != entries {
		t.Fatalf("incorrect number of private keys returned, wanted %d but received %d", entries, len(privKeys))
	}
	expectedPublicKeyAt0 := []byte("2e3bcd95f5e30d0b7c5577b66c6373c567a6151ea39a75e477fb9b979276efac8952fcab3b1e671c1903063c08de679ae4fdda1e3f2cf675364a0f9fa5cebb7a6d69dfd6fd5b060dce52f19c3d95337ed388b53ea8d9340860cdfe449187d617e072979f84d7c9bc1a7169706b6fbe01e51c6c8117be3d61e79c046827d095a6f88d4c452da251910d34c7e77e773d667db344535b71998d33920d21d03f16c8b60d27448d24dbe239771bb312be22ef881e919a8bb2cf63108d6122f1ccdd3dce3ccc39a4bf06bfc8acdfeac9261cb061b64e1210dbd70d1da94145fb46e114fd61111c7e28f96a8023b4b3d2b705e347d9d5f629e0c64a533eaf0a84095ccb609196b768d1212db3d957fbf5df67fc8a14c72fba9659ae677647c24dd9d121094ac1cac39f14fbbe5e8624808f004e970b3530c5118cfbb1f041308eba8c8a5bec6ac20805790eb793c21eed3908c0ee74075ebe0f8367d46341f548326a9dfe96dc237a7e103010c5810472d071dc86a3f12936e8f3181eb8de498719acafe20cd59f8291b0313fa70f9843fa65a49712e92516accbb9d2c30c341b5341d618db57299937b7bbd7d51ee9b5e1329cfd725988ad4d8f01389497bfcfe904bbebfd69e9adaf1afa15136f2fe355d4e54aa4c21a4c41bf1a9172535504058d7aaceb9776f16e5c209204b755de6a978cc9952d4bf45b24718cab949e198fef31bc14a09f8474ee0037b758bfb952f5bf0a5f2231c02dcded4c85600a447b80ffd39d6a07c9dedd7efdd45b9c855d9a9b6a88f1f14f405a7608c1f64cd815df316a3ad8442b75df79aade1a9156eb917ad18251406a277cf38f9870a7902b4422931d73406f87e0802e96965773935d2639a649863198d83946425c40a84413d2b1bca109573dc6298584b8c589373be2ca7732478b220b1a214182f96a26c5a1b45dda66d2385346301d167d30202b4fa6167cfb87ecf0377d33a7cac6f38b29ff384481c4531e47a94197334e8ff9f77eb868813f9d5ba5249d9006a2317397cafdd206375d9654eceff93115a530e84ae55a7a25d02d44d737f42da58486c7dc3e92f3312ca80dfe2a9e87a52c6cfd852fb23767a9e551455ce7f2629855cc28c56e83cd6f2e1d4e3f05058b6a748fcdce270decc01149d96a9ab1f4f8ac1c72742f4fb0f602144e018697134d9ed2a5771bba1a8702ce94fc1732299080616348bb6eeaf7ed985e881f0a2a407b22e3a8426d4a4e2ceb257d4e635cb12c1706edc0fc77043652f3ccf3afa7d2b97c3b60bd0078d7220de39fd1e822e37c6827b870d1ce431015b03b1c8e2e88283bd8d7c6ca88673f7141d88c702d4f2bb35aa8f953249f429d7f80a67ed4352d5b2b79694f545f89d23e7e4a96c98647236c55bfe2d02f1fcfa254f9089baef4a5c8b9ecf5936cd6102500d67993ed92143dfca9c60caf49b25096c79bb9661839032507f99e8770702fa74babffe16da6b4c66fdf47e9fa03321ec973582dc4492c3025254037f55bfd47bed448105445ff7d9f0b2fbb84d798151c6d1255982dceda6abe534c1a487b9f0a2669faddce68840651c57daa54664e2dc11084867d98687a17758ddacbf0b2088e46f1c87deda65a904020c187e26fb22053aaa4daea57caaf9df6119909e727447d483492c961f72918e4dd8a7e543aa490b39c1f45e05b22f3e9023bbcadf0f91b3fdab1ac16aae2d6f13729219d5ae70b2ba8b552f23a25e56bad561d06c3c33a6578a966b9a9e8971c6008ad5791cd87ab2da27690b3f2868191a65abb6add5f72613a6ba333b1cbdea995cad79007eacc931061cb6c107b55973a87d15bc9c95d2d9e4dec237ddf91672251a05853dc97fe3ed27196814cb6e84f1e28954693475d382b6ec7ddb594613325d2c82a7dd9bb6a429ee0037cd8af2f129d871eef4da33966edecd011f0d271e527fb694430833bd7acc3b2944599ba3e13aae3a1213bf265dccd53123b8b285d9158d072699fc8c68d461550abe4794ff7397d1fc1adde7502be6e93399cc5ca0963d38be6923b033c6873b9ce8d05c0de899fb116ffd20822d8d956d1dcdc823f5b3682cb12491d462c1d98600f2b48ad02ba7090e2833c8b8f374229074d21f13b3d9c0923f78624e8fe2caa8ec57d7b321494d796f742e93c9e049cb416b05a17eeba52799113cb42274ea07fa7fb8405f5ea726eebcf15da0173c344f7f85da412589dd30c9a9b858e1cb3d36fdf3bbe988ff83ecbcaae06a40a7cde8225b5e02edd615a0c89126bead1380a4c8843ad313cb94b040dbda8a354dd11e2725584d500fb61adb7f785f253e153998838e5b87374f1c759e48da79f1d3e44c3c0c0ac3b13473abad9cfdf60f5b572387c7bebaa4a419d8a0cd26e73ec58ea92f80de3f9aca31f1faedf94d82b2b35f2520d4f6167c6e886f84620d79d7d8859f8562bff408f7fb3bea11c3ffdd8074748e10b22ed1bb5955daf6122c8daeafa5541364845f149c67ff83a0f8517fc6727b4c997d637c3c46bf80c76e9e8858ea041cbfee49fc135fe8ef082fab0dcb9c795f81add8e0d7386bb2cee496948b9c8bd22d3230d400b0beb119297097a73e41760df8ae3f22ab40d0402238833c5e12d90fecb1ce9c88c68f281baaef15cdadcdad4670ab0dec84b14adb9c0325fc63a05bc66fbff3bdf45a114f42c232ff53d8bfb3a474ce5c4f71841ee198336d4eeec82d52df5c4098f25bcc88f894a091cfc63203d3d50b5d456143467018da3795ee9d84508027a503550a813be30a3151bc1ca3768307d381e9184df8a3d00b20cedde0d82a728e2e714d1461deefa6acc067397ce836500289b57ac535aa19317dcf27c20460803ba777e55b8e29b9a678b67c6d6ef7abb82fdf976ef56eff535664dc28ec94b8b78193843be5ff58c2180b9559fb14749e9b7139d83fe2cf9fb375f134dc51e79831d932aefac40aeb83e006679952f95820882de19027172822cd6365be331fc7a54bfea837277410c0f81362518967dbafab318c820212ec5515b4e7354d15815c080a52f31553a5e9081bfc38ce19ef227fde8e05d042146b2dfe0bd4cfcf927b73cf3472ea8718d7d4c62753353ce24e64f7cb330257498a44260d92e64968e3d89a55c33a93dbe1df6220abbdf6f675febc8bba04e3145fb61ad6f766625535826681ae969635b55f12220339d5fb644dbd9ba8b00d0a4c28b58ccb7df5eec10b93472ed0fe31f1d22be4848ef8b0e70c636a19ff2770fe5e7ee691fbc44820b71cc826a5a4d3995015a26f31ce0d0e2512d29705ff15a1faf7d88c45c7d67c10f5d38672ac69c2442cdb602de3f8553b077c07e39a3fa09a4588667b766133b402da1a77bcaf6eb2df58cd9b445e9eb1537654aff9e8c882e2a1a3e5ed46efb782515c0500056c422994cf8f18edd8c4422944a7fe16c1a59c2e098cdd7afc965af691f582142470953c0fc2e3a9ff2b8c87e483d1c811ce3a92a20341e7c1ead94448cbd49121d96258c657add51d9bfbf10b28710ec4d263da0e1d9b3ae8f09c462b9868e08097be87853408245ebcb6ca11fd2a3a088a50b5583f6938268ac37bb295edc096048eb5631b6a6b40dff8cb7fc21b76839aba5b869689fb6bf0cc19957962ac2d494eb03")
	expectedPublicKeyAt0B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt0)))
	_, err = hex.Decode(expectedPublicKeyAt0B, expectedPublicKeyAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt0 := []byte("00b28c1f21529c9347460e8898cb6dac9467f010801fa59d744d757353a613c8")
	expectedWithdrawalCredentialsAt0B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt0)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt0B, expectedWithdrawalCredentialsAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0B, deposits[0].Data.WithdrawalCredentials)
	}

	dRootAt0 := []byte("95fb59d72545fa8ac798882b9d5a781f81130bea58a103707a7a87aad4d087e3")
	dRootAt0B := make([]byte, hex.DecodedLen(len(dRootAt0)))
	_, err = hex.Decode(dRootAt0B, dRootAt0)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt0B, depositDataRoots[0])
	}

	sigAt0 := []byte("")
	sigAt0B := make([]byte, hex.DecodedLen(len(sigAt0)))
	_, err = hex.Decode(sigAt0B, sigAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt0B, deposits[0].Data.Signature)
	}

	entries = 1024
	resetCache()
	deposits, privKeys, err = DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, depositDataRoots, err = DeterministicDepositTrie(len(deposits))
	require.NoError(t, err)
	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	if len(privKeys) != entries {
		t.Fatalf("incorrect number of private keys returned, wanted %d but received %d", entries, len(privKeys))
	}
	// Ensure 0  has not changed
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0B, deposits[0].Data.WithdrawalCredentials)
	}
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt0B, depositDataRoots[0])
	}
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt0B, deposits[0].Data.Signature)
	}
	expectedPublicKeyAt1023 := []byte("d7d9cc6f6f93a535bdb3b18c2daafe7449b4f8766da05044a1af735983aed8d7023d15a7d9b279e62ce2d4f1ef021f986fded4a718fd6043e0a5f60253f3e196913b5090329d2867b49473ff3c52dd22c55f481e763a27ad4b1431dc116a871ef36119295c6171a38583817a5ee246a29f730d76b68be9b6a3cded4fb1104c4ca5d4620d63e4dada42be5e027bf1d73af19ca6bed0df3057bb9ed15f072ff61e391bc43d89692450b3ffba273dbe7aac1b6fb85405344fa9763dddb02d0a46d559e2df47032bc90b797531e56364b4ce6d6712dd6bd92854614053a98342efed93178b05132370924f17049034c079074330326c5f4378a052aa3e96200eb55582e923821d32fa8ac67fc59c0b51f30d9748907e661b0f066085cabecbf4ed09699b3c7879306f82dc23bc8fa6d065e5c9efb6bfc812259ef6750fb3bcf1888c4b1e44fd5ad4e3fa62cc0ded3d1415b71e2b5bf79a5f4cd2d4ae2981112b0499de2e9bcb3591a973dd79a5b1ff5727cc0e1e57d7cd93775f4424231949c50106f9cb49a2200ef71378dbb5932d4be211738f8138c49f1ff0f716e3ee9c7c54ae9248cdd7c6522072553b3af391a331492ee3471afe566a58f84d906eab10a5ec5d28b2c2ca5d7f26a861b41d15976417d11340559bd1e56d527a02bd0eca42a8d8417878ddb63cd06b554f897518d2b7bafd51dde9d724f76cb338d59b3e077dc2092efd4494ef566f9530fde5b04ddc497acea8efacbee290c2228c270f8bd27cc2e4c17b59ae731d268ec67593723867f9032c7a0bc184dbad9b7ca2e5db80d2bf1898401d6fcc63904f50e50041d9a23ef760137106f6e150f8a12cc860d8a141d5c74bb21c2e0ce5770b4fb8f2fc85bb5521114b3fd24720775e1c880f96a4c9a941b6d136b4bb2d48af64104191641a67360c67fc9b666922043625c0f508ca5458bc63f847da906a89ebd4766a6fea12a985407dd61b94ea586e3ff924a2969546ebd0a052ad61d8db0a2532fda08e6b922371b1c56ce2eedf95d14fbbe68a5b3ae2c24d03352143a27ac53cc4d8fd7bb4eb4e2fb7094f2cdc996dc9c95fe38d1fec36490a6370ec7b5d7e2b5dfae30ebf0e91b6a0f328b811102dbeadf3ea43a09747d943974b4d7b980e262fccff275d6b46edf124269b6abe4d300a7cd50ac1f1a7a1bfd6a10434d56649d67b3cefea9ac826c11da4297e935074432bab3794bc6d7076d5a7c37014b6bac95daa59750babc1b1691e04dc78fb02e402dd3d2f54a1808886358aa9d8c1044a05d94d6fcd5d7693a478c77ef33ac98539e2fd78f98822d7220dd3e2356866d5493bc0fbad97e4edb94bf48f57951b15509c7947e95bd50ebbf9633f3707e6a1e41189a5175a5f23319c9112909ee78ef9ee12c06a6bd7cd2fd014fec6c701829db916367c2534866bf2b06999e377c75de39b528de0c99e374fd41868da53d2f8a2d49905bbcf74c8f099781894df4c7830679e0eae560c38d67679c206bd50aea6565c23b6793e7c7ba1732b055560f8238371ef3aabf503602fb29255b1c03b292859b6c6221faf2d26eeb28781e9904c64da76c9a0f31c7641eb10224bc8bfad7aa4929011c9021ce9d2220fa5213ebf4525cc6d3e6701d89375b5937355a76c6808284614322c76442aad7706a7563d79b32c3f63d274bf78a090b648665517ee53957415334d92e0213f27ce56fed5931e842d547fd31f030c54c1cfd7ea29d034fb74a9c347168406d86c4811ae8310618e3d3a943d0572b0e3a0aa5e7e83d28803086075c539aee838715a6c04d1ece3c711d981445aa64b389edc01a76ca2519bd9dd3e3bfc6596550ff49425a9938f6767788207afde2ff979448dae2f8b6a4ab1c2cc216a187a35c14766841917cd9fc032322b2c5cf2ee0e77bc76368f2c3c21a0b09557e1d3f2e67862f4a820314aecd05886589a48680b5af2e62fb4cbc963e8e111ac3f0443bb4cc27124dd8f9cb2bfff27ce5446d8dbf83e592b5cb90f452fd8feab733d54c0f2bbb91d97b0bb82e7506661b90be6aaba3ed8e2b4fe046877903b5eb3c685c7a9a6c987b631e0290362525829df54fdf01a20b99483ce0e0175907bf16b1b0f0436fac3890a383e1c4bc70c7aaea2cb2b1605c8edd49c9bda5cf38592eafeda5a5a8a623dd74cb1e05a9d305ebecf41f81127de98ddef0bcff6af27f053eb07fca593d513679cecd62daf19701075137208ac8da1fa001e87a40777b787a30fb2d8c7e097c1aeb593bd70fee895aa8769a6430695b929acf2f079d05e42d5c183d49f346f120d63429920352d8a844d34e7d045419389995e530eaffbbef107fe2f334cf7a2ef055d603ee30bb651ce635e00b7f6502b3cccb7caa5d139b2a21d740d5f22b68375b11f21785efcef340d30dea2b81a1520dd1b453b6e48eb84a6df60ecd2848acabb33f15efa01b2f340e18dfa4c685fe9593ba6accc56b373dc1ffe3462e135dfe2e05c8f0e9b0a9274607de493a5c796528f76ec6c7d19a064a6fbd0e851a35720aa7b7f298f89d0723a3172517a537235c3209a09bb496cf6985dca357c4956cb777f8a41a4a271313b081076c40d47be452b9ce3ab968568b2f6f2bb7cbbeee4c448b0733c4f147e2ef4bce0054e84b3664d810b966f9e47d365cbc45cd6ed76732cdd9c735b2c9fb2e4c83a6bcd234eef54178bb50119f9df15ce0ef12b47db9da98c97430d3437a23c847929619a4f2e9d450dec4672328206abf5cd0a6fd2086610babd2e133e845b819b11c896f89fa0ad55913259ee778e3461abe010bc0215c06c09f330a4de022efa3ce6fa40f46fb3b4da4bd6bc08a76386f3cf1c1c79ba282326eb08fc62943358dd215ee3245b4d96ecdfb883a49e30052854de7c5f68c56faa1aad3ecbc6d891662d181930f74152dd66d691a4e5df829f952ab3c9ed99f4e045bbbbc73cc78f7f516dd7343f8a4755901ec20315764dc52de88f91143827f85b72ff2dd9ab3a19eba81381b53c6881e201ae324acf0d14fc6877da88c7c1ff9d931a459d6af0af43edf4e693e0462d5e66c08e9100deeaf88143d7a987ec3be1b2f17e3c4d2f2a6e4dd98e24859ba46b363cef8aac8629d5decc2f162971b9ef9dc4a4511b0fcd26ff8b383eea630d1ca75830d9973301015de99b82a372b747354dc975e010c9eb69bc8939fbf43ad59ed5065ea85582102aecca7b9c2b3011e71b3618902133858c69e3393067d1d4d8aee62ddb39c5d84107528b21853c72fe7cc48c189dbeddb4d355328209800a39f94f97fa2e6ac607e85450c2ba3aad8665f18e9e3f24855d0d6f8577d7b46b291316913299a2c219c8ef9eb05f1b3622d73fae3232cb8b7f795e76b8201632e1aa50c2da06474228e3654a07d4ae39ed12293271589ded65f668f94a44d52cf8716cf2e6988d1ed6ddec46457d38234ae5b3a863658d7305aee0818f10cc39e1f1c6ffe5c669f2e875bbace3f96f07d8ad6036512d2f308c8511952233ff7d7c8a32d611e800d1f78064635af0e0de0b11e24a6e5b8a442857b6f3199ec80d266d2d50814780d621acbd3143cd26b2ab26c23ce1015cc5c2bffc0b8d72b180834cffcecb5e2a2f9892a5dd5596572f72f9d9fb962fe8a324948f4ec21bc5234afcfe")
	expectedPublicKeyAt1023B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt1023)))
	_, err = hex.Decode(expectedPublicKeyAt1023B, expectedPublicKeyAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.PublicKey, expectedPublicKeyAt1023B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt1023B, deposits[1023].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt1023 := []byte("0038906e54ed9aa3a4c5e0adafdafe7d203d4c8fb215c1b395aae866dbf2f04a")
	expectedWithdrawalCredentialsAt1023B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt1023)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt1023B, expectedWithdrawalCredentialsAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt1023B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt1023B, deposits[1023].Data.WithdrawalCredentials)
	}
	dRootAt1023 := []byte("78c8e02dc81bf9c0b2b068a7271b4c488c54f7080ebc474cd9a1441c4968e322")
	dRootAt1023B := make([]byte, hex.DecodedLen(len(dRootAt1023)))
	_, err = hex.Decode(dRootAt1023B, dRootAt1023)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[1023][:], dRootAt1023B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt1023B, depositDataRoots[1023])
	}
	sigAt1023 := []byte("")
	sigAt1023B := make([]byte, hex.DecodedLen(len(sigAt1023)))
	_, err = hex.Decode(sigAt1023B, sigAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.Signature, sigAt1023B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt1023B, deposits[1023].Data.Signature)
	}
}

func TestDepositsWithBalance_MatchesDeterministic(t *testing.T) {
	entries := 64
	resetCache()
	balances := make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance
	}
	deposits, depositTrie, err := DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err := DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)

	determDeposits, _, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, determDepositDataRoots, err := DeterministicDepositTrie(entries)
	require.NoError(t, err)

	for i := 0; i < entries; i++ {
		if !proto.Equal(deposits[i], determDeposits[i]) {
			t.Errorf("Expected deposit %d to match", i)
		}
		if !bytes.Equal(depositDataRoots[i][:], determDepositDataRoots[i][:]) {
			t.Errorf("Expected deposit root %d to match", i)
		}
	}
}

func TestDepositsWithBalance_MatchesDeterministic_Cached(t *testing.T) {
	entries := 32
	resetCache()
	// Cache half of the deposit cache.
	_, _, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, _, err = DeterministicDepositTrie(entries)
	require.NoError(t, err)

	// Generate balanced deposits with half cache.
	entries = 64
	balances := make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance
	}
	deposits, depositTrie, err := DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err := DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)

	// Get 64 standard deposits.
	determDeposits, _, err := DeterministicDepositsAndKeys(uint64(entries))
	require.NoError(t, err)
	_, determDepositDataRoots, err := DeterministicDepositTrie(entries)
	require.NoError(t, err)

	for i := 0; i < entries; i++ {
		if !proto.Equal(deposits[i], determDeposits[i]) {
			t.Errorf("Expected deposit %d to match", i)
		}
		if !bytes.Equal(depositDataRoots[i][:], determDepositDataRoots[i][:]) {
			t.Errorf("Expected deposit root %d to match", i)
		}
	}
}

func TestSetupInitialDeposits_1024Entries_PartialDeposits(t *testing.T) {
	entries := 1
	resetCache()
	balances := make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance / 2
	}
	deposits, depositTrie, err := DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err := DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)

	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	expectedPublicKeyAt0 := []byte("2e3bcd95f5e30d0b7c5577b66c6373c567a6151ea39a75e477fb9b979276efac8952fcab3b1e671c1903063c08de679ae4fdda1e3f2cf675364a0f9fa5cebb7a6d69dfd6fd5b060dce52f19c3d95337ed388b53ea8d9340860cdfe449187d617e072979f84d7c9bc1a7169706b6fbe01e51c6c8117be3d61e79c046827d095a6f88d4c452da251910d34c7e77e773d667db344535b71998d33920d21d03f16c8b60d27448d24dbe239771bb312be22ef881e919a8bb2cf63108d6122f1ccdd3dce3ccc39a4bf06bfc8acdfeac9261cb061b64e1210dbd70d1da94145fb46e114fd61111c7e28f96a8023b4b3d2b705e347d9d5f629e0c64a533eaf0a84095ccb609196b768d1212db3d957fbf5df67fc8a14c72fba9659ae677647c24dd9d121094ac1cac39f14fbbe5e8624808f004e970b3530c5118cfbb1f041308eba8c8a5bec6ac20805790eb793c21eed3908c0ee74075ebe0f8367d46341f548326a9dfe96dc237a7e103010c5810472d071dc86a3f12936e8f3181eb8de498719acafe20cd59f8291b0313fa70f9843fa65a49712e92516accbb9d2c30c341b5341d618db57299937b7bbd7d51ee9b5e1329cfd725988ad4d8f01389497bfcfe904bbebfd69e9adaf1afa15136f2fe355d4e54aa4c21a4c41bf1a9172535504058d7aaceb9776f16e5c209204b755de6a978cc9952d4bf45b24718cab949e198fef31bc14a09f8474ee0037b758bfb952f5bf0a5f2231c02dcded4c85600a447b80ffd39d6a07c9dedd7efdd45b9c855d9a9b6a88f1f14f405a7608c1f64cd815df316a3ad8442b75df79aade1a9156eb917ad18251406a277cf38f9870a7902b4422931d73406f87e0802e96965773935d2639a649863198d83946425c40a84413d2b1bca109573dc6298584b8c589373be2ca7732478b220b1a214182f96a26c5a1b45dda66d2385346301d167d30202b4fa6167cfb87ecf0377d33a7cac6f38b29ff384481c4531e47a94197334e8ff9f77eb868813f9d5ba5249d9006a2317397cafdd206375d9654eceff93115a530e84ae55a7a25d02d44d737f42da58486c7dc3e92f3312ca80dfe2a9e87a52c6cfd852fb23767a9e551455ce7f2629855cc28c56e83cd6f2e1d4e3f05058b6a748fcdce270decc01149d96a9ab1f4f8ac1c72742f4fb0f602144e018697134d9ed2a5771bba1a8702ce94fc1732299080616348bb6eeaf7ed985e881f0a2a407b22e3a8426d4a4e2ceb257d4e635cb12c1706edc0fc77043652f3ccf3afa7d2b97c3b60bd0078d7220de39fd1e822e37c6827b870d1ce431015b03b1c8e2e88283bd8d7c6ca88673f7141d88c702d4f2bb35aa8f953249f429d7f80a67ed4352d5b2b79694f545f89d23e7e4a96c98647236c55bfe2d02f1fcfa254f9089baef4a5c8b9ecf5936cd6102500d67993ed92143dfca9c60caf49b25096c79bb9661839032507f99e8770702fa74babffe16da6b4c66fdf47e9fa03321ec973582dc4492c3025254037f55bfd47bed448105445ff7d9f0b2fbb84d798151c6d1255982dceda6abe534c1a487b9f0a2669faddce68840651c57daa54664e2dc11084867d98687a17758ddacbf0b2088e46f1c87deda65a904020c187e26fb22053aaa4daea57caaf9df6119909e727447d483492c961f72918e4dd8a7e543aa490b39c1f45e05b22f3e9023bbcadf0f91b3fdab1ac16aae2d6f13729219d5ae70b2ba8b552f23a25e56bad561d06c3c33a6578a966b9a9e8971c6008ad5791cd87ab2da27690b3f2868191a65abb6add5f72613a6ba333b1cbdea995cad79007eacc931061cb6c107b55973a87d15bc9c95d2d9e4dec237ddf91672251a05853dc97fe3ed27196814cb6e84f1e28954693475d382b6ec7ddb594613325d2c82a7dd9bb6a429ee0037cd8af2f129d871eef4da33966edecd011f0d271e527fb694430833bd7acc3b2944599ba3e13aae3a1213bf265dccd53123b8b285d9158d072699fc8c68d461550abe4794ff7397d1fc1adde7502be6e93399cc5ca0963d38be6923b033c6873b9ce8d05c0de899fb116ffd20822d8d956d1dcdc823f5b3682cb12491d462c1d98600f2b48ad02ba7090e2833c8b8f374229074d21f13b3d9c0923f78624e8fe2caa8ec57d7b321494d796f742e93c9e049cb416b05a17eeba52799113cb42274ea07fa7fb8405f5ea726eebcf15da0173c344f7f85da412589dd30c9a9b858e1cb3d36fdf3bbe988ff83ecbcaae06a40a7cde8225b5e02edd615a0c89126bead1380a4c8843ad313cb94b040dbda8a354dd11e2725584d500fb61adb7f785f253e153998838e5b87374f1c759e48da79f1d3e44c3c0c0ac3b13473abad9cfdf60f5b572387c7bebaa4a419d8a0cd26e73ec58ea92f80de3f9aca31f1faedf94d82b2b35f2520d4f6167c6e886f84620d79d7d8859f8562bff408f7fb3bea11c3ffdd8074748e10b22ed1bb5955daf6122c8daeafa5541364845f149c67ff83a0f8517fc6727b4c997d637c3c46bf80c76e9e8858ea041cbfee49fc135fe8ef082fab0dcb9c795f81add8e0d7386bb2cee496948b9c8bd22d3230d400b0beb119297097a73e41760df8ae3f22ab40d0402238833c5e12d90fecb1ce9c88c68f281baaef15cdadcdad4670ab0dec84b14adb9c0325fc63a05bc66fbff3bdf45a114f42c232ff53d8bfb3a474ce5c4f71841ee198336d4eeec82d52df5c4098f25bcc88f894a091cfc63203d3d50b5d456143467018da3795ee9d84508027a503550a813be30a3151bc1ca3768307d381e9184df8a3d00b20cedde0d82a728e2e714d1461deefa6acc067397ce836500289b57ac535aa19317dcf27c20460803ba777e55b8e29b9a678b67c6d6ef7abb82fdf976ef56eff535664dc28ec94b8b78193843be5ff58c2180b9559fb14749e9b7139d83fe2cf9fb375f134dc51e79831d932aefac40aeb83e006679952f95820882de19027172822cd6365be331fc7a54bfea837277410c0f81362518967dbafab318c820212ec5515b4e7354d15815c080a52f31553a5e9081bfc38ce19ef227fde8e05d042146b2dfe0bd4cfcf927b73cf3472ea8718d7d4c62753353ce24e64f7cb330257498a44260d92e64968e3d89a55c33a93dbe1df6220abbdf6f675febc8bba04e3145fb61ad6f766625535826681ae969635b55f12220339d5fb644dbd9ba8b00d0a4c28b58ccb7df5eec10b93472ed0fe31f1d22be4848ef8b0e70c636a19ff2770fe5e7ee691fbc44820b71cc826a5a4d3995015a26f31ce0d0e2512d29705ff15a1faf7d88c45c7d67c10f5d38672ac69c2442cdb602de3f8553b077c07e39a3fa09a4588667b766133b402da1a77bcaf6eb2df58cd9b445e9eb1537654aff9e8c882e2a1a3e5ed46efb782515c0500056c422994cf8f18edd8c4422944a7fe16c1a59c2e098cdd7afc965af691f582142470953c0fc2e3a9ff2b8c87e483d1c811ce3a92a20341e7c1ead94448cbd49121d96258c657add51d9bfbf10b28710ec4d263da0e1d9b3ae8f09c462b9868e08097be87853408245ebcb6ca11fd2a3a088a50b5583f6938268ac37bb295edc096048eb5631b6a6b40dff8cb7fc21b76839aba5b869689fb6bf0cc19957962ac2d494eb03")
	expectedPublicKeyAt0B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt0)))
	_, err = hex.Decode(expectedPublicKeyAt0B, expectedPublicKeyAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt0 := []byte("00b28c1f21529c9347460e8898cb6dac9467f010801fa59d744d757353a613c8")
	expectedWithdrawalCredentialsAt0B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt0)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt0B, expectedWithdrawalCredentialsAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0B, deposits[0].Data.WithdrawalCredentials)
	}
	dRootAt0 := []byte("5292e59fac2b07f95abdea09c02c364e2c3c95f8ffee80a77d7795bdb40c2c8f")
	dRootAt0B := make([]byte, hex.DecodedLen(len(dRootAt0)))
	_, err = hex.Decode(dRootAt0B, dRootAt0)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %#x but received %#x", dRootAt0B, depositDataRoots[0])
	}

	sigAt0 := []byte("")
	sigAt0B := make([]byte, hex.DecodedLen(len(sigAt0)))
	_, err = hex.Decode(sigAt0B, sigAt0)
	require.NoError(t, err)
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %#x but received %#x", sigAt0B, deposits[0].Data.Signature)
	}

	entries = 1024
	resetCache()
	balances = make([]uint64, entries)
	for i := 0; i < entries; i++ {
		balances[i] = params.BeaconConfig().MaxEffectiveBalance / 2
	}
	deposits, depositTrie, err = DepositsWithBalance(balances)
	require.NoError(t, err)
	_, depositDataRoots, err = DepositTrieSubset(depositTrie, entries)
	require.NoError(t, err)
	if len(deposits) != entries {
		t.Fatalf("incorrect number of deposits returned, wanted %d but received %d", entries, len(deposits))
	}
	// Ensure 0  has not changed
	if !bytes.Equal(deposits[0].Data.PublicKey, expectedPublicKeyAt0B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt0B, deposits[0].Data.PublicKey)
	}
	if !bytes.Equal(deposits[0].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt0B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt0B, deposits[0].Data.WithdrawalCredentials)
	}
	if !bytes.Equal(depositDataRoots[0][:], dRootAt0B) {
		t.Fatalf("incorrect deposit data root, wanted %x but received %x", dRootAt0B, depositDataRoots[0])
	}
	if !bytes.Equal(deposits[0].Data.Signature, sigAt0B) {
		t.Fatalf("incorrect signature, wanted %x but received %x", sigAt0B, deposits[0].Data.Signature)
	}
	expectedPublicKeyAt1023 := []byte("d7d9cc6f6f93a535bdb3b18c2daafe7449b4f8766da05044a1af735983aed8d7023d15a7d9b279e62ce2d4f1ef021f986fded4a718fd6043e0a5f60253f3e196913b5090329d2867b49473ff3c52dd22c55f481e763a27ad4b1431dc116a871ef36119295c6171a38583817a5ee246a29f730d76b68be9b6a3cded4fb1104c4ca5d4620d63e4dada42be5e027bf1d73af19ca6bed0df3057bb9ed15f072ff61e391bc43d89692450b3ffba273dbe7aac1b6fb85405344fa9763dddb02d0a46d559e2df47032bc90b797531e56364b4ce6d6712dd6bd92854614053a98342efed93178b05132370924f17049034c079074330326c5f4378a052aa3e96200eb55582e923821d32fa8ac67fc59c0b51f30d9748907e661b0f066085cabecbf4ed09699b3c7879306f82dc23bc8fa6d065e5c9efb6bfc812259ef6750fb3bcf1888c4b1e44fd5ad4e3fa62cc0ded3d1415b71e2b5bf79a5f4cd2d4ae2981112b0499de2e9bcb3591a973dd79a5b1ff5727cc0e1e57d7cd93775f4424231949c50106f9cb49a2200ef71378dbb5932d4be211738f8138c49f1ff0f716e3ee9c7c54ae9248cdd7c6522072553b3af391a331492ee3471afe566a58f84d906eab10a5ec5d28b2c2ca5d7f26a861b41d15976417d11340559bd1e56d527a02bd0eca42a8d8417878ddb63cd06b554f897518d2b7bafd51dde9d724f76cb338d59b3e077dc2092efd4494ef566f9530fde5b04ddc497acea8efacbee290c2228c270f8bd27cc2e4c17b59ae731d268ec67593723867f9032c7a0bc184dbad9b7ca2e5db80d2bf1898401d6fcc63904f50e50041d9a23ef760137106f6e150f8a12cc860d8a141d5c74bb21c2e0ce5770b4fb8f2fc85bb5521114b3fd24720775e1c880f96a4c9a941b6d136b4bb2d48af64104191641a67360c67fc9b666922043625c0f508ca5458bc63f847da906a89ebd4766a6fea12a985407dd61b94ea586e3ff924a2969546ebd0a052ad61d8db0a2532fda08e6b922371b1c56ce2eedf95d14fbbe68a5b3ae2c24d03352143a27ac53cc4d8fd7bb4eb4e2fb7094f2cdc996dc9c95fe38d1fec36490a6370ec7b5d7e2b5dfae30ebf0e91b6a0f328b811102dbeadf3ea43a09747d943974b4d7b980e262fccff275d6b46edf124269b6abe4d300a7cd50ac1f1a7a1bfd6a10434d56649d67b3cefea9ac826c11da4297e935074432bab3794bc6d7076d5a7c37014b6bac95daa59750babc1b1691e04dc78fb02e402dd3d2f54a1808886358aa9d8c1044a05d94d6fcd5d7693a478c77ef33ac98539e2fd78f98822d7220dd3e2356866d5493bc0fbad97e4edb94bf48f57951b15509c7947e95bd50ebbf9633f3707e6a1e41189a5175a5f23319c9112909ee78ef9ee12c06a6bd7cd2fd014fec6c701829db916367c2534866bf2b06999e377c75de39b528de0c99e374fd41868da53d2f8a2d49905bbcf74c8f099781894df4c7830679e0eae560c38d67679c206bd50aea6565c23b6793e7c7ba1732b055560f8238371ef3aabf503602fb29255b1c03b292859b6c6221faf2d26eeb28781e9904c64da76c9a0f31c7641eb10224bc8bfad7aa4929011c9021ce9d2220fa5213ebf4525cc6d3e6701d89375b5937355a76c6808284614322c76442aad7706a7563d79b32c3f63d274bf78a090b648665517ee53957415334d92e0213f27ce56fed5931e842d547fd31f030c54c1cfd7ea29d034fb74a9c347168406d86c4811ae8310618e3d3a943d0572b0e3a0aa5e7e83d28803086075c539aee838715a6c04d1ece3c711d981445aa64b389edc01a76ca2519bd9dd3e3bfc6596550ff49425a9938f6767788207afde2ff979448dae2f8b6a4ab1c2cc216a187a35c14766841917cd9fc032322b2c5cf2ee0e77bc76368f2c3c21a0b09557e1d3f2e67862f4a820314aecd05886589a48680b5af2e62fb4cbc963e8e111ac3f0443bb4cc27124dd8f9cb2bfff27ce5446d8dbf83e592b5cb90f452fd8feab733d54c0f2bbb91d97b0bb82e7506661b90be6aaba3ed8e2b4fe046877903b5eb3c685c7a9a6c987b631e0290362525829df54fdf01a20b99483ce0e0175907bf16b1b0f0436fac3890a383e1c4bc70c7aaea2cb2b1605c8edd49c9bda5cf38592eafeda5a5a8a623dd74cb1e05a9d305ebecf41f81127de98ddef0bcff6af27f053eb07fca593d513679cecd62daf19701075137208ac8da1fa001e87a40777b787a30fb2d8c7e097c1aeb593bd70fee895aa8769a6430695b929acf2f079d05e42d5c183d49f346f120d63429920352d8a844d34e7d045419389995e530eaffbbef107fe2f334cf7a2ef055d603ee30bb651ce635e00b7f6502b3cccb7caa5d139b2a21d740d5f22b68375b11f21785efcef340d30dea2b81a1520dd1b453b6e48eb84a6df60ecd2848acabb33f15efa01b2f340e18dfa4c685fe9593ba6accc56b373dc1ffe3462e135dfe2e05c8f0e9b0a9274607de493a5c796528f76ec6c7d19a064a6fbd0e851a35720aa7b7f298f89d0723a3172517a537235c3209a09bb496cf6985dca357c4956cb777f8a41a4a271313b081076c40d47be452b9ce3ab968568b2f6f2bb7cbbeee4c448b0733c4f147e2ef4bce0054e84b3664d810b966f9e47d365cbc45cd6ed76732cdd9c735b2c9fb2e4c83a6bcd234eef54178bb50119f9df15ce0ef12b47db9da98c97430d3437a23c847929619a4f2e9d450dec4672328206abf5cd0a6fd2086610babd2e133e845b819b11c896f89fa0ad55913259ee778e3461abe010bc0215c06c09f330a4de022efa3ce6fa40f46fb3b4da4bd6bc08a76386f3cf1c1c79ba282326eb08fc62943358dd215ee3245b4d96ecdfb883a49e30052854de7c5f68c56faa1aad3ecbc6d891662d181930f74152dd66d691a4e5df829f952ab3c9ed99f4e045bbbbc73cc78f7f516dd7343f8a4755901ec20315764dc52de88f91143827f85b72ff2dd9ab3a19eba81381b53c6881e201ae324acf0d14fc6877da88c7c1ff9d931a459d6af0af43edf4e693e0462d5e66c08e9100deeaf88143d7a987ec3be1b2f17e3c4d2f2a6e4dd98e24859ba46b363cef8aac8629d5decc2f162971b9ef9dc4a4511b0fcd26ff8b383eea630d1ca75830d9973301015de99b82a372b747354dc975e010c9eb69bc8939fbf43ad59ed5065ea85582102aecca7b9c2b3011e71b3618902133858c69e3393067d1d4d8aee62ddb39c5d84107528b21853c72fe7cc48c189dbeddb4d355328209800a39f94f97fa2e6ac607e85450c2ba3aad8665f18e9e3f24855d0d6f8577d7b46b291316913299a2c219c8ef9eb05f1b3622d73fae3232cb8b7f795e76b8201632e1aa50c2da06474228e3654a07d4ae39ed12293271589ded65f668f94a44d52cf8716cf2e6988d1ed6ddec46457d38234ae5b3a863658d7305aee0818f10cc39e1f1c6ffe5c669f2e875bbace3f96f07d8ad6036512d2f308c8511952233ff7d7c8a32d611e800d1f78064635af0e0de0b11e24a6e5b8a442857b6f3199ec80d266d2d50814780d621acbd3143cd26b2ab26c23ce1015cc5c2bffc0b8d72b180834cffcecb5e2a2f9892a5dd5596572f72f9d9fb962fe8a324948f4ec21bc5234afcfe")
	expectedPublicKeyAt1023B := make([]byte, hex.DecodedLen(len(expectedPublicKeyAt1023)))
	_, err = hex.Decode(expectedPublicKeyAt1023B, expectedPublicKeyAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.PublicKey, expectedPublicKeyAt1023B) {
		t.Fatalf("incorrect public key, wanted %x but received %x", expectedPublicKeyAt1023B, deposits[1023].Data.PublicKey)
	}
	expectedWithdrawalCredentialsAt1023 := []byte("0038906e54ed9aa3a4c5e0adafdafe7d203d4c8fb215c1b395aae866dbf2f04a")
	expectedWithdrawalCredentialsAt1023B := make([]byte, hex.DecodedLen(len(expectedWithdrawalCredentialsAt1023)))
	_, err = hex.Decode(expectedWithdrawalCredentialsAt1023B, expectedWithdrawalCredentialsAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.WithdrawalCredentials, expectedWithdrawalCredentialsAt1023B) {
		t.Fatalf("incorrect withdrawal credentials, wanted %x but received %x", expectedWithdrawalCredentialsAt1023B, deposits[1023].Data.WithdrawalCredentials)
	}
	dRootAt1023 := []byte("de97036d3c6bce627279d4115b885392480593c51f759b490bfee341287d66ff")
	dRootAt1023B := make([]byte, hex.DecodedLen(len(dRootAt1023)))
	_, err = hex.Decode(dRootAt1023B, dRootAt1023)
	require.NoError(t, err)
	if !bytes.Equal(depositDataRoots[1023][:], dRootAt1023B) {
		t.Fatalf("incorrect deposit data root, wanted %#x but received %#x", dRootAt1023B, depositDataRoots[1023])
	}
	sigAt1023 := []byte("")
	sigAt1023B := make([]byte, hex.DecodedLen(len(sigAt1023)))
	_, err = hex.Decode(sigAt1023B, sigAt1023)
	require.NoError(t, err)
	if !bytes.Equal(deposits[1023].Data.Signature, sigAt1023B) {
		t.Fatalf("incorrect signature, wanted %#x but received %#x", sigAt1023B, deposits[1023].Data.Signature)
	}
}

func TestDepositTrieFromDeposits(t *testing.T) {
	deposits, _, err := DeterministicDepositsAndKeys(100)
	require.NoError(t, err)
	executionData, err := DeterministicExecutionData(len(deposits))
	require.NoError(t, err)

	depositTrie, _, err := DepositTrieFromDeposits(deposits)
	require.NoError(t, err)

	root, err := depositTrie.HashTreeRoot()
	if err != nil {
		t.Fatal(err)
	}
	if !bytes.Equal(root[:], executionData.DepositRoot) {
		t.Fatal("expected deposit trie root to equal executionData deposit root")
	}
}
